<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary>
              公开支持同步和异步读取和写入操作的匿名管道流的客户端。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的指定的字符串表示形式的管道句柄。
            </summary>
      <param name="pipeHandleAsString">
                表示管道句柄的字符串。
              </param>
      <exception cref="T:System.IO.IOException">
        <paramref name="pipeHandleAsString" /> 不是有效的管道句柄。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类从指定句柄。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              
                匿名管道只能在一个方向，因此 <paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
              </param>
      <param name="safePipeHandle">
                安全句柄的管道此 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象将封装。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle " />不是有效的句柄。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  发生 I/O 错误，如磁盘错误。
                
                  - 或 -
                
                  已关闭流。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 带有指定的管道方向和管道句柄的字符串表示的类。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              
                匿名管道只能在一个方向，因此 <paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
              </param>
      <param name="pipeHandleAsString">
                表示管道句柄的字符串。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeHandleAsString" /> 是无效的句柄。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeHandleAsString" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary>
              释放非托管的资源并执行其他清理操作之前 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 通过垃圾回收回收实例。
            </summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary>
              设置的读取模式 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象。
            </summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 为 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  传输模式不是有效的。
                   对于匿名管道，仅 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> 支持。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  传输模式是 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  连接已断开或出现其他 I/O 错误。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary>
              获取当前管道支持的管道传输模式。
            </summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 当前管道支持。
            </returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary>
              公开周围匿名管道，支持同步和异步读取和写入操作的流。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary>
              初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 具有所指定的管道方向的类。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              
                匿名管道只能在一个方向，因此 <paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
              </param>
      <exception cref="T:System.NotSupportedException">
                  将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类，具有指定的管道方向和继承模式。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              
                匿名管道只能在一个方向，因此 <paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
              </param>
      <param name="inheritability">
                确定基础句柄能否由子进程继承的枚举值之一。
                 必须将其设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> 未设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类从指定的管道句柄。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              
                匿名管道只能在一个方向，因此 <paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
              </param>
      <param name="serverSafePipeHandle">
                安全句柄的管道此 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象将封装。
              </param>
      <param name="clientSafePipeHandle">
                安全句柄 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverSafePipeHandle" /> 或 <paramref name="clientSafePipeHandle" /> 是无效的句柄。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverSafePipeHandle" /> 或 <paramref name="clientSafePipeHandle" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  发生 I/O 错误，如磁盘错误。
                
                  - 或 -
                
                  已关闭流。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类具有指定的管道方向、 继承模式和缓冲区大小。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              
                匿名管道只能在一个方向，因此 <paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
              </param>
      <param name="inheritability">
                确定基础句柄能否由子进程继承的枚举值之一。
                 必须将其设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。
              </param>
      <param name="bufferSize">
                缓冲区的大小。
                 此值必须大于或等于 0。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" /> 未设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。
                
                  - 或 -
                
                  <paramref name="bufferSize" /> 小于 0。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary>
              获取的安全句柄 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象当前已连接到 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。
            </summary>
      <returns>
              句柄 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象当前已连接到 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary>
              关闭的本地副本 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary>
              释放非托管的资源并执行其他清理操作之前 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 通过垃圾回收回收实例。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary>
              获取已连接 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 作为字符串的对象的句柄。
            </summary>
      <returns>
              一个字符串，表示已连接 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄。
            </returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary>
              设置的读取模式 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。
               对于匿名管道传输模式必须为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />。
            </summary>
      <returns>
              读取模式 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  传输模式不是有效的。
                   对于匿名管道，仅 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> 支持。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  该属性设置为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, ，它不支持匿名管道。
                </exception>
      <exception cref="T:System.IO.IOException">
                  连接已断开或出现其他 I/O 错误。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary>
              获取当前管道支持的管道传输模式。
            </summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 当前管道支持。
            </returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary>
              公开 <see cref="T:System.IO.Stream" /> 周围命名管道，支持同步和异步读取和写入操作。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 初始化具有指定的管道名称。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类具有指定的管道和服务器名称。
            </summary>
      <param name="serverName">
                要连接的远程计算机的名称，或者为“.”，以指定本地计算机。
              </param>
      <param name="pipeName">
                管道的名称。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是零长度字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 带有指定的管道和服务器名称和指定的管道方向的类。
            </summary>
      <param name="serverName">
                要连接的远程计算机的名称，或者为“.”，以指定本地计算机。
              </param>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是零长度字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 为指定的管道方向与指定的管道句柄。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="isAsync">
        <see langword="true" /> 指示句柄已异步打开；否则为 <see langword="false" />。
              </param>
      <param name="isConnected">
        <see langword="true" /> 若要指示管道已连接;否则为 <see langword="false" />。
              </param>
      <param name="safePipeHandle">
                安全句柄的管道此 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 对象将封装。
              </param>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> 不是有效的句柄。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> 不是有效的句柄。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已关闭流。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 使用指定的管道和服务器名称，以及指定的管道方向和管道选项的类。
            </summary>
      <param name="serverName">
                要连接的远程计算机的名称，或者为“.”，以指定本地计算机。
              </param>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="options">
                确定如何打开或创建管道的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是零长度字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 使用指定的管道和服务器名称，以及指定的管道方向、 管道选项、 和安全模拟级别的类。
            </summary>
      <param name="serverName">
                要连接的远程计算机的名称，或者为“.”，以指定本地计算机。
              </param>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="options">
                确定如何打开或创建管道的枚举值之一。
              </param>
      <param name="impersonationLevel">
                确定安全模拟级别的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是零长度字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。
                
                  - 或 -
                
                  <paramref name="impersonationLevel" /> 不是有效的 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类具有指定的管道和服务器名称、 所指定的管道方向、 管道选项、 安全模拟级别和继承模式。
            </summary>
      <param name="serverName">
                要连接的远程计算机的名称，或者为“.”，以指定本地计算机。
              </param>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="options">
                确定如何打开或创建管道的枚举值之一。
              </param>
      <param name="impersonationLevel">
                确定安全模拟级别的枚举值之一。
              </param>
      <param name="inheritability">
                确定基础句柄是否将由子进程继承的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是零长度字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。
                
                  - 或 -
                
                  <paramref name="impersonationLevel" /> 不是有效的 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。
                
                  - 或 -
                
                  <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary>
              连接到具有无限超时值的等待的服务器。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  已连接客户端。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary>
              在指定的超时期间内连接到等待的服务器。
            </summary>
      <param name="timeout">
                在连接超时之前等待服务器响应的毫秒数。
              </param>
      <exception cref="T:System.TimeoutException">
                  无法连接到在指定服务器 <paramref name="timeout" /> 段。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> 小于 0，且未设置为 <see cref="F:System.Threading.Timeout.Infinite" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已连接客户端。
                </exception>
      <exception cref="T:System.IO.IOException">
                  服务器连接到另一个客户端和超时期限已过。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary>
              在无限超时期间内异步连接到等待的服务器。
            </summary>
      <returns>
              表示异步连接操作的任务。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary>
              在指定的超时期间内异步连接到等待的服务器。
            </summary>
      <param name="timeout">
                在连接超时之前等待服务器响应的毫秒数。
              </param>
      <returns>
              表示异步连接操作的任务。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary>
              异步连接到等待的服务器并监视取消请求。
            </summary>
      <param name="cancellationToken">
                要监视取消请求的标记。
                 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。
              </param>
      <returns>
              表示异步连接操作的任务。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>
              在指定的超时期间内异步连接到等待的服务器并监视取消请求。
            </summary>
      <param name="timeout">
                在连接超时之前等待服务器响应的毫秒数。
              </param>
      <param name="cancellationToken">
                要监视取消请求的标记。
                 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。
              </param>
      <returns>
              表示异步连接操作的任务。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary>
              释放非托管的资源并执行其他清理操作之前 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 通过垃圾回收回收实例。
            </summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary>
              获取共享同一管道名称的服务器实例的数量。
            </summary>
      <returns>
              共享同一管道名称的服务器实例的数量。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未设置管道句柄。
                
                  - 或 -
                
                  当前 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 对象尚未连接到 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或发生了 I/O 错误。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  关闭基础管道句柄。
                </exception>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary>
              公开 <see cref="T:System.IO.Stream" /> 命名管道周围程序支持同步和异步读取和写入操作。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 初始化具有指定的管道名称。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  操作系统是 Windows Millennium Edition、 Windows 98 或 Windows 95 中，这不受支持。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 使用指定的管道名称、 管道方向、 最大数目的服务器实例、 传输模式、 管道选项、 和建议的输入输出缓冲区大小。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="maxNumberOfServerInstances">
                共享同一名称的服务器实例的最大数量。
                 您可以将传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> 为此值。
              </param>
      <param name="transmissionMode">
                确定管道传输模式的枚举值之一。
              </param>
      <param name="options">
                确定如何打开或创建管道的枚举值之一。
              </param>
      <param name="inBufferSize">
                一个大于 0 的正值，指示输入缓冲区大小。
              </param>
      <param name="outBufferSize">
                一个大于 0 的正值，指示输出缓冲区大小。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="maxNumberofServerInstances" /> 小于-1 或更高版本超过 254 个字符 (-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)
                
                  - 或 -
                
                  <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。
                
                  - 或 -
                
                  <paramref name="inBufferSize" /> 为负数。
                </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  操作系统是 Windows Millennium Edition、 Windows 98 或 Windows 95 中，这不受支持。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类，具有指定的管道名称、 管道方向、 最大数量的服务器实例、 传输模式和管道选项。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="maxNumberOfServerInstances">
                共享同一名称的服务器实例的最大数量。
                 您可以将传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> 为此值。
              </param>
      <param name="transmissionMode">
                确定管道传输模式的枚举值之一。
              </param>
      <param name="options">
                确定如何打开或创建管道的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="maxNumberofServerInstances" /> 小于-1 或更高版本超过 254 个字符 (-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)
                
                  - 或 -
                
                  <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。
                </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  操作系统是 Windows Millennium Edition、 Windows 98 或 Windows 95 中，这不受支持。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类从指定的管道句柄。
            </summary>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="isAsync">
        <see langword="true" /> 指示句柄已异步打开；否则为 <see langword="false" />。
              </param>
      <param name="isConnected">
        <see langword="true" /> 若要指示管道已连接;否则为 <see langword="false" />。
              </param>
      <param name="safePipeHandle">
                安全句柄的管道此 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象将封装。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" /> 是无效的句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" /> 不是有效的管道句柄。
                
                  - 或 -
                
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>
              使用指定的管道名称、管道方向和最大数量的服务器实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的一个新实例。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="maxNumberOfServerInstances">
                共享同一名称的服务器实例的最大数量。
                 可以为此值传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为“匿名”。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  需要非负数。
                
                  - 或 -
                
                  <paramref name="maxNumberofServerInstances" /> 小于 -1 或大于 254（-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />）
                
                  - 或 -
                
                  需要 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。
                
                  - 或 -
                
                  访问权限仅限于 <see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" />、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> 和 <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> 标志。
                </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 使用指定的管道名称和管道方向的类。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  操作系统是 Windows Millennium Edition、 Windows 98 或 Windows 95 中，这不受支持。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary>
              新实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 使用指定的管道名称、 管道方向、 最大数量的服务器实例和传输模式的类。
            </summary>
      <param name="pipeName">
                管道的名称。
              </param>
      <param name="direction">
                确定管道方向的枚举值之一。
              </param>
      <param name="maxNumberOfServerInstances">
                共享同一名称的服务器实例的最大数量。
                 您可以将传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> 为此值。
              </param>
      <param name="transmissionMode">
                确定管道传输模式的枚举值之一。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 是一个长度为零的字符串。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" /> 设置为"anonymous"。
                
                  - 或 -
                
                  <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="maxNumberofServerInstances" /> 小于-1 或更高版本超过 254 个字符 (-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)
                </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" /> 包含一个冒号 (":")。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  操作系统是 Windows Millennium Edition、 Windows 98 或 Windows 95 中，这不受支持。
                </exception>
      <exception cref="T:System.IO.IOException">
                  已超出服务器实例的最大数量。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary>
              开始异步操作以等待客户端建立连接。
            </summary>
      <param name="callback">
                当客户端连接时要调用的方法 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。
              </param>
      <param name="state">
                一个用户提供的对象，它将该特定的异步请求与其他请求区别开来。
              </param>
      <returns>
              一个引用该异步请求的对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  不以异步方式打开管道。
                
                  - 或 -
                
                  已建立管道连接。
                
                  - 或 -
                
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道连接已中断。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary>
              断开当前连接。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  尚未建立任何管道连接。
                
                  - 或 -
                
                  已断开连接的管道。
                
                  - 或 -
                
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary>
              结束异步操作以等待客户端建立连接。
            </summary>
      <param name="asyncResult">
                挂起的异步请求。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  不以异步方式打开管道。
                
                  - 或 -
                
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道连接已中断。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary>
              释放非托管的资源并执行其他清理操作之前 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 通过垃圾回收回收实例。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary>
              获取管道另一端的客户端用户名。
            </summary>
      <returns>
              管道另一端的客户端用户名。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未建立任何管道连接。
                
                  - 或 -
                
                  已断开连接的管道。
                
                  - 或 -
                
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道连接已中断。
                
                  - 或 -
                
                  客户端的用户名的长度超过 19 个字符。
                </exception>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary>
              表示系统资源允许的服务器实例的最大数量。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary>
              模拟客户端时调用委托。
            </summary>
      <param name="impersonationWorker">
                指定要调用的方法的委托。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  尚未建立任何管道连接。
                
                  - 或 -
                
                  已断开连接的管道。
                
                  - 或 -
                
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道连接已中断。
                
                  - 或 -
                
                  出现 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary>
              等待客户端连接到该 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。
            </summary>
      <exception cref="T:System.InvalidOperationException">
                  已建立管道连接。
                
                  - 或 -
                
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道连接已中断。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary>
              以异步方式等待客户端连接到该 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。
            </summary>
      <returns>
              表示异步等待操作的任务。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary>
              异步等待客户端连接到该 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象并监视取消请求。
            </summary>
      <param name="cancellationToken">
                要监视取消请求的标记。
              </param>
      <returns>
              表示异步等待操作的任务。
            </returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary>
              指定管道的方向。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary>
              指定的管道方向为向内。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary>
              指定的管道方向是双向的。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary>
              指定的管道方向为向外。
            </summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary>
              提供用于创建选项 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。
               此枚举有一个允许其成员值按位组合的 <see cref="T:System.FlagsAttribute" /> 属性。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary>
              指示管道可用于异步读取和写入。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary>
              指示没有任何其他参数。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary>
              指示系统应编写通过任何中间缓存并直接转到管道。
            </summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary>
              公开管道周围的 <see cref="T:System.IO.Stream" /> 对象，该对象同时支持匿名管道和命名管道。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>
              使用指定的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值和缓冲区大小初始化 <see cref="T:System.IO.Pipes.PipeStream" /> 类的一个新实例。
            </summary>
      <param name="direction">
        <see cref="T:System.IO.Pipes.PipeDirection" /> 值之一，指示管道对象的方向。
              </param>
      <param name="bufferSize">
                一个大于或等于 0 的正 <see cref="T:System.Int32" /> 值，指示缓冲区大小。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="bufferSize" /> 小于 0。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary>
              使用指定的 <see cref="T:System.IO.Pipes.PipeDirection" />、<see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 和缓冲区大小初始化 <see cref="T:System.IO.Pipes.PipeStream" /> 类的一个新实例。
            </summary>
      <param name="direction">
        <see cref="T:System.IO.Pipes.PipeDirection" /> 值之一，指示管道对象的方向。
              </param>
      <param name="transmissionMode">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值之一，指示管道对象的传输模式。
              </param>
      <param name="outBufferSize">
                一个大于或等于 0 的正 <see cref="T:System.Int32" /> 值，指示缓冲区大小。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
                
                  - 或 -
                
                  <paramref name="transmissionMode" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值。
                
                  - 或 -
                
                  <paramref name="bufferSize" /> 小于 0。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始异步读操作。
            </summary>
      <param name="buffer">
                将数据读入的缓冲区。
              </param>
      <param name="offset">
        <paramref name="buffer" /> 中的字节偏移量，从此处开始读取。
              </param>
      <param name="count">
                最多读取的字节数。
              </param>
      <param name="callback">
                异步读操作完成后调用的方法。
              </param>
      <param name="state">
                一个用户提供的对象，它将该特定的异步读取请求与其他请求区别开来。
              </param>
      <returns>
              引用异步读取的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持读取操作。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  管道已断开连接，正在等待连接，或未设置句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始异步写操作。
            </summary>
      <param name="buffer">
                包含要写入当前流的数据的缓冲区。
              </param>
      <param name="offset">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。
              </param>
      <param name="count">
                最多写入的字节数。
              </param>
      <param name="callback">
                异步写操作完成后调用的方法。
              </param>
      <param name="state">
                一个用户提供的对象，它将该特定的异步写入请求与其他请求区别开来。
              </param>
      <returns>
              一个引用异步写操作的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持写入操作。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  管道已断开连接，正在等待连接，或未设置句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary>
              获取一个值，该值指示当前流是否支持读操作。
            </summary>
      <returns>
              如果流支持读操作，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary>
              获取一个值，该值指示当前流是否支持查找操作。
            </summary>
      <returns>
              在所有情况下均为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary>
              获取一个值，该值指示当前流是否支持写操作。
            </summary>
      <returns>
              如果流支持写操作，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary>
              验证管道是否处于可供获取或设置属性的正确状态。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary>
              验证管道是否处于可供进行读操作的连接状态。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary>
              验证管道是否处于可供进行写操作的连接状态。
            </summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary>
              释放 <see cref="T:System.IO.Pipes.PipeStream" /> 类使用的非托管资源，并可以选择释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary>
              结束挂起的异步读取请求。
            </summary>
      <param name="asyncResult">
                对挂起的异步请求的引用。
              </param>
      <returns>
              已读取的字节数。
               返回值 0 指示已到达流的末尾（管道已关闭）。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不源于当前流的 <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法。
                </exception>
      <exception cref="T:System.IO.IOException">
                  流已关闭或出现了内部错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary>
              结束挂起的异步写入请求。
            </summary>
      <param name="asyncResult">
                对挂起的异步请求的引用。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是源自当前流的 <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法。
                </exception>
      <exception cref="T:System.IO.IOException">
                  流已关闭或出现了内部错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary>
              清除当前流的缓冲区，并使所有缓冲的数据都写入到基础设备。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持写入操作。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary>
              获取管道的入站缓冲区的大小（以字节为单位）。
            </summary>
      <returns>
              一个整数值，表示入站缓冲区的大小（以字节为单位）。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  流不可读。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  管道正在等待连接。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary>
              从指定的 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 对象中初始化 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。
            </summary>
      <param name="handle">
                要初始化的管道的 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 对象。
              </param>
      <param name="isExposed">
                要公开句柄，则为 <see langword="true" />；否则为 <see langword="false" />。
              </param>
      <param name="isAsync">
        <see langword="true" /> 指示句柄已异步打开；否则为 <see langword="false" />。
              </param>
      <exception cref="T:System.IO.IOException">
                  句柄无法绑定到管道中。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary>
              获取一个值，该值指示 <see cref="T:System.IO.Pipes.PipeStream" /> 对象是异步打开还是同步打开。
            </summary>
      <returns>
              如果 <see cref="T:System.IO.Pipes.PipeStream" /> 对象是异步打开的，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary>
              获取或设置一个值，该值指示是否已连接 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。
            </summary>
      <returns>
              如果已连接 <see cref="T:System.IO.Pipes.PipeStream" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary>
              获取一个值，该值指示是否公开了 <see cref="T:System.IO.Pipes.PipeStream" /> 对象的句柄。
            </summary>
      <returns>
              如果公开了 <see cref="T:System.IO.Pipes.PipeStream" /> 对象的句柄，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary>
              获取一个值，该值指示最近的读操作返回的消息中是否有更多数据。
            </summary>
      <returns>
              如果消息中没有更多要读取的字符，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  管道不可连接。
                
                  - 或 -
                
                  尚未设置管道句柄。
                
                  - 或 -
                
                  管道的 <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> 属性值不是 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary>
              获取流长度（以字节为单位）。
            </summary>
      <returns>
              在所有情况下均为 0。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  始终引发。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary>
              获取管道的出站缓冲区的大小（以字节为单位）。
            </summary>
      <returns>
              出站缓冲区的大小（以字节为单位）。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  该流不可写入。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  该管道正在等待连接。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary>
              获取或设置当前流的当前位置。
            </summary>
      <returns>
              在所有情况下均为 0。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  始终引发。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
              从流中读取字节块，并将数据写入指定的缓冲区。
            </summary>
      <param name="buffer">
                此方法返回时包含指定的字节数组，数组中 <paramref name="offset" /> 和 (<paramref name="offset" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字节替换。
              </param>
      <param name="offset">
        <paramref name="buffer" /> 数组中的字节偏移量，其中读取的字节将被替换。
              </param>
      <param name="count">
                最多读取的字节数。
              </param>
      <returns>
              读取到 <paramref name="buffer" /> 的总字节数。
               如果当前可用的字节数没有请求的那么多，则此数小于请求的字节数；或如果已到达流的末尾，则为零。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持读取操作。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  管道已断开连接，正在等待连接，或尚未设置句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  发生了 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <param name="buffer">
      </param>
      <param name="offset">
      </param>
      <param name="count">
      </param>
      <param name="cancellationToken">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary>
              从管道读取字节。
            </summary>
      <returns>
              强制转换为 <see cref="T:System.Int32" /> 的字节或 -1 指示到达流的末尾（管道已关闭）。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持读取操作。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  管道已断开连接，正在等待连接，或尚未设置句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  发生了 I/O 错误。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary>
              获取或设置 <see cref="T:System.IO.Pipes.PipeStream" /> 对象的读取模式。
            </summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值之一，指示如何从管道读取 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  所提供的值不是有效的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  所提供的值不是此管道流支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未设置句柄。
                
                  - 或 -
                
                  此管道正在等待与命名的客户端进行连接。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已中断，或命名的客户端发生了 I/O 错误。
                </exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary>
              获取当前 <see cref="T:System.IO.Pipes.PipeStream" /> 对象所封装的本地管道末端的安全句柄。
            </summary>
      <returns>
              由当前 <see cref="T:System.IO.Pipes.PipeStream" /> 对象所封装的管道的一个 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  尚未设置管道句柄。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
              将当前流的当前位置设置为指定值。
            </summary>
      <param name="offset">
                相对于 <paramref name="origin" /> 的点，从此处开始查找。
              </param>
      <param name="origin">
                使用 <see cref="T:System.IO.SeekOrigin" /> 类型的值，将开始位置、结束位置或当前位置指定为 <paramref name="offset" /> 的参考点。
              </param>
      <returns>
              流中的新位置。
            </returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary>
              将当前流的长度设为指定值。
            </summary>
      <param name="value">
                流的新长度。
              </param>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary>
              获取当前管道支持的管道传输模式。
            </summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值之一，指示当前管道支持的传输模式。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尚未设置句柄。
                
                  - 或 -
                
                  管道正在等待在匿名客户端/服务器操作中进行连接或与命名客户端连接。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary>
              等待管道另一端读取所有发送的字节。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持写入操作。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
              使用缓冲区中的数据将字节块写入当前流。
            </summary>
      <param name="buffer">
                包含要写入管道的数据的缓冲区。
              </param>
      <param name="offset">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。
              </param>
      <param name="count">
                要写入当前流的最大字节数。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0。
                
                  - 或 -
                
                  <paramref name="count" /> 小于 0。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持写入操作。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <param name="buffer">
      </param>
      <param name="offset">
      </param>
      <param name="count">
      </param>
      <param name="cancellationToken">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary>
              将字节写入当前流。
            </summary>
      <param name="value">
                要写入流中的字节。
              </param>
      <exception cref="T:System.ObjectDisposedException">
                  管道已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  管道不支持写入操作。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  管道已断开连接，正在等待连接，或未设置句柄。
                </exception>
      <exception cref="T:System.IO.IOException">
                  管道已损坏或出现其他 I/O 错误。
                </exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary>
              表示要与客户端调用的方法。
            </summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary>
              指定管道的传输模式。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary>
              指示是发送和读取的字节流的形式在管道中的数据。
            </summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary>
              指示是发送和读取的消息流的形式在管道中的数据。
            </summary>
    </member>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary>
              表示管道句柄的包装类。
            </summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>
              初始化 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 类的新实例。
            </summary>
      <param name="preexistingHandle">
        <see cref="T:System.IntPtr" /> 对象，表示要使用的预先存在的句柄。
              </param>
      <param name="ownsHandle">
                若要在终止阶段可靠地释放此句柄，则为 <see langword="true" />；若要阻止可靠释放（不建议使用），则为 <see langword="false" />。
              </param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid">
      <returns>
      </returns>
    </member>
  </members>
</doc>