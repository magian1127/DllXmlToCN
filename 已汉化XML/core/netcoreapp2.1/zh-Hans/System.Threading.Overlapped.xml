<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.ThreadPoolBoundHandle">
      <summary>
              表示已绑定到系统线程池的 I/O 句柄，并使低级别组件能够接收异步 I/O 操作的通知。
            </summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <summary>
              返回指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针，该结构使用与指定 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 对象关联的回调状态和缓冲区。
            </summary>
      <param name="preAllocated">
                要从其中创建 <see cref="T:System.Threading.NativeOverlapped" /> 指针的对象。
              </param>
      <returns>
              一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="preAllocated" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  另一 I/O 操作当前正在使用 <paramref name="preAllocated" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 后调用此方法。
                
                  - 或 -
                
                  在释放 <paramref name="preAllocated" /> 后调用此方法。
                </exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary>
              向 <see cref="T:System.Threading.NativeOverlapped" /> 结构返回一个非托管指针，指定在异步 I/O 操作完成时调用的委托、可提供上下文的用户提供的对象，以及充当缓冲区的托管对象。
            </summary>
      <param name="callback">
                一个委托，表示在异步 I/O 操作完成时调用的回调方法。
              </param>
      <param name="state">
                用户提供的对象，用于区分此 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例。
              </param>
      <param name="pinData">
                一个对象或对象数组，用于表示操作的输入和输出缓冲区，或者表示 <see langword="null" />。
                 每个对象（如字节数组）表示一个缓冲区。
              </param>
      <returns>
              一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  在释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 对象后调用此方法。
                </exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <summary>
              为指定句柄返回 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，后者已绑定到系统线程池。
            </summary>
      <param name="handle">
                保存操作系统句柄的对象。
                 必须在非托管代码中为重叠 I/O 打开句柄。
              </param>
      <returns>
        <paramref name="handle" /> 的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，后者已绑定到系统线程池。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  已释放 <paramref name="handle" />。
                
                  - 或 -
                
                  <paramref name="handle" /> 未引用有效的 I/O 句柄。
                
                  - 或 -
                
                  <paramref name="handle" /> 引用的句柄没有为重叠 I/O 打开。
                
                  - 或 -
                
                  <paramref name="handle" /> 引用了已绑定的句柄。
                </exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <summary>
              释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 实例使用的所有非托管资源。
            </summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <summary>
              释放与 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法分配的 <see cref="T:System.Threading.NativeOverlapped" /> 结构关联的内存。
            </summary>
      <param name="overlapped">
                一个非托管指针，指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="overlapped" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  在释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 对象后调用此方法。
                </exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <summary>
              返回用户提供的对象，该对象在通过调用 <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> 方法分配 <see cref="T:System.Threading.NativeOverlapped" /> 实例时指定。
            </summary>
      <param name="overlapped">
                指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针，将从该结构中返回用户提供的关联对象。
              </param>
      <returns>
              用户提供的对象，用于区分此 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例，或者，如果在通过调用 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法分配实例时未进行指定，则为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="overlapped" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <summary>
              获取绑定的操作系统句柄。
            </summary>
      <returns>
              一个对象，保存绑定的操作系统句柄。
            </returns>
    </member>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary>
              将在线程池上的 I/O 操作完成时收到错误代码的字节数和重叠的值类型。
            </summary>
      <param name="errorCode">
                错误代码。
              </param>
      <param name="numBytes">
                传输的字节数。
              </param>
      <param name="pOVERLAP">
                一个 <see cref="T:System.Threading.NativeOverlapped" /> 到本机的重叠的值类型表示的非托管的指针。
              </param>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary>
              提供可从非托管代码查看的显式布局，与 Win32 OVERLAPPED 结构的布局相同，末尾具有其他保留字段。
            </summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary>
              指定事件时，才完成操作，设置为终止状态的句柄。
               调用进程必须将此成员设置为零或调用任何重叠的函数之前处理有效的事件。
            </summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary>
              指定传输的数据的长度。
               保留供操作系统使用。
            </summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary>
              指定依赖于系统的状态。
               保留供操作系统使用。
            </summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary>
              指定的字节偏移量开始将传输的高位字。
            </summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary>
              指定从其开始传输一个文件位置。
            </summary>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary>
              提供 Win32 OVERLAPPED 结构的托管表现形式，包括从 <see cref="T:System.Threading.Overlapped" /> 实例向 <see cref="T:System.Threading.NativeOverlapped" /> 结构传输信息的方式。
            </summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary>
              初始化新的空实例 <see cref="T:System.Threading.Overlapped" /> 类。
            </summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <summary>
              新实例初始化 <see cref="T:System.Threading.Overlapped" /> 类，具有指定的文件位置，在 I/O 操作完成后，终止的事件，以及一个用其返回操作的结果接口的 32 位整数句柄。
            </summary>
      <param name="offsetLo">
                若要启动传输的文件位置低位字。
              </param>
      <param name="offsetHi">
                若要启动传输的文件位置高位字。
              </param>
      <param name="hEvent">
                当 I/O 操作完成时终止的事件句柄。
              </param>
      <param name="ar">
                实现的对象 <see cref="T:System.IAsyncResult" /> 接口，并提供 I/O 操作的状态信息。
              </param>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <summary>
              新实例初始化 <see cref="T:System.Threading.Overlapped" /> 类，具有指定的文件位置，在 I/O 操作完成后，终止的事件，以及一个用来返回操作的结果的接口的句柄。
            </summary>
      <param name="offsetLo">
                若要启动传输的文件位置低位字。
              </param>
      <param name="offsetHi">
                若要启动传输的文件位置高位字。
              </param>
      <param name="hEvent">
                当 I/O 操作完成时终止的事件句柄。
              </param>
      <param name="ar">
                实现的对象 <see cref="T:System.IAsyncResult" /> 接口，并提供 I/O 操作的状态信息。
              </param>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary>
              获取或设置提供 I/O 操作的状态信息的对象。
            </summary>
      <returns>
              一个实现 <see cref="T:System.IAsyncResult" /> 接口的对象。
            </returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandle">
      <summary>
              获取或设置当 I/O 操作完成时终止的同步事件的 32 位整数句柄。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值表示同步事件的句柄。
            </returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandleIntPtr">
      <summary>
              获取或设置当 I/O 操作完成时终止该同步事件的句柄。
            </summary>
      <returns>
        <see cref="T:System.IntPtr" /> 表示事件的句柄。
            </returns>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary>
              释放与分配的本机重叠结构相关联的非托管的内存 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法。
            </summary>
      <param name="nativeOverlappedPtr">
                一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 要释放的结构。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary>
              获取或设置启动传输的文件位置的高序位字。
               文件位置是从该文件的起始位置的字节偏移量。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值表示文件位置的高位字。
            </returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary>
              获取或设置启动传输的文件位置的低序位字。
               文件位置是从该文件的起始位置的字节偏移量。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值表示文件位置的低位字。
            </returns>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <summary>
              当前实例打包为 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定要在异步 I/O 操作完成时调用的委托。
            </summary>
      <param name="iocb">
        <see cref="T:System.Threading.IOCompletionCallback" /> 表示异步 I/O 操作完成时调用的回调方法的委托。
              </param>
      <returns>
              指向非托管的指针 <see cref="T:System.Threading.NativeOverlapped" /> 结构。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  当前 <see cref="T:System.Threading.Overlapped" /> 已打包。
                </exception>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>
              当前实例打包为 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定异步 I/O 操作完成时调用的委托并且作为缓冲区的托管的对象。
            </summary>
      <param name="iocb">
        <see cref="T:System.Threading.IOCompletionCallback" /> 表示异步 I/O 操作完成时调用的回调方法的委托。
              </param>
      <param name="userData">
                一个对象或数组，这些对象表示该操作的输入或输出缓冲区。
                 每个对象表示一个缓冲区，例如一个字节数组。
              </param>
      <returns>
              指向非托管的指针 <see cref="T:System.Threading.NativeOverlapped" /> 结构。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  当前 <see cref="T:System.Threading.Overlapped" /> 已打包。
                </exception>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary>
              解包指定的非托管 <see cref="T:System.Threading.NativeOverlapped" /> 结构转换为托管 <see cref="T:System.Threading.Overlapped" /> 对象。
            </summary>
      <param name="nativeOverlappedPtr">
                指向非托管的指针 <see cref="T:System.Threading.NativeOverlapped" /> 结构。
              </param>
      <returns>
        <see cref="T:System.Threading.Overlapped" /> 对象包含的信息的本机结构中解压缩。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <summary>
              当前实例打包为 <see cref="T:System.Threading.NativeOverlapped" /> 结构，它指定要在异步 I/O 操作已完成时调用的委托。
               不传播到调用堆栈。
            </summary>
      <param name="iocb">
        <see cref="T:System.Threading.IOCompletionCallback" /> 表示异步 I/O 操作完成时调用的回调方法的委托。
              </param>
      <returns>
              指向非托管的指针 <see cref="T:System.Threading.NativeOverlapped" /> 结构。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  当前 <see cref="T:System.Threading.Overlapped" /> 已打包。
                </exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>
              当前实例打包为 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定要在异步 I/O 操作已完成和托管对象时调用的委托作为缓冲区。
               不传播到调用堆栈。
            </summary>
      <param name="iocb">
        <see cref="T:System.Threading.IOCompletionCallback" /> 表示异步 I/O 操作完成时调用的回调方法的委托。
              </param>
      <param name="userData">
                一个对象或数组，这些对象表示该操作的输入或输出缓冲区。
                 每个对象表示一个缓冲区，例如一个字节数组。
              </param>
      <returns>
              指向非托管的指针 <see cref="T:System.Threading.NativeOverlapped" /> 结构。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  当前 <see cref="T:System.Threading.Overlapped" /> 已填满。
                </exception>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped">
      <summary>
              表示本机重叠 I/O 操作的预分配状态。
            </summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary>
              初始化 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 类的新实例，并指定在每个异步 I/O 操作完成时调用的委托、可提供上下文的用户提供的对象以及充当缓冲区的托管对象。
            </summary>
      <param name="callback">
                一个委托，表示在每个异步 I/O 操作完成时调用的回调方法。
              </param>
      <param name="state">
                用户提供的对象，可用于区分从此对象生成的 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例。
                 其值可为 <see langword="null" />。
              </param>
      <param name="pinData">
                一个对象或对象数组，用于表示操作的输入和输出缓冲区。
                 每个对象（如字节数组）表示一个缓冲区。
                 其值可为 <see langword="null" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 后调用此方法。
                </exception>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <summary>
              释放与此 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 实例关联的资源。
            </summary>
    </member>
  </members>
</doc>