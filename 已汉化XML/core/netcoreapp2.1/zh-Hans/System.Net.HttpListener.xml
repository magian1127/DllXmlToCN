<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.HttpListener</name>
  </assembly>
  <members>
    <member name="T:System.Net.HttpListener.ExtendedProtectionSelector">
      <summary>
              调用的委托来确定 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 以用于每 <see cref="T:System.Net.HttpListener" /> 请求。
            </summary>
      <param name="request">
        <see cref="T:System.Net.HttpListenerRequest" /> 来确定的扩展的保护策略， <see cref="T:System.Net.HttpListener" /> 实例将用于提供扩展的保护。
              </param>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 对象，它指定要用于此请求的扩展的保护策略。
            </returns>
    </member>
    <member name="T:System.Net.HttpListener">
      <summary>
              提供一个简单的、可通过编程方式控制的 HTTP 协议侦听器。
               无法继承此类。
            </summary>
    </member>
    <member name="M:System.Net.HttpListener.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.HttpListener" /> 类的新实例。
            </summary>
      <exception cref="T:System.PlatformNotSupportedException">
                  此类不能在当前操作系统上使用。
                   Windows Server 2003 或 Windows XP SP2 被需要使用此类的实例。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.Abort">
      <summary>
              立刻关闭 <see cref="T:System.Net.HttpListener" /> 对象，这样会放弃所有当前排队的请求。
            </summary>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemes">
      <summary>
              获取或设置用于客户端身份验证的方案。
            </summary>
      <returns>
              指示如何对客户端进行身份验证的 <see cref="T:System.Net.AuthenticationSchemes" /> 枚举值的按位组合。
               默认值为 <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
      <summary>
              获取或设置一个委托，调用它来确定用于客户端身份验证的协议。
            </summary>
      <returns>
        <see cref="T:System.Net.AuthenticationSchemeSelector" /> 委托，它调用用于选择身份验证协议的方法。
               默认值为 <see langword="null" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
      <summary>
              开始异步检索传入的请求。
            </summary>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托，引用客户端请求可用时要调用的方法。
              </param>
      <param name="state">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="callback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.Net.HttpListenerException">
                  Win32 函数调用失败。
                   检查异常的 <see cref="P:System.Net.HttpListenerException.ErrorCode" /> 属性来确定该异常的原因。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  此对象尚未启动，或者当前已停止。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.Close">
      <summary>
              关闭 <see cref="T:System.Net.HttpListener" />。
            </summary>
    </member>
    <member name="P:System.Net.HttpListener.DefaultServiceNames">
      <summary>
              获取由已注册前缀确定的服务提供程序名 (SPN) 的默认列表。
            </summary>
      <returns>
              一个包含 SPN 列表的 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。
            </returns>
    </member>
    <member name="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
      <summary>
              完成检索传入的客户端请求的异步操作。
            </summary>
      <param name="asyncResult">
                启动异步操作时获得的 <see cref="T:System.IAsyncResult" /> 对象。
              </param>
      <returns>
              表示客户端请求的 <see cref="T:System.Net.HttpListenerContext" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 未能通过调用 <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> 方法。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> 已调用方法为指定 <paramref name="asyncResult" /> 对象。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionPolicy">
      <summary>
              获取或设置用于会话的扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，它指定要用于扩展保护的策略。
            </returns>
      <exception cref="T:System.ArgumentException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> 属性，但 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 属性不是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> 属性设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> 属性之后 <see cref="M:System.Net.HttpListener.Start" /> 已调用方法。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> 属性被设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
      <summary>
              获取或设置在确定要用于每个请求的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 时调用的委托。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，它指定要用于扩展保护的策略。
            </returns>
      <exception cref="T:System.ArgumentException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> 属性，但 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 属性必须为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> 属性设置为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> 属性之后 <see cref="M:System.Net.HttpListener.Start" /> 已调用方法。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  尝试设置 <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> 不支持扩展的保护的平台上的属性。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.GetContext">
      <summary>
              等待传入的请求，接收到请求时返回。
            </summary>
      <returns>
              表示客户端请求的 <see cref="T:System.Net.HttpListenerContext" /> 对象。
            </returns>
      <exception cref="T:System.Net.HttpListenerException">
                  Win32 函数调用失败。
                   检查异常的 <see cref="P:System.Net.HttpListenerException.ErrorCode" /> 属性来确定该异常的原因。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  此对象尚未启动，或者当前已停止。
                
                  - 或 -
                
                  <see cref="T:System.Net.HttpListener" /> 没有响应的任何统一资源标识符 (URI) 前缀。
                   请参阅“备注”。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.GetContextAsync">
      <summary>
              等待传入请求以作为异步操作。
            </summary>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task`1" />。
            
              表示异步操作的任务对象。
               任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性将返回表示客户端请求的 <see cref="T:System.Net.HttpListenerContext" /> 对象。
            </returns>
    </member>
    <member name="P:System.Net.HttpListener.IgnoreWriteExceptions">
      <summary>
              获取或设置 <see cref="T:System.Boolean" /> 值，该值指定应用程序是否接收 <see cref="T:System.Net.HttpListener" /> 向客户端发送响应时发生的异常。
            </summary>
      <returns>
              如果此 <see cref="T:System.Net.HttpListener" /> 不返回向客户端发送响应时发生的异常，则返回 <see langword="true" />；否则返回 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListener.IsListening">
      <summary>
              获取一个值，指示 <see cref="T:System.Net.HttpListener" /> 是否已启动。
            </summary>
      <returns>
              如果已启动 <see cref="T:System.Net.HttpListener" />，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListener.IsSupported">
      <summary>
              获取一个值，指示 <see cref="T:System.Net.HttpListener" /> 是否可用于当前操作系统。
            </summary>
      <returns>
              如果支持 <see cref="T:System.Net.HttpListener" />，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListener.Prefixes">
      <summary>
              获取由此 <see cref="T:System.Net.HttpListener" /> 对象处理的统一资源标识符 (URI) 前缀。
            </summary>
      <returns>
        <see cref="T:System.Net.HttpListenerPrefixCollection" />，包含此 <see cref="T:System.Net.HttpListener" /> 对象在经配置后要处理的 URI 前缀。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListener.Realm">
      <summary>
              获取或设置与此 <see cref="T:System.Net.HttpListener" /> 对象关联的领域或资源分区。
            </summary>
      <returns>
        <see cref="T:System.String" /> 值，包含与 <see cref="T:System.Net.HttpListener" /> 对象关联的领域名。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.Start">
      <summary>
              允许此实例接收传入的请求。
            </summary>
      <exception cref="T:System.Net.HttpListenerException">
                  Win32 函数调用失败。
                   检查异常的 <see cref="P:System.Net.HttpListenerException.ErrorCode" /> 属性来确定该异常的原因。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.Stop">
      <summary>
              使此实例停止接收传入的请求。
            </summary>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListener.TimeoutManager">
      <summary>
              此 <see cref="T:System.Net.HttpListener" /> 实例的超时管理器。
            </summary>
      <returns>
              返回 <see cref="T:System.Net.HttpListenerTimeoutManager" />。
            
              此 <see cref="T:System.Net.HttpListener" /> 实例的超时管理器。
            </returns>
    </member>
    <member name="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
      <summary>
              获取或设置 <see cref="T:System.Boolean" /> 值，该值控制当使用 NTLM 时是否需要对使用同一传输控制协议 (TCP) 连接的其他请求进行身份验证。
            </summary>
      <returns>
              如果第一个请求的 <see cref="T:System.Security.Principal.IIdentity" /> 将用于同一连接上的后续请求，则返回 <see langword="true" />；否则返回 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListener.System#IDisposable#Dispose">
      <summary>
              释放此 <see cref="T:System.Net.HttpListener" /> 对象持有的资源。
            </summary>
    </member>
    <member name="T:System.Net.HttpListenerBasicIdentity">
      <summary>
              保留的用户名和密码从基本身份验证请求。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)">
      <summary>
              使用指定的用户名和密码初始化 <see cref="T:System.Net.HttpListenerBasicIdentity" /> 类的新实例。
            </summary>
      <param name="username">
                用户名。
              </param>
      <param name="password">
                密码。
              </param>
    </member>
    <member name="P:System.Net.HttpListenerBasicIdentity.Password">
      <summary>
              指示从基本身份验证尝试的密码。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 包含密码。
            </returns>
    </member>
    <member name="T:System.Net.HttpListenerContext">
      <summary>
              提供对使用的请求和响应对象的访问 <see cref="T:System.Net.HttpListener" /> 类。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)">
      <summary>
              接受的 WebSocket 连接作为异步操作。
            </summary>
      <param name="subProtocol">
                支持的 WebSocket 子协议。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task`1" />。
            
              表示异步操作的任务对象。
              <see cref="P:System.Threading.Tasks.Task`1.Result" /> 任务对象上的属性将返回 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> 为空字符串
                
                  - 或 - 
                
                  <paramref name="subProtocol" /> 包含非法字符。
                </exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">
                  发送完成 WebSocket 握手的响应时出错。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)">
      <summary>
              接受 WebSocket 连接同时支持的 WebSocket 的子协议和 WebSocket 保持活动状态的时间间隔指定为异步操作。
            </summary>
      <param name="subProtocol">
                支持的 WebSocket 子协议。
              </param>
      <param name="keepAliveInterval">
                WebSocket 协议保持活动状态的间隔（以毫秒为单位）。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task`1" />。
            
              表示异步操作的任务对象。
              <see cref="P:System.Threading.Tasks.Task`1.Result" /> 任务对象上的属性将返回 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> 为空字符串
                
                  - 或 - 
                
                  <paramref name="subProtocol" /> 包含非法字符。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> 来说过小。
                </exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">
                  发送完成 WebSocket 握手的响应时出错。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)">
      <summary>
              接受 WebSocket 连接指定受支持的 WebSocket 子协议、 接收缓冲区大小和 WebSocket 保持活动状态的间隔以异步操作。
            </summary>
      <param name="subProtocol">
                支持的 WebSocket 子协议。
              </param>
      <param name="receiveBufferSize">
                接收缓冲区的大小以字节为单位。
              </param>
      <param name="keepAliveInterval">
                WebSocket 协议保持活动状态的间隔（以毫秒为单位）。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task`1" />。
            
              表示异步操作的任务对象。
              <see cref="P:System.Threading.Tasks.Task`1.Result" /> 任务对象上的属性将返回 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> 为空字符串
                
                  - 或 - 
                
                  <paramref name="subProtocol" /> 包含非法字符。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> 来说过小。
                
                  - 或 - 
                
                  <paramref name="receiveBufferSize" /> 为不超过 16 个字节
                
                  - 或 - 
                
                  <paramref name="receiveBufferSize" /> 将大于 64 kb。
                </exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">
                  发送完成 WebSocket 握手的响应时出错。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})">
      <summary>
              接受 WebSocket 连接指定受支持的 WebSocket 子协议，接收缓冲区的大小、 WebSocket 保持活动状态的时间间隔，以及作为异步操作的内部缓冲区。
            </summary>
      <param name="subProtocol">
                支持的 WebSocket 子协议。
              </param>
      <param name="receiveBufferSize">
                接收缓冲区的大小以字节为单位。
              </param>
      <param name="keepAliveInterval">
                WebSocket 协议保持活动状态的间隔（以毫秒为单位）。
              </param>
      <param name="internalBuffer">
                若要使用此操作的内部缓冲区。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task`1" />。
            
              表示异步操作的任务对象。
              <see cref="P:System.Threading.Tasks.Task`1.Result" /> 任务对象上的属性将返回 <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> 为空字符串
                
                  - 或 - 
                
                  <paramref name="subProtocol" /> 包含非法字符。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="keepAliveInterval" /> 来说过小。
                
                  - 或 - 
                
                  <paramref name="receiveBufferSize" /> 为不超过 16 个字节
                
                  - 或 - 
                
                  <paramref name="receiveBufferSize" /> 将大于 64 kb。
                </exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">
                  发送完成 WebSocket 握手的响应时出错。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerContext.Request">
      <summary>
              获取 <see cref="T:System.Net.HttpListenerRequest" /> 该对象表示对某个资源的客户端的请求。
            </summary>
      <returns>
              表示客户端请求的 <see cref="T:System.Net.HttpListenerRequest" /> 对象。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.Response">
      <summary>
              获取 <see cref="T:System.Net.HttpListenerResponse" /> 将发送到客户端的请求响应中的客户端的对象。
            </summary>
      <returns>
        <see cref="T:System.Net.HttpListenerResponse" /> 对象，用于将响应发送回客户端。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.User">
      <summary>
              获取一个对象，该对象用于为其请求都由客户端获取标识、 身份验证信息和安全角色 <see cref="T:System.Net.HttpListenerContext" /> 对象。
            </summary>
      <returns>
        <see cref="T:System.Security.Principal.IPrincipal" /> 对象，它描述客户端，或 <see langword="null" /> 如果 <see cref="T:System.Net.HttpListener" /> 提供此 <see cref="T:System.Net.HttpListenerContext" /> 没有要求身份验证。
            </returns>
    </member>
    <member name="T:System.Net.HttpListenerException">
      <summary>
              当处理 HTTP 请求出错时引发的异常。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor">
      <summary>
              初始化 <see cref="T:System.Net.HttpListenerException" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32)">
      <summary>
              新实例初始化 <see cref="T:System.Net.HttpListenerException" /> 类使用指定的错误代码。
            </summary>
      <param name="errorCode">
                一个 <see cref="T:System.Int32" /> 值，该值标识所发生的错误。
              </param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Net.HttpListenerException" /> 类使用指定的错误代码和消息。
            </summary>
      <param name="errorCode">
                一个 <see cref="T:System.Int32" /> 值，该值标识所发生的错误。
              </param>
      <param name="message">
                一个 <see cref="T:System.String" /> ，描述发生的错误。
              </param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              从 <see cref="T:System.Net.HttpListenerException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。
            </summary>
      <param name="serializationInfo">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，其中包含要反序列化新所需的信息 <see cref="T:System.Net.HttpListenerException" /> 对象。
              </param>
      <param name="streamingContext">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。
              </param>
    </member>
    <member name="P:System.Net.HttpListenerException.ErrorCode">
      <summary>
              获取一个值，标识所发生的错误。
            </summary>
      <returns>
              一个 <see cref="T:System.Int32" /> 值。
            </returns>
    </member>
    <member name="T:System.Net.HttpListenerPrefixCollection">
      <summary>
              表示用于存储的统一资源标识符 (URI) 前缀的集合 <see cref="T:System.Net.HttpListener" /> 对象。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
      <summary>
              将统一资源标识符 (URI) 前缀添加到集合。
            </summary>
      <param name="uriPrefix">
                用于标识在传入请求中比较的 URI 信息的 <see cref="T:System.String" />。
                 前缀必须以正斜杠 ("/") 结尾。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriPrefix" /> 不使用 http:// 或 https:// 方案。
                   这些是仅有的支持 <see cref="T:System.Net.HttpListener" /> 对象的方案。
                
                  - 或 -
                
                  <paramref name="uriPrefix" /> 不是格式正确的 URI 前缀。
                   请确保字符串以 "/" 结尾。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  已关闭与此集合关联的 <see cref="T:System.Net.HttpListener" />。
                </exception>
      <exception cref="T:System.Net.HttpListenerException">
                  Windows 函数调用失败。
                   检查异常的 <see cref="P:System.Net.HttpListenerException.ErrorCode" /> 属性以确定导致异常的原因。
                   如果另一个 <see cref="T:System.Net.HttpListener" /> 已经添加了前缀 <paramref name="uriPrefix" />，将引发此异常。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Clear">
      <summary>
              从集合中移除所有的统一资源标识符 (URI) 前缀。
            </summary>
      <exception cref="T:System.Net.HttpListenerException">
                  Windows 函数调用失败。
                   检查异常的 <see cref="P:System.Net.HttpListenerException.ErrorCode" /> 属性来确定该异常的原因。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.HttpListener" /> 关联与此集合已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
      <summary>
              返回 <see cref="T:System.Boolean" /> 值，该值指示是否在集合中包含指定的前缀。
            </summary>
      <param name="uriPrefix">
                一个 <see cref="T:System.String" /> ，其中包含要测试的统一资源标识符 (URI) 前缀。
              </param>
      <returns>
        <see langword="true" /> 如果此集合包含指定的前缀 <paramref name="uriPrefix" />; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
      <summary>
              中的内容复制 <see cref="T:System.Net.HttpListenerPrefixCollection" /> 到指定的数组。
            </summary>
      <param name="array">
                一维 <see cref="T:System.Array" /> ，它接收此集合中的统一资源标识符 (URI) 前缀字符串。
              </param>
      <param name="offset">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 有多个维度。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  此集合包含多个元素不是可以存储在 <paramref name="array" /> 起价 <paramref name="offset" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.HttpListener" /> 关联与此集合已关闭。
                </exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="array" /> 不能存储字符串值。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
      <summary>
              中的内容复制 <see cref="T:System.Net.HttpListenerPrefixCollection" /> 到指定的字符串数组。
            </summary>
      <param name="array">
                接收此集合中的统一资源标识符 (URI) 前缀字符串的一维字符串数组。
              </param>
      <param name="offset">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 有多个维度。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  此集合包含多个元素不是可以存储在 <paramref name="array" /> 起价 <paramref name="offset" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.HttpListener" /> 关联与此集合已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.Count">
      <summary>
              获取集合中包含的前缀数目。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 包含此集合中的前缀的数目。
            </returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
      <summary>
              返回可用于循环访问集合的对象。
            </summary>
      <returns>
              实现的对象 <see cref="T:System.Collections.IEnumerator" /> 接口，并提供对此集合中的字符串的访问。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
      <summary>
              获取一个值，该值指示对集合的访问是否为只读的。
            </summary>
      <returns>
              始终返回 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
      <summary>
              获取一个值，该值指示对集合的访问是否同步（线程安全）。
            </summary>
      <returns>
              此属性始终返回 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
      <summary>
              从由前缀的列表中移除指定的统一资源标识符 (URI) <see cref="T:System.Net.HttpListener" /> 对象。
            </summary>
      <param name="uriPrefix">
                一个 <see cref="T:System.String" /> ，其中包含要删除的 URI 前缀。
              </param>
      <returns>
        <see langword="true" /> 如果 <paramref name="uriPrefix" /> 中找到 <see cref="T:System.Net.HttpListenerPrefixCollection" /> 和已删除; 否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Net.HttpListenerException">
                  Windows 函数调用失败。
                   若要确定该异常的原因，请检查该异常的错误代码。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.HttpListener" /> 关联与此集合已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
              返回可用于循环访问集合的对象。
            </summary>
      <returns>
              实现的对象 <see cref="T:System.Collections.IEnumerator" /> 接口，并提供对此集合中的字符串的访问。
            </returns>
    </member>
    <member name="T:System.Net.HttpListenerRequest">
      <summary>
              描述对传入的 HTTP 请求 <see cref="T:System.Net.HttpListener" /> 对象。
               此类不能被继承。
            </summary>
    </member>
    <member name="P:System.Net.HttpListenerRequest.AcceptTypes">
      <summary>
              获取客户端接受的 MIME 类型。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 数组，其中包含请求中指定的类型名称 <see langword="Accept" /> 标头或 <see langword="null" /> 如果客户端请求不包括 <see langword="Accept" /> 标头。
            </returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
      <summary>
              开始对客户端的 X.509 v.3 证书的异步请求。
            </summary>
      <param name="requestCallback">
                一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。
              </param>
      <param name="state">
                一个用户定义对象，其中包含操作的相关信息。
                 在操作完成时，此对象传递给回调委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> ，该值指示操作的状态。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ClientCertificateError">
      <summary>
              获取标识有问题的错误代码 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 客户端提供的。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值包含 Windows 错误代码。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  客户端证书尚未初始化尚未通过调用 <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> 或 <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> 方法
                
                  - 或 - 
                
                  此操作仍然正在进行。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentEncoding">
      <summary>
              获取的内容编码可随请求发送的数据与使用
            </summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> 适合与中的数据一起使用的对象 <see cref="P:System.Net.HttpListenerRequest.InputStream" /> 属性。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentLength64">
      <summary>
              获取包含在请求中的正文数据的长度。
            </summary>
      <returns>
              从请求的值 <see langword="Content-Length" /> 标头。
               如果不知道的内容长度，则此值为-1。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentType">
      <summary>
              获取包含在请求中的正文数据的 MIME 类型。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，包含请求的文本 <see langword="Content-Type" /> 标头。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Cookies">
      <summary>
              获取与请求一起发送的 cookie。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.CookieCollection" /> ，包含与请求一起发送的 cookie。
               如果请求不包含 cookie，则此属性返回一个空集合。
            </returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
      <summary>
              结束对客户端的 X.509 v.3 证书的异步请求。
            </summary>
      <param name="asyncResult">
                挂起的请求的证书。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 操作开始时返回的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 未能通过调用 <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></exception>
      <exception cref="T:System.InvalidOperationException">
                  有关标识的操作已调用此方法 <paramref name="asyncResult" />。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificate">
      <summary>
              检索客户端的 X.509 v.3 证书。
            </summary>
      <returns>
              一个 <see cref="N:System.Security.Cryptography.X509Certificates" /> 对象，其中包含客户端的 X.509 v.3 证书。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  对此方法的调用来检索客户端的 X.509 v.3 证书正在进行中，因此不能成为另一个调用此方法。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
      <summary>
              用以异步操作中检索客户端的 X.509 v.3 证书。
            </summary>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task`1" />。
            
              表示异步操作的任务对象。
              <see cref="P:System.Threading.Tasks.Task`1.Result" /> 任务对象上的属性将返回 <see cref="N:System.Security.Cryptography.X509Certificates" /> 对象，其中包含客户端的 X.509 v.3 证书。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HasEntityBody">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示请求是否有关联的正文数据。
            </summary>
      <returns>
        <see langword="true" /> 如果请求具有关联的正文数据;，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Headers">
      <summary>
              获取在请求中发送的标头名称/值对的集合。
            </summary>
      <returns>
              A<see cref="T:System.Net.WebHeaderCollection" />包含请求中包含的 HTTP 标头。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HttpMethod">
      <summary>
              获取客户端指定的 HTTP 方法。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，其中包含请求中使用的方法。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.InputStream">
      <summary>
              获取包含客户端发送的正文数据的流。
            </summary>
      <returns>
              可读 <see cref="T:System.IO.Stream" /> 对象，其中包含在请求正文中的客户端发送的字节数。
               此属性返回 <see cref="F:System.IO.Stream.Null" /> 如果随请求不发送任何数据。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否发送此请求的客户端进行身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果客户端进行身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsLocal">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否请求是否来自本地计算机。
            </summary>
      <returns>
        <see langword="true" /> 如果请求是在同一台计算机上生成 <see cref="T:System.Net.HttpListener" /> 对象，它提供该请求; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsSecureConnection">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否使用将请求发送的 TCP 连接使用的安全套接字层 (SSL) 协议。
            </summary>
      <returns>
        <see langword="true" /> 如果 TCP 连接使用 SSL。否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否已 WebSocket 请求 TCP 连接。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            
              <see langword="true" /> 如果 TCP 连接是 WebSocket 请求;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.KeepAlive">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否客户端请求的持续性连接。
            </summary>
      <returns>
        <see langword="true" /> 如果连接应保持打开状态;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.LocalEndPoint">
      <summary>
              获取服务器请求定向到的 IP 地址和端口号。
            </summary>
      <returns>
        <see cref="T:System.Net.IPEndPoint" /> ，表示该申请发送至的 IP 地址。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ProtocolVersion">
      <summary>
              获取请求的客户端所使用的 HTTP 版本。
            </summary>
      <returns>
              一个 <see cref="T:System.Version" /> 标识的 HTTP 客户端的版本。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.QueryString">
      <summary>
              获取请求中包含的查询字符串。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象，其中包含请求中包含的查询数据 <see cref="P:System.Net.HttpListenerRequest.Url" />。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RawUrl">
      <summary>
              获取客户端请求的 URL 信息 （不带的主机和端口）。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，其中包含此请求的原始 URL。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RemoteEndPoint">
      <summary>
              获取客户端发出请求的 IP 地址和端口号。
            </summary>
      <returns>
        <see cref="T:System.Net.IPEndPoint" /> ，它表示从中发出请求的 IP 地址和端口号。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
      <summary>
              获取传入的 HTTP 请求的请求标识符。
            </summary>
      <returns>
              一个 <see cref="T:System.Guid" /> 对象，其中包含 HTTP 请求的标识符。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ServiceName">
      <summary>
              获取请求的客户端发送服务提供程序名称 (SPN)。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，其中包含在请求上发送的客户端的 SPN。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.TransportContext">
      <summary>
              获取 <see cref="T:System.Net.TransportContext" /> 为客户端请求。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.TransportContext" /> 为客户端请求的对象。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Url">
      <summary>
              获取 <see cref="T:System.Uri" /> 客户端请求的对象。
            </summary>
      <returns>
              一个 <see cref="T:System.Uri" /> 对象，用于标识客户端请求的资源。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UrlReferrer">
      <summary>
              获取客户端与服务器的资源的统一资源标识符 (URI)。
            </summary>
      <returns>
              一个 <see cref="T:System.Uri" /> 对象，其中包含请求的文本 <see cref="F:System.Net.HttpRequestHeader.Referer" /> 标头，或 <see langword="null" /> 如果标头未包含在请求中。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserAgent">
      <summary>
              获取客户端所提供的用户代理。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 对象，其中包含请求的文本 <see langword="User-Agent" /> 标头。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostAddress">
      <summary>
              获取的服务器请求定向到的 IP 地址和端口号。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 包含主机地址信息。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostName">
      <summary>
              获取的 DNS 名称和客户端提供，如果指定的端口号。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 值，该值包含请求的文本 <see langword="Host" /> 标头。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserLanguages">
      <summary>
              获取响应的首选自然语言。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 数组，其中包含请求中指定的语言 <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 标头或 <see langword="null" /> 如果客户端请求不包括 <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> 标头。
            </returns>
    </member>
    <member name="T:System.Net.HttpListenerResponse">
      <summary>
              表示正在处理的请求的响应 <see cref="T:System.Net.HttpListener" /> 对象。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Abort">
      <summary>
              关闭到客户端连接而不发送响应。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
      <summary>
              将指定的标头和值添加到此响应的 HTTP 标头。
            </summary>
      <param name="name">
                要设置的 HTTP 标头的名称。
              </param>
      <param name="value">
                值为 <paramref name="name" /> 标头。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 是 <see langword="null" /> 或空字符串 ("")。
                </exception>
      <exception cref="T:System.ArgumentException">
                  不允许您为指定的标头指定一个值。
                
                  - 或 -
                
                  <paramref name="name" /> 或 <paramref name="value" /> 包含无效字符。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  长度 <paramref name="value" /> 大于 65535 个字符。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)">
      <summary>
              将指定的 <see cref="T:System.Net.Cookie" /> 添加到此响应的 cookie 集合。
            </summary>
      <param name="cookie">
                要添加到集合中与此响应一起发送的 <see cref="T:System.Net.Cookie" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)">
      <summary>
              将一个值追加到指定的 HTTP 标头与此响应发送。
            </summary>
      <param name="name">
                要追加的 HTTP 标头的名称 <paramref name="value" /> 到。
              </param>
      <param name="value">
                要追加到的值 <paramref name="name" /> 标头。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 是 <see langword="null" /> 或空字符串 ("")。
                
                  - 或 -
                
                  不允许您为指定的标头指定一个值。
                
                  - 或 -
                
                  <paramref name="name" /> 或 <paramref name="value" /> 包含无效字符。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  长度 <paramref name="value" /> 大于 65535 个字符。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close">
      <summary>
              将发送到客户端的响应并释放由此所持有的资源 <see cref="T:System.Net.HttpListenerResponse" /> 实例。
            </summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
      <summary>
              指定的字节数组返回客户端并释放由此所持有的资源 <see cref="T:System.Net.HttpListenerResponse" /> 实例。
            </summary>
      <param name="responseEntity">
                一个 <see cref="T:System.Byte" /> 数组，其中包含要发送到客户端的响应。
              </param>
      <param name="willBlock">
        <see langword="true" /> 为了阻止客户端，则为刷新流时执行否则为 <see langword="false" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="responseEntity" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentEncoding">
      <summary>
              获取或设置 <see cref="T:System.Text.Encoding" /> 此响应 <see cref="P:System.Net.HttpListenerResponse.OutputStream" />。
            </summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> 适合与中的数据一起使用的对象 <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> 属性，或 <see langword="null" /> 如果未指定编码。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentLength64">
      <summary>
              获取或设置包含在响应的正文数据中的字节数。
            </summary>
      <returns>
              响应值 <see langword="Content-Length" /> 标头。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
                  为设置操作是指定的值小于零。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已发送响应。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentType">
      <summary>
              获取或设置返回的内容的 MIME 类型。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 实例，它包含响应的文本 <see langword="Content-Type" /> 标头。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  为集运算指定的值为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为设置操作是一个空字符串指定的值 ("")。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Cookies">
      <summary>
              获取或设置与响应一起返回的 cookie 的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.CookieCollection" /> ，其中包含与响应的 cookie。
               如果集合为空无 cookie 已添加到响应。
            </returns>
    </member>
    <member name="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)">
      <summary>
              将指定的属性复制 <see cref="T:System.Net.HttpListenerResponse" /> 到此响应。
            </summary>
      <param name="templateResponse">
        <see cref="T:System.Net.HttpListenerResponse" /> 要复制的实例。
              </param>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Headers">
      <summary>
              获取或设置由服务器返回的标头名称/值对的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Net.WebHeaderCollection" /> 实例，它包含所有显式设置包含在响应的 HTTP 标头。
            </returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Net.WebHeaderCollection" /> 指定设置操作的响应无效实例。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.KeepAlive">
      <summary>
              获取或设置一个值，指示服务器是否请求的持续性连接。
            </summary>
      <returns>
        <see langword="true" /> 如果服务器请求的持续性连接;，否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.OutputStream">
      <summary>
              获取 <see cref="T:System.IO.Stream" /> 对象传递给可写入响应。
            </summary>
      <returns>
              一个 <see cref="T:System.IO.Stream" /> 对象传递给可写入响应。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ProtocolVersion">
      <summary>
              获取或设置用于响应的 HTTP 版本。
            </summary>
      <returns>
              一个 <see cref="T:System.Version" /> 对象，它指示使用客户端在响应时的 HTTP 版本。
               请注意此属性现已过时。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  为集运算指定的值为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  为一个集运算不具有指定的值及其 <see cref="P:System.Version.Major" /> 属性设置为 1 或不具有其 <see cref="P:System.Version.Minor" /> 属性设置为 0 或 1。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Redirect(System.String)">
      <summary>
              配置要将客户端重定向到指定的 URL 的响应。
            </summary>
      <param name="url">
                客户端应该用来查找所请求的资源的 URL。
              </param>
    </member>
    <member name="P:System.Net.HttpListenerResponse.RedirectLocation">
      <summary>
              获取或设置的 http 值 <see langword="Location" /> 中此响应标头。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> ，其中包含要发送到客户端的绝对 URL <see langword="Location" /> 标头。
            </returns>
      <exception cref="T:System.ArgumentException">
                  为设置操作是一个空字符串指定的值 ("")。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.SendChunked">
      <summary>
              获取或设置是否响应使用 chunked 的传输编码。
            </summary>
      <returns>
        <see langword="true" /> 如果响应设置为使用 chunked 的传输编码;否则为 <see langword="false" />。
               默认值为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
      <summary>
              添加或更新 <see cref="T:System.Net.Cookie" /> 中与此响应发送的 cookie 集合。
            </summary>
      <param name="cookie">
                一个 <see cref="T:System.Net.Cookie" /> 此响应。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  Cookie 已存在于集合中并不会替换。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusCode">
      <summary>
              获取或设置要返回到客户端的 HTTP 状态代码。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定所请求的资源的 HTTP 状态代码。
               默认值是 <see cref="F:System.Net.HttpStatusCode.OK" />, ，指示服务器已成功处理了客户端的请求和响应正文中未包含所请求的资源。
            </returns>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.Net.ProtocolViolationException">
                  设置操作为指定的值无效。
                   有效值介于 100 和 999 之间 （含）。
                </exception>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusDescription">
      <summary>
              获取或设置返回到客户端的 HTTP 状态代码的文本说明。
            </summary>
      <returns>
              返回到客户端的 HTTP 状态代码的文本说明。
               默认值是 RFC 2616 描述 <see cref="P:System.Net.HttpListenerResponse.StatusCode" /> 属性值或空字符串 ("") 如果 RFC 2616 说明不存在。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  为集运算指定的值为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  设置操作为指定的值包含非打印字符。
                </exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose">
      <summary>
              释放由 <see cref="T:System.Net.HttpListenerResponse" /> 使用的所有资源。
            </summary>
    </member>
    <member name="T:System.Net.HttpListenerTimeoutManager">
      <summary>
              若要使用的超时管理器 <see cref="T:System.Net.HttpListener" /> 对象。
            </summary>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody">
      <summary>
              获取或设置的时间，以秒为单位，允许 <see cref="T:System.Net.HttpListener" />  电量保持活动状态的连接上的实体正文。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" />。
            
              允许的时间，以秒为单位， <see cref="T:System.Net.HttpListener" />  电量保持活动状态的连接上的实体正文。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.EntityBody">
      <summary>
              获取或设置的时间，以秒为单位，允许要到达的请求实体正文。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" />。
            
              以秒为单位，允许请求实体主体，若要到达的时间。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.HeaderWait">
      <summary>
              获取或设置的时间，以秒为单位，允许 <see cref="T:System.Net.HttpListener" /> 来分析请求标头。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" />。
            
              允许的时间，以秒为单位， <see cref="T:System.Net.HttpListener" /> 来分析请求标头。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.IdleConnection">
      <summary>
              获取或设置的时间，以秒为单位，允许的空闲连接。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" />。
            
              以秒为单位，允许的空闲连接时间。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond">
      <summary>
              获取或设置最小发送速率，字节数 / 秒，响应中。
            </summary>
      <returns>
              返回 <see cref="T:System.Int64" />。
            
              最小发送速率，单位为字节数 / 秒，响应。
            </returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.RequestQueue">
      <summary>
              获取或设置的时间，以秒为单位，允许为请求中请求队列之前保持 <see cref="T:System.Net.HttpListener" /> 提取它。
            </summary>
      <returns>
              返回 <see cref="T:System.TimeSpan" />。
            
              请求在之前的请求队列中保留的时间，以秒为单位，允许 <see cref="T:System.Net.HttpListener" /> 提取它。
            </returns>
    </member>
    <member name="T:System.Net.AuthenticationSchemeSelector">
      <summary>
              选择的身份验证方案 <see cref="T:System.Net.HttpListener" /> 实例。
            </summary>
      <param name="httpRequest">
        <see cref="T:System.Net.HttpListenerRequest" /> 要为其选择的身份验证方案的实例。
              </param>
      <returns>
              其中一个 <see cref="T:System.Net.AuthenticationSchemes" /> 值，该值指示要为指定的客户端请求使用的身份验证方法。
            </returns>
    </member>
    <member name="T:System.Net.WebSockets.HttpListenerWebSocketContext">
      <summary>
              可以访问的信息由接收 <see cref="T:System.Net.HttpListener" /> 类接受 WebSocket 连接时。
            </summary>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.CookieCollection">
      <summary>
              获取由接收的 cookie <see cref="T:System.Net.HttpListener" /> WebSocket 公开握手中的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Net.CookieCollection" />。
            
              由接收的 cookie <see cref="T:System.Net.HttpListener" /> 对象。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Headers">
      <summary>
              获取由接收的 HTTP 标头 <see cref="T:System.Net.HttpListener" /> WebSocket 公开握手中的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Collections.Specialized.NameValueCollection" />。
            
              收到的 HTTP 标头 <see cref="T:System.Net.HttpListener" /> 对象。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsAuthenticated">
      <summary>
              获取一个值，该值指示 WebSocket 客户端进行身份验证。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            
              <see langword="true" /> 当 WebSocket 客户端进行身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsLocal">
      <summary>
              获取一个值，该值指示是否 WebSocket 客户端连接在本地计算机中。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            
              <see langword="true" /> 如果从本地计算机; WebSocket 客户端连接否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsSecureConnection">
      <summary>
              获取一个值，该值指示使用安全套接字层 (SSL) 保护 WebSocket 连接。
            </summary>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            
              <see langword="true" /> 如果使用 SSL; 保护 WebSocket 连接，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Origin">
      <summary>
              获取包含在 WebSocket 公开握手的原点 HTTP 标头的值。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            
              原始 HTTP 标头的值。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.RequestUri">
      <summary>
              获取 WebSocket 客户端发出请求的 URI。
            </summary>
      <returns>
              返回 <see cref="T:System.Uri" />。
            
              WebSocket 客户端所请求的 URI。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketKey">
      <summary>
              获取包含在 WebSocket 公开握手的 SecWebSocketKey HTTP 标头的值。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            
              SecWebSocketKey HTTP 标头的值。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketProtocols">
      <summary>
              获取 WebSocket 公开握手中包含的安全 WebSocket 协议的列表。
            </summary>
      <returns>
              返回 <see cref="T:System.Collections.Generic.IEnumerable`1" />。
            
              保护 WebSocket 协议的列表。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketVersion">
      <summary>
              获取 WebSocket 客户端发出请求的子协议的列表。
            </summary>
      <returns>
              返回 <see cref="T:System.String" />。
            
              WebSocket 客户端发出请求的子协议列表。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.User">
      <summary>
              获取用于获取 WebSocket 客户端标识、 身份验证信息和安全角色的对象。
            </summary>
      <returns>
              返回 <see cref="T:System.Security.Principal.IPrincipal" />。
            
              标识、 身份验证信息和 WebSocket 客户端的安全角色。
            </returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.WebSocket">
      <summary>
              获取用来发送和接收数据通过 WebSocket 连接的 WebSocket 实例。
            </summary>
      <returns>
              返回 <see cref="T:System.Net.WebSockets.WebSocket" />。
            
              WebSocket 实例中。
            </returns>
    </member>
  </members>
</doc>