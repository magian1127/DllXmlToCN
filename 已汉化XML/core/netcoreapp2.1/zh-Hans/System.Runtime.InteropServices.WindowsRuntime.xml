<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.InteropServices.WindowsRuntime</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute">
      <summary>
              指定托管的默认接口 Windows 运行时 类。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute.#ctor(System.Type)">
      <summary>
              初始化 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute" /> 类的新实例。
            </summary>
      <param name="defaultInterface">
                指定为该属性的类的默认接口的接口类型应用于。
              </param>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute.DefaultInterface">
      <summary>
              获取默认接口的类型。
            </summary>
      <returns>
              默认接口类型。
            </returns>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken">
      <summary>
              当一个事件处理程序添加到返回的令牌 Windows 运行时 事件。
               该标记用于以后从事件中删除事件处理程序。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Equals(System.Object)">
      <summary>
              返回一个值，该值指示当前对象是否等于指定的对象。
            </summary>
      <param name="obj">
                要比较的对象。
              </param>
      <returns>
        <see langword="true" />  如果当前对象是否等于 <paramref name="obj" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.GetHashCode">
      <summary>
              返回此实例的哈希代码。
            </summary>
      <returns>
              此实例的哈希代码。
            </returns>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)">
      <summary>
              指示两个 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" /> 实例是否相等。
            </summary>
      <param name="left">
                要比较的第一个实例。
              </param>
      <param name="right">
                要比较的第二个实例。
              </param>
      <returns>
              如果两个对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)">
      <summary>
              指示两个 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" /> 实例是否不相等。
            </summary>
      <param name="left">
                要比较的第一个实例。
              </param>
      <param name="right">
                要比较的第二个实例。
              </param>
      <returns>
        <see langword="true" /> 如果两个实例是否不相等;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
      <summary>
              存储委托和事件标记之间的映射，以支持在托管代码中实现 Windows 运行时 事件。
            </summary>
      <typeparam name="T">
                为特定事件委托的事件处理程序的类型。
              </typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1" /> 类的新实例。
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> 不是委托类型。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.AddEventHandler(`0)">
      <summary>
              将指定的事件处理程序添加到表和调用列表中，并返回可用于移除事件处理程序的令牌。
            </summary>
      <param name="handler">
                要添加的事件处理程序。
              </param>
      <returns>
              一个可用于从表和调用列表中删除事件处理程序的标记。
            </returns>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.GetOrCreateEventRegistrationTokenTable(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable{`0}@)">
      <summary>
              如果它不返回指定的事件注册令牌表 <see langword="null" />; 否则为返回一个新的事件注册标记表。
            </summary>
      <param name="refEventTable">
                事件注册令牌表中，通过引用传递。
              </param>
      <returns>
              由指定的事件注册令牌表 <paramref name="refEventTable" />, ，如果它不 <see langword="null" />; 否则为为新的事件注册标记表。
            </returns>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.InvocationList">
      <summary>
              获取或设置类型的委托 <paramref name="T" /> 其调用列表包括所有事件处理程序委托已添加的并且，具有尚未将其删除。
               调用此委托时，将调用所有事件处理程序。
            </summary>
      <returns>
              类型的委托 <paramref name="T" /> ，它表示当前已注册的事件的所有事件处理程序委托。
            </returns>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)">
      <summary>
              移除与表和调用列表中指定的标记相关联的事件处理程序。
            </summary>
      <param name="token">
                添加事件处理程序时返回的标记。
              </param>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1.RemoveEventHandler(`0)">
      <summary>
              从表和调用列表中移除指定的事件处理程序委托。
            </summary>
      <param name="handler">
                要移除的事件处理程序。
              </param>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.IActivationFactory">
      <summary>
              启用通过激活类 Windows 运行时。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.IActivationFactory.ActivateInstance">
      <summary>
              返回的新实例 Windows 运行时 由创建的类 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.IActivationFactory" /> 接口。
            </summary>
      <returns>
              新实例的 Windows 运行时 类。
            </returns>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute">
      <summary>
              指定首次实现指定接口的目标类型版本。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute.#ctor(System.Type,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
              新实例初始化 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute" /> 类中，指定目标类型实现的接口和首先实现该接口的版本。
            </summary>
      <param name="interfaceType">
                首先目标类型的指定的版本中实现的接口。
              </param>
      <param name="majorVersion">
                首次实现的目标类型的版本的主要部分 <paramref name="interfaceType" />。
              </param>
      <param name="minorVersion">
                首次实现的目标类型的版本的次要组成部分 <paramref name="interfaceType" />。
              </param>
      <param name="buildVersion">
                首次实现的目标类型的版本生成组件 <paramref name="interfaceType" />。
              </param>
      <param name="revisionVersion">
                首次实现的目标类型的版本的修订组合 <paramref name="interfaceType" />。
              </param>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute.BuildVersion">
      <summary>
              获取第一次实现的接口的目标类型的版本的生成部分。
            </summary>
      <returns>
              版本生成部分。
            </returns>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute.InterfaceType">
      <summary>
              获取目标类型实现的接口的类型。
            </summary>
      <returns>
              接口的类型。
            </returns>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute.MajorVersion">
      <summary>
              获取第一次实现的接口的目标类型的版本的主要组件。
            </summary>
      <returns>
              版本的主要组件。
            </returns>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute.MinorVersion">
      <summary>
              获取第一次实现的接口的目标类型的版本的次要部分。
            </summary>
      <returns>
              次要版本的组件。
            </returns>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute.RevisionVersion">
      <summary>
              获取修订号部分的第一次实现的接口的目标类型的版本。
            </summary>
      <returns>
              修订号部分的版本中。
            </returns>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute">
      <summary>
              当应用于 Windows 运行时 组件中的数组参数时，请指定传递到该参数的数组的内容仅用于输入。
               调用方期望此数组不因调用而更改。
               有关使用托管代码写入的调用方的重要信息，请参见“备注”一节。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute">
      <summary>
              指定 Windows 运行时 组件中方法的返回值名称。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute" /> 类，并指定返回值的名称。
            </summary>
      <param name="name">
                返回值的名称。
              </param>
    </member>
    <member name="P:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name">
      <summary>
              获取指定的名称中的方法的返回值 Windows 运行时 组件。
            </summary>
      <returns>
              该方法的返回值的名称。
            </returns>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal">
      <summary>
              提供用于在 .NET Framework 与 Windows 运行时 之间封送数据的帮助程序方法。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)">
      <summary>
              添加到指定的事件处理程序 Windows 运行时 事件。
            </summary>
      <param name="addMethod">
                一个表示添加到事件处理程序的方法的委托 Windows 运行时 事件。
              </param>
      <param name="removeMethod">
                表示删除事件处理程序从该方法的委托 Windows 运行时 事件。
              </param>
      <param name="handler">
                一个委托表示的事件处理程序添加。
              </param>
      <typeparam name="T">
                表示事件处理程序委托的类型。
              </typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addMethod" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="removeMethod" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)">
      <summary>
              释放指定的 Windows 运行时HSTRING。
            </summary>
      <param name="ptr">
                要释放的 HSTRING 的地址。
              </param>
      <exception cref="T:System.PlatformNotSupportedException">
                  当前操作系统版本不支持 Windows 运行时。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)">
      <summary>
              返回一个对象，实现用于指定的激活工厂接口 Windows 运行时 类型。
            </summary>
      <param name="type">
                
                  Windows 运行时 要获取的激活工厂接口类型。
              </param>
      <returns>
              实现激活工厂接口的对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 并不表示 Windows 运行时 类型 (即属于 Windows 运行时 本身中定义或 Windows 运行时 组件)。
                
                  - 或 -
                
                  为指定的对象 <paramref name="type" /> 不由公共语言运行时类型系统提供。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.TypeLoadException">
                  指定 Windows 运行时 类未正确注册。
                   例如，.winmd 文件的位置，但 Windows 运行时 找不到该实现。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)">
      <summary>
              返回包含指定 Windows 运行时HSTRING 的副本的托管字符串。
            </summary>
      <param name="ptr">
                指向要复制的 HSTRING 的非托管指针。
              </param>
      <returns>
              如果 <paramref name="ptr" /> 不是 <see cref="F:System.IntPtr.Zero" />，则包含 HSTRING 的副本的托管字符串；否则为 <see cref="F:System.String.Empty" />。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  当前操作系统版本不支持 Windows 运行时。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})">
      <summary>
              删除通过使用指定的方法可删除的所有事件处理程序。
            </summary>
      <param name="removeMethod">
                表示删除事件处理程序从该方法的委托 Windows 运行时 事件。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="removeMethod" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)">
      <summary>
              移除指定的事件处理程序从 Windows 运行时 事件。
            </summary>
      <param name="removeMethod">
                表示删除事件处理程序从该方法的委托 Windows 运行时 事件。
              </param>
      <param name="handler">
                删除事件处理程序。
              </param>
      <typeparam name="T">
                表示事件处理程序委托的类型。
              </typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="removeMethod" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)">
      <summary>
              分配 Windows 运行时HSTRING 并将指定的托管字符串复制到它。
            </summary>
      <param name="s">
                要复制的托管字符串。
              </param>
      <returns>
              指向新 HSTRING 的非托管指针；如果 <paramref name="s" /> 为 <see cref="F:System.String.Empty" />，则为 <see cref="F:System.IntPtr.Zero" />。
            </returns>
      <exception cref="T:System.PlatformNotSupportedException">
                  当前操作系统版本不支持 Windows 运行时。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute">
      <summary>
              当应用于 Windows 运行时 组件中的数组参数时，请指定传递到此参数的数组的内容仅用于输出。
               调用方不保证对内容进行了初始化，因此，所调用的方法不应读取内容。
               有关使用托管代码写入的调用方的重要信息，请参见“备注”一节。
            </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute" /> 类的新实例。
            </summary>
    </member>
  </members>
</doc>