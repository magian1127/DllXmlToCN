<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Security</name>
  </assembly>
  <members>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary>
              当身份验证流的身份验证失败时引发的异常。
            </summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Security.Authentication.AuthenticationException" /> 与任何消息的类。
            </summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary>
              使用指定的消息初始化 <see cref="T:System.Security.Authentication.AuthenticationException" /> 类的新实例。
            </summary>
      <param name="message">
                一个 <see cref="T:System.String" /> 介绍身份验证失败。
              </param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              从 <see cref="T:System.Security.Authentication.AuthenticationException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。
            </summary>
      <param name="serializationInfo">
                A<see cref="T:System.Runtime.Serialization.SerializationInfo" />实例，其中包含所需进行反序列化新的信息<see cref="T:System.Security.Authentication.AuthenticationException" />实例。
              </param>
      <param name="streamingContext">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 实例。
              </param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>
              使用指定的消息和内部异常初始化 <see cref="T:System.Security.Authentication.AuthenticationException" /> 类的新实例。
            </summary>
      <param name="message">
                一个 <see cref="T:System.String" /> 介绍身份验证失败。
              </param>
      <param name="innerException">
        <see cref="T:System.Exception" /> 导致当前异常。
              </param>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类表示服务器用来验证传入客户端连接的扩展的保护策略。
            </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary>
              新实例初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类，该类指定应何时强制实施扩展的保护策略。
            </summary>
      <param name="policyEnforcement">
                一个 <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展的保护策略。
              </param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，其中包含所需的数据并填充 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。
            </summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例，包含序列化新的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 实例所需的信息。
              </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，包含与新的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 实例关联的序列化流的源。
              </param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary>
              新实例初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 指定应何时强制实施扩展的保护策略的类和通道绑定令牌 (CBT) 使用。
            </summary>
      <param name="policyEnforcement">
                一个 <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展的保护策略。
              </param>
      <param name="customChannelBinding">
                一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> ，其中包含要用于验证的自定义通道绑定。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> 指定为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customChannelBinding " />是 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary>
              初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类的新实例，该类指定强制实施扩展保护策略的时间、策略强制实施的保护类型以及用于与客户端的 SPN 进行匹配的自定义服务提供程序名称 (SPN) 列表。
            </summary>
      <param name="policyEnforcement">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。
              </param>
      <param name="protectionScenario">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 值，该值指示策略强制实施的保护类型。
              </param>
      <param name="customServiceNames">
        <see cref="T:System.Collections.ICollection" /> 包含用于与客户端的 SPN 相匹配的自定义 SPN 列表。
              </param>
      <exception cref="T:System.ArgumentException">
                  将 <paramref name="policyEnforcement" /> 指定为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " /> 为 <see langword="null" /> 或空列表。
                </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary>
              初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 类的新实例，该类指定强制实施扩展保护策略的时间、策略强制实施的保护类型以及用于与客户端的 SPN 进行匹配的自定义服务提供程序名称 (SPN) 列表。
            </summary>
      <param name="policyEnforcement">
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展保护策略。
              </param>
      <param name="protectionScenario">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 值，该值指示策略强制实施的保护类型。
              </param>
      <param name="customServiceNames">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 包含用于与客户端的 SPN 相匹配的自定义 SPN 列表。
              </param>
      <exception cref="T:System.ArgumentException">
                  将 <paramref name="policyEnforcement" /> 指定为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " /> 为 <see langword="null" /> 或空列表。
                </exception>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary>
              获取自定义通道绑定令牌 (CBT) 用于进行验证。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> ，其中包含要用于验证的自定义通道绑定。
            </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary>
              获取自定义服务提供程序名称 (SPN) 列表用来与客户端的 spn 相匹配。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> ，其中包含用于与客户端的 spn 相匹配的自定义 SPN 列表。
            </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary>
              该值指示操作系统是否支持集成的 windows 身份验证的扩展保护。
            </summary>
      <returns>
        <see langword="true" /> 如果操作系统支持集成的 windows 身份验证的扩展保护，否则 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary>
              获取时应强制执行扩展的保护策略。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 值，该值指示应何时强制实施扩展的保护策略。
            </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary>
              获取扩展的保护策略强制实施的保护类型。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 值，该值指示此策略强制实施的保护类型。
            </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary>
              获取扩展的保护策略实例的字符串表示形式。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 实例，它包含的表示形式 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 实例。
            </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 具有所需的数据进行序列化对象 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 对象。
            </summary>
      <param name="info">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，其中包含序列化的数据 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 对象。
              </param>
      <param name="context">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与新的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 关联的序列化流的目标。
              </param>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> 枚举指定何时 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 应何时强制实施。
            </summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 总是强制实施。
               不支持扩展的保护的客户端将无法进行身份验证。
            </summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 永远不会强制实施和扩展已禁用保护。
            </summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 客户端和服务器支持扩展的保护时，才会强制执行。
            </summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> 枚举指定此策略强制实施的保护方案。
            </summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary>
              传输会根据使用的通道类型安全且标准的保护方案之间选择。
               对于安全保护，集成的 Windows 身份验证都包装在一个安全通道，并都具有一个完全匹配的通道绑定令牌，而不服务提供程序名称 (SPN) 进行验证。
               对于标准保护，集成的 Windows 身份验证 （可选） 在包装在可选通道绑定令牌的安全通道和 SPN 验证是必需的。
               因此如果请求是通过安全通道，通道绑定令牌 (CBT) 检查，否则检查 SPN。
            </summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary>
              集成的 Windows 身份验证终止由受信任的代理服务器的安全通道中包装，并且有一个通道绑定令牌所需的 SPN 验证。
               这要求的 CBT，但 CBT 存在不检查时检查 SPN。
            </summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 类是服务主体名称的只读集合。
            </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary>
              基于现有的 <see cref="T:System.Collections.ICollection" />，初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 类新的只读实例。
            </summary>
      <param name="items">
        <see cref="T:System.Collections.ICollection" /> 类的实例，其中包含要用于初始化类的服务名称的指定值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item " /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> 为空。
                </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains(System.String)">
      <summary>
              返回一个值，该值表示指定的字符串是否出现在此 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例中。
            </summary>
      <param name="searchServiceName">
                要搜寻的字符串。
              </param>
      <returns>
              返回 <see cref="T:System.Boolean" />。
            
              如果参数 <paramref name="searchServiceName" /> 出现在此 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例中，则为 <see langword="true" />； 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Count">
      <returns>
      </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.GetEnumerator">
      <returns>
      </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary>
              合并当前的 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 和指定的值，以创建包含此联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。
            </summary>
      <param name="serviceNames">
        <see cref="T:System.Collections.IEnumerable" /> 类的实例，其中包含要进行合并的服务名称的指定值。
              </param>
      <returns>
              包含与指定值合并的现有 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例的联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> 为空。
                </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary>
              合并当前的 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 和指定的值，以创建包含此联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。
            </summary>
      <param name="serviceName">
                包含要用于初始化类的服务名称指定值的字符串。
              </param>
      <returns>
              包含与指定值合并的现有 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例的联合的新 <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> 实例。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> 为空。
                </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.System#Collections#ICollection#IsSynchronized">
      <returns>
      </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.System#Collections#ICollection#SyncRoot">
      <returns>
      </returns>
    </member>
    <member name="T:System.Security.Authentication.InvalidCredentialException">
      <summary>
              当身份验证流的身份验证失败并且不能重试时引发的异常。
            </summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor">
      <summary>
              新实例初始化 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 与任何消息的类。
            </summary>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
      <summary>
              使用指定的消息初始化 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 类的新实例。
            </summary>
      <param name="message">
                一个 <see cref="T:System.String" /> 介绍身份验证失败。
              </param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              从 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。
            </summary>
      <param name="serializationInfo">
                一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例，它包含要反序列化新所需的信息 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 实例。
              </param>
      <param name="streamingContext">
                一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 实例。
              </param>
    </member>
    <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
      <summary>
              使用指定的消息和内部异常初始化 <see cref="T:System.Security.Authentication.InvalidCredentialException" /> 类的新实例。
            </summary>
      <param name="message">
                一个 <see cref="T:System.String" /> 介绍身份验证失败。
              </param>
      <param name="innerException">
        <see cref="T:System.Exception" /> 导致当前异常。
              </param>
    </member>
    <member name="T:System.Net.Security.AuthenticatedStream">
      <summary>
              提供用于通过流传递凭据和请求或客户端-服务器应用程序执行身份验证方法。
            </summary>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
              初始化 <see cref="T:System.Net.Security.AuthenticatedStream" /> 类的新实例。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.AuthenticatedStream" />  用于发送和接收数据。
              </param>
      <param name="leaveInnerStreamOpen">
                一个 <see cref="T:System.Boolean" /> ，该值指示是否关闭此 <see cref="T:System.Net.Security.AuthenticatedStream" />  对象也会关闭 <paramref name="innerStream" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Net.Security.AuthenticatedStream" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <summary>
              获取由此流 <see cref="T:System.Net.Security.AuthenticatedStream" /> 用于发送和接收数据。
            </summary>
      <returns>
              一个 <see cref="T:System.IO.Stream" /> 对象。
            </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否已成功身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果发生了成功的身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否已发送数据，使用此 <see cref="T:System.Net.Security.AuthenticatedStream" /> 进行加密。
            </summary>
      <returns>
        <see langword="true" /> 如果正在通过网络传输之前加密和解密数据，到达远程终结点;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否服务器和客户端已经过身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果客户端和服务器已经过身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsServer">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示连接的本地端是否已与服务器进行身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果本地终结点进行身份验证作为身份验证的客户端-服务器连接; 的服务器端 <see langword="false" /> 如果本地终结点与客户端进行身份验证。
            </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否使用此流发送的数据进行签名。
            </summary>
      <returns>
        <see langword="true" /> 如果在正在传输; 前已签名数据否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <summary>
              获取由此所用的流是否 <see cref="T:System.Net.Security.AuthenticatedStream" /> 有关发送和接收数据具有已保持打开状态。
            </summary>
      <returns>
        <see langword="true" /> 内部流是否已保持打开状态;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="T:System.Net.Security.EncryptionPolicy">
      <summary>
              若要使用政策。
            </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <summary>
              更喜欢使用完全加密，但如果在服务器同意允许 NULL 密码 （不加密）。
            </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <summary>
              允许没有加密，并请求如果另一个终结点可以处理 NULL 密码的情况下使用 NULL 密码。
            </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <summary>
              要求加密，并且永远不会允许使用 NULL 密码。
            </summary>
    </member>
    <member name="T:System.Net.Security.LocalCertificateSelectionCallback">
      <summary>
              选择用于进行身份验证的本地安全套接字层 (SSL) 证书。
            </summary>
      <param name="sender">
                一个包含此验证的状态信息的对象。
              </param>
      <param name="targetHost">
                指定客户端的主机服务器。
              </param>
      <param name="localCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含本地证书。
              </param>
      <param name="remoteCertificate">
                用于对远程方进行身份验证的证书。
              </param>
      <param name="acceptableIssuers">
                一个 <see cref="T:System.String" /> 可接受的远程方的证书颁发者的数组。
              </param>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 用于建立 SSL 连接。
            </returns>
    </member>
    <member name="T:System.Net.Security.NegotiateStream">
      <summary>
              提供了一个流，它使用 Negotiate 安全协议进行身份验证客户端上，和 （可选） 服务器上的，在客户端-服务器通信。
            </summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <summary>
              使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.NegotiateStream" /> 用于发送和接收数据。
              </param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 类使用指定 <see cref="T:System.IO.Stream" /> 和流封闭行为。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.NegotiateStream" /> 用于发送和接收数据。
              </param>
      <param name="leaveInnerStreamOpen">
        <see langword="true" /> 若要指示该关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 不起任何作用 <paramref name="innerstream" />; <see langword="false" /> 以指示该关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 也会关闭 <paramref name="innerStream" />。
                 有关详细信息，请参阅备注部分。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
            </summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程将使用指定的客户端凭据。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的客户端凭据和渠道绑定。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="binding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 所用的扩展保护。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="credential" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的凭据和身份验证选项。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="allowedImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效的值。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 null。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的凭据、 身份验证选项和通道绑定。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="binding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 所用的扩展保护。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="allowedImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="credential" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效的值。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
            </summary>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程将使用指定的客户端凭据。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程使用指定的客户端凭据和渠道绑定。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="binding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 所用的扩展保护。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="credential" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程使用指定的凭据和身份验证选项。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="allowedImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效的值。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 null。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              调用由客户端进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程使用指定的凭据、 身份验证选项和通道绑定。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="binding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 所用的扩展保护。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="allowedImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetName" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="credential" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowedImpersonationLevel" /> 不是有效的值。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的服务器凭据、 身份验证选项和扩展保护策略。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="policy">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 所用的扩展保护。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="requiredImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 上传入的扩展的保护策略 <paramref name="policy" /> 参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential " />是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, ，<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, ，或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,，
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于尝试 r 进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与客户端进行身份验证。
                   不能将该流尝试重新与服务器进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的服务器凭据和身份验证选项。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用于建立服务器的标识。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="requiredImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential " />是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, ，<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, ，或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,，
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于尝试 r 进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与客户端进行身份验证。
                   不能将该流尝试重新与服务器进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
            </summary>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的扩展的保护策略。
            </summary>
      <param name="policy">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 所用的扩展保护。
              </param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 上传入的扩展的保护策略 <paramref name="policy" /> 参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
            </summary>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程使用指定的扩展的保护策略。
            </summary>
      <param name="policy">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 所用的扩展保护。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 上传入的扩展的保护策略 <paramref name="policy" /> 参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程使用指定的服务器凭据和身份验证选项。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用于建立服务器的标识。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="requiredImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential " />是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, ，<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, ，或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,，
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于尝试 r 进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与客户端进行身份验证。
                   不能将该流尝试重新与服务器进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <summary>
              由服务器进行身份验证客户端上，和 （可选） 中的客户端-服务器连接作为异步操作的服务器。
               身份验证过程使用指定的服务器凭据、 身份验证选项和扩展保护策略。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="policy">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 所用的扩展保护。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="requiredImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 上传入的扩展的保护策略 <paramref name="policy" /> 参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential " />是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, ，<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, ，或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,，
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于尝试 r 进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与客户端进行身份验证。
                   不能将该流尝试重新与服务器进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以对客户端上，和 （可选） 中的客户端-服务器连接的服务器进行身份验证调用。
               身份验证过程使用指定的凭据、 身份验证选项和通道绑定。
               此方法不会阻止。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="binding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 所用的扩展保护。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="allowedImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="targetName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以对客户端上，和 （可选） 中的客户端-服务器连接的服务器进行身份验证调用。
               此方法不会阻止。
            </summary>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含有关操作的信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以对客户端上，和 （可选） 中的客户端-服务器连接的服务器进行身份验证调用。
               身份验证过程使用指定的凭据。
               此方法不会阻止。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="targetName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以对客户端上，和 （可选） 中的客户端-服务器连接的服务器进行身份验证调用。
               身份验证过程使用指定的凭据和渠道绑定。
               此方法不会阻止。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="binding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 所用的扩展保护。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="targetName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以对客户端上，和 （可选） 中的客户端-服务器连接的服务器进行身份验证调用。
               身份验证过程使用指定的凭据和身份验证选项。
               此方法不会阻止。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="targetName">
                唯一标识的服务器进行身份验证服务主体名称 (SPN)。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="allowedImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="targetName" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与服务器进行身份验证。
                   不能将流重试客户端身份验证。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>
              由服务器以便开始一个异步操作以验证客户端，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的服务器凭据和身份验证选项。
               此方法不会阻止。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="requiredImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含有关操作的信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, ，<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, ，或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,，
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与客户端进行身份验证。
                   不能将该流尝试重新与服务器进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <summary>
              由服务器以便开始一个异步操作以验证客户端，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的服务器凭据、 身份验证选项和扩展保护策略。
               此方法不会阻止。
            </summary>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> 用来建立客户端的标识。
              </param>
      <param name="policy">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 所用的扩展保护。
              </param>
      <param name="requiredProtectionLevel">
                其中一个 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，指示该流的安全服务。
              </param>
      <param name="requiredImpersonationLevel">
                其中一个 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，指示服务器如何使用客户端的凭据来访问资源。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 上传入的扩展的保护策略 <paramref name="policy" /> 参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="credential" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="requiredImpersonationLevel" /> 必须是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, ，<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, ，或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,，
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  此流先前已使用尝试与客户端进行身份验证。
                   不能将该流尝试重新与服务器进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <summary>
              由服务器以便开始一个异步操作以验证客户端，和 （可选） 中的客户端-服务器连接的服务器。
               此方法不会阻止。
            </summary>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含有关操作的信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <summary>
              由服务器以便开始一个异步操作以验证客户端，和 （可选） 中的客户端-服务器连接的服务器。
               身份验证过程使用指定的扩展的保护策略。
               此方法不会阻止。
            </summary>
      <param name="policy">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> 所用的扩展保护。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 上传入的扩展的保护策略 <paramref name="policy" /> 参数都是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  不支持 windows 95 和 Windows 98。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> 不支持扩展的保护的平台上。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始异步读的操作从流中读取数据并将它存储在指定的数组。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 从流中读取的模式接收字节的数组。
              </param>
      <param name="offset">
                中的从零开始的位置 <paramref name="buffer" /> 从此处开始存储读取的数据从该流。
              </param>
      <param name="count">
                最大要从流中读取的字节数。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成读取的操作时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含读操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 小于 0。
                
                  - 或 -
                
                  <paramref name="offset" /> 长度大于 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> 加上 <paramref name="count" /> 的长度大于 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  读取的操作失败。
                
                  - 或 -
                
                  加密是在使用中，但无法解密数据。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的读取的操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始异步写操作，可将 <see cref="T:System.Byte" />s 从指定的缓冲区写入流。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 提供写入流中的字节的数组。
              </param>
      <param name="offset">
                中的从零开始的位置<paramref name=" buffer" /> 从此处开始读取要写入到流的字节。
              </param>
      <param name="count">
        <see cref="T:System.Int32" /> 值，该值指定要读取的字节数 <paramref name="buffer" />。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成写入操作时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义的对象，包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />。
                
                  - 或 -
                
                  <paramref name="offset" /> 长度大于 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> 加上计数大于的长度 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                
                  - 或 -
                
                  加密是在使用中，但不是加密的数据。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的写入操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanRead">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否可读的基础流。
            </summary>
      <returns>
        <see langword="true" /> 如果已进行身份验证且基础流可读，则为否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanSeek">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否可查找基础流。
            </summary>
      <returns>
              此属性始终返回 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanTimeout">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。
            </summary>
      <returns>
        <see langword="true" /> 如果基础流支持超时;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.CanWrite">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否可写的基础流。
            </summary>
      <returns>
        <see langword="true" /> 如果已进行身份验证且基础流可写，则为否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Net.Security.NegotiateStream" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>
              结束对的调用已启动的挂起的异步客户端身份验证操作 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有挂起的客户端身份验证才能完成。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>
              结束对的调用已启动的挂起的异步客户端身份验证操作 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.Security.Authentication.InvalidCredentialException">
                  身份验证失败。
                   此对象可用于重新进行身份验证。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有任何挂起的身份验证，才能完成。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <summary>
              结束异步读取操作，它通过调用已启动 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <returns>
              一个 <see cref="T:System.Int32" /> 从基础流中读取指定的字节数的值。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  AsyncResult 不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有任何挂起的读的操作完成。
                </exception>
      <exception cref="T:System.IO.IOException">
                  读取的操作失败。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <summary>
              结束异步写操作，通过调用已启动 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  AsyncResult 不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有任何正在等待的写入操作完成。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Flush">
      <summary>
              使所有缓冲的数据都写入基础设备。
            </summary>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <summary>
              获取一个值，该值指示服务器可以如何使用客户端的凭据。
            </summary>
      <returns>
        <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  身份验证失败或未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否已成功身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果发生了成功的身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否此 <see cref="T:System.Net.Security.NegotiateStream" /> 使用数据加密。
            </summary>
      <returns>
        <see langword="true" /> 如果正在通过网络传输之前加密和解密数据，到达远程终结点;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否在服务器和客户端已经过身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果服务器已经过身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsServer">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示连接的本地端使用的 <see cref="T:System.Net.Security.NegotiateStream" /> 与服务器进行身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果本地终结点作为经过身份验证的连接; 的服务器端成功通过了身份验证否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.IsSigned">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否使用此流发送的数据进行签名。
            </summary>
      <returns>
        <see langword="true" /> 如果在正在传输; 前已签名数据否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Length">
      <summary>
              获取基础流的长度。
            </summary>
      <returns>
              一个 <see cref="T:System.Int64" /> ，它指定基础流的长度。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  获取此属性的值时，不支持的基础流是 <see cref="T:System.Net.Sockets.NetworkStream" />。
                </exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.Position">
      <summary>
              获取或设置基础流中的当前位置。
            </summary>
      <returns>
              一个 <see cref="T:System.Int64" /> ，它指定基础流中的当前位置。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  不支持设置此属性。
                
                  - 或 -
                
                  获取此属性的值时，不支持的基础流是 <see cref="T:System.Net.Sockets.NetworkStream" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
              从该流中读取数据并将其存储在指定的数组。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 从流中读取的模式接收字节的数组。
              </param>
      <param name="offset">
                一个 <see cref="T:System.Int32" /> 包含中的从零开始的位置 <paramref name="buffer" /> 从此处开始存储读取的数据从该流。
              </param>
      <param name="count">
                一个 <see cref="T:System.Int32" /> 包含要从流中读取的字节的最大数目。
              </param>
      <returns>
              一个 <see cref="T:System.Int32" /> 从基础流中读取指定的字节数的值。
               当没有更多要读取的数据时，返回 0。
            </returns>
      <exception cref="T:System.IO.IOException">
                  读取的操作失败。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  一个 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作正在进行。
                </exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <summary>
              获取或设置读取的操作等待数据的时间量。
            </summary>
      <returns>
              一个 <see cref="T:System.Int32" /> ，指定的读取的操作失败前经过的时间量。
            </returns>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <summary>
              获取有关标识共享此已经过身份验证的流的远程方的信息。
            </summary>
      <returns>
        <see cref="T:System.Security.Principal.IIdentity" /> 描述远程终结点标识的对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  身份验证失败或未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
              引发 <see cref="T:System.NotSupportedException" />。
            </summary>
      <param name="offset">
                忽略此值。
              </param>
      <param name="origin">
                忽略此值。
              </param>
      <returns>
              总是引发 <see cref="T:System.NotSupportedException" />。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  不支持查找 <see cref="T:System.Net.Security.NegotiateStream" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <summary>
              设置基础流的长度。
            </summary>
      <param name="value">
        <see cref="T:System.Int64" /> 值，该值指定流的长度。
              </param>
    </member>
    <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
              将指定数目的 <see cref="T:System.Byte" />s 到使用指定的缓冲区和偏移量的基础流。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 提供写入流中的字节的数组。
              </param>
      <param name="offset">
        <see cref="T:System.Int32" /> 包含中的从零开始的位置<paramref name=" buffer" /> 从此处开始读取要写入到流的字节。
              </param>
      <param name="count">
                一个 <see cref="T:System.Int32" /> 包含要读取的字节数 <paramref name="buffer" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset is less than 0" />。
                
                  - 或 -
                
                  <paramref name="offset" /> 长度大于 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> 加上计数大于的长度 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                
                  - 或 -
                
                  加密是在使用中，但不是加密的数据。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的写入操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <summary>
              获取或设置等待数据写入操作的时间量。
            </summary>
      <returns>
              A <see cref="T:System.Int32" /> ，它指定的写入操作失败之前将等待的时间量。
            </returns>
    </member>
    <member name="T:System.Net.Security.ProtectionLevel">
      <summary>
              指示为已经过身份验证流请求的安全服务。
            </summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <summary>
              加密和签名数据，以帮助确保保密性和传输数据的完整性。
            </summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.None">
      <summary>
              仅使用身份验证。
            </summary>
    </member>
    <member name="F:System.Net.Security.ProtectionLevel.Sign">
      <summary>
              数据签名，以帮助确保传输数据的完整性。
            </summary>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary>
              验证用于进行身份验证的远程安全套接字层 (SSL) 证书。
            </summary>
      <param name="sender">
                一个包含此验证的状态信息的对象。
              </param>
      <param name="certificate">
                用于对远程方进行身份验证的证书。
              </param>
      <param name="chain">
                与远程证书相关联的证书颁发机构链。
              </param>
      <param name="sslPolicyErrors">
                与远程证书关联的一个或多个错误。
              </param>
      <returns>
              一个 <see cref="T:System.Boolean" /> 值，该值确定是否进行身份验证接受指定的证书。
            </returns>
    </member>
    <member name="T:System.Net.Security.SslStream">
      <summary>
              提供一个用于客户端-服务器通信的流，该流使用安全套接字层 (SSL) 安全协议对服务器和（可选）客户端进行身份验证。
            </summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary>
              使用指定的 <see cref="T:System.Net.Security.SslStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 不是可写的。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Net.Security.SslStream" /> 类使用指定 <see cref="T:System.IO.Stream" /> 和流封闭行为。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
              </param>
      <param name="leaveInnerStreamOpen">
                一个布尔值，指示的闭包行为 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
                 此参数指示是否内部流处于打开状态。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 不是可写的。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>
              新实例初始化 <see cref="T:System.Net.Security.SslStream" /> 类使用指定 <see cref="T:System.IO.Stream" />, 、 流关闭行为和证书验证委托。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
              </param>
      <param name="leaveInnerStreamOpen">
                一个布尔值，指示的闭包行为 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
                 此参数指示是否内部流处于打开状态。
              </param>
      <param name="userCertificateValidationCallback">
                一个 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 不是可写的。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary>
              新实例初始化 <see cref="T:System.Net.Security.SslStream" /> 类使用指定 <see cref="T:System.IO.Stream" />, ，流式闭包的行为、 证书验证委托和证书选择委托。
            </summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
              </param>
      <param name="leaveInnerStreamOpen">
                一个布尔值，指示的闭包行为 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
                 此参数指示是否内部流处于打开状态。
              </param>
      <param name="userCertificateValidationCallback">
                一个 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。
              </param>
      <param name="userCertificateSelectionCallback">
                一个 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择要用于身份验证的证书。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 不是可写的。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary>
              新实例初始化 <see cref="T:System.Net.Security.SslStream" /> 类使用指定 <see cref="T:System.IO.Stream" /></summary>
      <param name="innerStream">
                一个 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
              </param>
      <param name="leaveInnerStreamOpen">
                一个布尔值，指示的闭包行为 <see cref="T:System.IO.Stream" /> 使用对象 <see cref="T:System.Net.Security.SslStream" /> 用于发送和接收数据。
                 此参数指示是否内部流处于打开状态。
              </param>
      <param name="userCertificateValidationCallback">
                一个 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 委托，负责验证远程方提供的证书。
              </param>
      <param name="userCertificateSelectionCallback">
                一个 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 委托，负责选择要用于身份验证的证书。
              </param>
      <param name="encryptionPolicy">
                要使用的 <see cref="T:System.Net.Security.EncryptionPolicy" />。
              </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> 不可读。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 不是可写的。
                
                  - 或 -
                
                  <paramref name="encryptionPolicy" /> 无效。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary>
              由客户端进行身份验证服务器和 （可选） 中的客户端-服务器连接的客户端调用。
            </summary>
      <param name="targetHost">
                共享此服务器的名称 <see cref="T:System.Net.Security.SslStream" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此服务器身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary>
              由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证。
               身份验证过程使用指定的证书集合和系统默认的 SSL 协议。
            </summary>
      <param name="targetHost">
                将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。
              </param>
      <param name="clientCertificates">
                包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>
              由客户端进行身份验证服务器和 （可选） 中的客户端-服务器连接的客户端调用。
               身份验证过程使用指定的证书集合和 SSL 协议。
            </summary>
      <param name="targetHost">
                将共享此服务器的名称 <see cref="T:System.Net.Security.SslStream" />。
              </param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> ，其中包含客户端证书。
              </param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示所使用的身份验证协议。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否在身份验证期间检查证书吊销列表。
              </param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <summary>
              由客户端进行身份验证服务器和 （可选） 中以异步操作的客户端-服务器连接的客户端调用。
            </summary>
      <param name="targetHost">
                共享此服务器的名称 <see cref="T:System.Net.Security.SslStream" />。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此服务器身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <summary>
              由客户端调用，以对服务器或客户端服务器连接中的客户端（可选）进行身份验证，此为异步操作。
               身份验证过程使用指定的证书集合和系统默认的 SSL 协议。
            </summary>
      <param name="targetHost">
                将共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。
              </param>
      <param name="clientCertificates">
                包含客户端证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <returns>
              表示异步操作的任务对象。
            </returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>
              由客户端进行身份验证服务器和 （可选） 中以异步操作的客户端-服务器连接的客户端调用。
               身份验证过程使用指定的证书集合和 SSL 协议。
            </summary>
      <param name="targetHost">
                将共享此服务器的名称 <see cref="T:System.Net.Security.SslStream" />。
              </param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> ，其中包含客户端证书。
              </param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示所使用的身份验证协议。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否在身份验证期间检查证书吊销列表。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
              由服务器进行身份验证服务器和 （可选） 中使用指定的证书的客户端-服务器连接的客户端调用。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的证书。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此客户端身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法不支持在 Windows 95、 Windows 98 或 Windows Millennium。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary>
              由服务器调用，以使用指定的证书、要求和系统默认安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的 X509Certificate 。
              </param>
      <param name="clientCertificateRequired">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。
                 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，并使此对象处于不可用的状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已进行了身份验证。
                
                  - 或 -
                
                  之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。
                
                  - 或 - 
                
                  身份验证已在进行中。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>
              由服务器调用，以使用指定的证书、要求和安全协议在客户端 - 服务器连接中对服务器和客户端（可选）进行身份验证。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的 X509Certificate 。
              </param>
      <param name="clientCertificateRequired">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。
                 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。
              </param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，并使此对象处于不可用的状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已进行了身份验证。
                
                  - 或 -
                
                  之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了客户端身份验证。
                
                  - 或 - 
                
                  身份验证已在进行中。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 方法。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>
              由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的 X509Certificate 。
              </param>
      <param name="clientCertificateRequired">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。
                 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。
              </param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
              由服务器进行身份验证服务器和 （可选） 中使用异步操作的形式指定的证书的客户端-服务器连接的客户端调用。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的证书。
              </param>
      <returns>
              返回 <see cref="T:System.Threading.Tasks.Task" />
            
              表示异步操作的任务对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此客户端身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> 方法不支持在 Windows 95、 Windows 98 或 Windows Millennium。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <summary>
              由服务器调用，以通过异步操作的形式使用指定的证书、要求和安全协议对客户端 - 服务器连接中的服务器和客户端（可选）进行身份验证。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的 X509Certificate 。
              </param>
      <param name="clientCertificateRequired">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。
                 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <returns>
              表示异步操作的任务对象。
            </returns>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以验证服务器和 （可选） 客户端调用。
            </summary>
      <param name="targetHost">
                共享此服务器的名称 <see cref="T:System.Net.Security.SslStream" />。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此服务器身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>
              由客户端调用，以使用指定的证书和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。
            </summary>
      <param name="targetHost">
                共享此 <see cref="T:System.Net.Security.SslStream" /> 的服务器名称。
              </param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <param name="asyncCallback">
                一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。
              </param>
      <param name="asyncState">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，并使此对象处于不可用的状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已进行了身份验证。
                
                  - 或 -
                
                  之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。
                
                  - 或 - 
                
                  身份验证已在进行中。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>
              由客户端开始一个异步操作以验证服务器和 （可选） 使用指定的证书和安全协议的客户端调用。
            </summary>
      <param name="targetHost">
                共享此服务器的名称 <see cref="T:System.Net.Security.SslStream" />。
              </param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> 包含客户端证书。
              </param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示所使用的身份验证协议。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否在身份验证期间检查证书吊销列表。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> 不是有效 <see cref="T:System.Security.Authentication.SslProtocols" />  值。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此服务器身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <summary>
              由服务器以便开始一个异步操作以对客户端进行身份验证和 （可选） 中的客户端-服务器连接的服务器。
            </summary>
      <param name="serverCertificate">
                在 x509 证书用于对服务器进行身份验证。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成身份验证时要调用的方法的委托。
              </param>
      <param name="asyncState">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已经发生身份验证。
                
                  - 或 -
                
                  使用此客户端身份验证 <see cref="T:System.Net.Security.SslStream" /> 之前已尝试进行。
                
                  - 或 - 
                
                  正在进行身份验证。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法不支持在 Windows 95、 Windows 98 或 Windows Millennium。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>
              由服务器调用，以使用指定的证书、要求和系统默认安全协议开始对服务器和客户端（可选）异步进行身份验证。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的 X509Certificate 。
              </param>
      <param name="clientCertificateRequired">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。
                 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <param name="asyncCallback">
                一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。
              </param>
      <param name="asyncState">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，并使此对象处于不可用的状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已进行了身份验证。
                
                  - 或 -
                
                  之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。
                
                  - 或 - 
                
                  身份验证已在进行中。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <summary>
              由服务器调用，以使用指定的证书、要求和安全协议开始对服务器和客户端（可选）异步进行身份验证。
            </summary>
      <param name="serverCertificate">
                用于对服务器进行身份验证的 X509Certificate 。
              </param>
      <param name="clientCertificateRequired">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否向客户端请求证书用于进行身份验证。
                 请注意，这只是一个请求 - 如果没有提供任何证书，服务器仍然可接受连接请求。
              </param>
      <param name="enabledSslProtocols">
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示进行身份验证所使用的协议。
              </param>
      <param name="checkCertificateRevocation">
                一个 <see cref="T:System.Boolean" /> 值，该值指定身份验证期间是否检查证书吊销列表。
              </param>
      <param name="asyncCallback">
                一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。
              </param>
      <param name="asyncState">
                一个用户定义对象，其中包含操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> 不是有效的 <see cref="T:System.Security.Authentication.SslProtocols" /> 值。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，并使此对象处于不可用的状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  已进行了身份验证。
                
                  - 或 -
                
                  之前已尝试使用此 <see cref="T:System.Net.Security.SslStream" /> 进行了服务器身份验证。
                
                  - 或 - 
                
                  身份验证已在进行中。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.PlatformNotSupportedException">
                  Windows 95、Windows 98 或 Windows Millennium 上不支持 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 方法。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始异步读的操作从流中读取数据并将它存储在指定的数组。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 从流中读取的模式接收字节的数组。
              </param>
      <param name="offset">
                中的从零开始的位置 <paramref name="buffer" /> 从此处开始存储读取的数据从该流。
              </param>
      <param name="count">
                最大要从流中读取的字节数。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成读取的操作时要调用的方法的委托。
              </param>
      <param name="asyncState">
                用户定义的对象，其中包含读操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
              一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.
                
                  <paramref name="-or-" /><paramref name="offset" /> &gt; 的长度 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> + count &gt; 的长度 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  读取的操作失败。
                
                  - 或 -
                
                  加密是在使用中，但无法解密数据。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的读取的操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>
              开始异步写操作，可将 <see cref="T:System.Byte" />s 从指定的缓冲区写入流。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 提供写入流中的字节的数组。
              </param>
      <param name="offset">
                中的从零开始的位置 <paramref name="buffer" /> 从此处开始读取要写入到流的字节。
              </param>
      <param name="count">
        <see cref="T:System.Int32" /> 值，该值指定要读取的字节数 <paramref name="buffer" />。
              </param>
      <param name="asyncCallback">
        <see cref="T:System.AsyncCallback" /> 引用在完成写入操作时要调用的方法的委托。
              </param>
      <param name="asyncState">
                用户定义的对象，其中包含写操作的相关信息。
                 操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。
              </param>
      <returns>
        <see cref="T:System.IAsyncResult" /> 对象，它指示异步操作的状态。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.
                
                  <paramref name="-or-" /><paramref name="offset" /> &gt; 的长度 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> + count &gt; 的长度 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的写入操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否可读的基础流。
            </summary>
      <returns>
        <see langword="true" /> 如果已进行身份验证且基础流可读，则为否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否可查找基础流。
            </summary>
      <returns>
              此属性始终返回 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。
            </summary>
      <returns>
        <see langword="true" /> 如果基础流支持超时;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否可写的基础流。
            </summary>
      <returns>
        <see langword="true" /> 如果已进行身份验证且基础流可写，则为否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示证书验证过程中是否检查证书吊销列表。
            </summary>
      <returns>
              如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary>
              获取一个值，标识由此的大容量加密算法 <see cref="T:System.Net.Security.SslStream" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> 值。
            </returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> 属性访问之前完成身份验证过程或身份验证过程失败。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary>
              获取一个值，标识使用的加密算法的强度 <see cref="T:System.Net.Security.SslStream" />。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值以位为单位指定的算法的强度。
            </returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <summary>
              释放由 <see cref="T:System.Net.Security.SslStream" /> 占用的非托管资源，还可以另外再释放托管资源。
            </summary>
      <param name="disposing">
                若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <summary>
              结束挂起的异步服务器身份验证操作入门的以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是通过调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有挂起的服务器身份验证才能完成。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <summary>
              结束挂起的异步客户端身份验证操作入门的以前调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是通过调用 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />。
                </exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">
                  身份验证失败，此对象处于不可用状态。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有挂起的客户端身份验证才能完成。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <summary>
              结束异步读取的操作开始使用的以前调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <returns>
              一个 <see cref="T:System.Int32" /> 从基础流中读取指定的字节数的值。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是通过调用 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有任何挂起的读的操作完成。
                </exception>
      <exception cref="T:System.IO.IOException">
                  读取的操作失败。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <summary>
              结束异步写操作入门的以前调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
            </summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> 返回通过调用实例 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是通过调用 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  没有任何正在等待的写入操作完成。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary>
              使所有缓冲的数据都写入基础设备。
            </summary>
    </member>
    <member name="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)">
      <param name="cancellationToken">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary>
              获取用于生成消息身份验证代码 (Mac) 的算法。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 值。
            </returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> 属性访问之前完成身份验证过程或身份验证过程失败。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary>
              获取一个值，标识的此实例所使用的哈希算法的强度。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定的强度 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 算法，以位为单位。
               有效值为 128 或 160。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否已成功身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果发生了成功的身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsEncrypted">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否此 <see cref="T:System.Net.Security.SslStream" /> 使用数据加密。
            </summary>
      <returns>
        <see langword="true" /> 如果正在通过网络传输之前加密和解密数据，到达远程终结点;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否服务器和客户端已经过身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果服务器已经过身份验证;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsServer">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示连接的本地端使用的 <see cref="T:System.Net.Security.SslStream" /> 与服务器进行身份验证。
            </summary>
      <returns>
        <see langword="true" /> 如果本地终结点作为经过身份验证的连接; 的服务器端成功通过了身份验证否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.IsSigned">
      <summary>
              获取 <see cref="T:System.Boolean" /> 值，该值指示是否使用此流发送的数据进行签名。
            </summary>
      <returns>
        <see langword="true" /> 如果在正在传输; 前已签名数据否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary>
              获取用于此密钥交换算法 <see cref="T:System.Net.Security.SslStream" />。
            </summary>
      <returns>
              一个 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 值。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary>
              获取一个值，用于标识此实例所使用的密钥交换算法的强度。
            </summary>
      <returns>
        <see cref="T:System.Int32" /> 值，该值指定的强度 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 算法，以位为单位。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary>
              获取基础流的长度。
            </summary>
      <returns>
        <see cref="T:System.Int64" />。
            
              基础流的长度。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  获取此属性的值时，不支持的基础流是 <see cref="T:System.Net.Sockets.NetworkStream" />。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary>
              获取用于进行身份验证的本地终结点的证书。
            </summary>
      <returns>
              一个表示进行身份验证提供的证书的 x509 证书对象或 <see langword="null" /> 如果不提供的任何证书。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  身份验证失败或未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary>
              获取或设置基础流中的当前位置。
            </summary>
      <returns>
        <see cref="T:System.Int64" />。
            
              中的基础流的当前位置。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  不支持设置此属性。
                
                  - 或 -
                
                  获取此属性的值时，不支持的基础流是 <see cref="T:System.Net.Sockets.NetworkStream" />。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
              从该流中读取数据并将其存储在指定的数组。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 从此流中读取的接收字节的数组。
              </param>
      <param name="offset">
                一个 <see cref="T:System.Int32" /> ，其中包含中的从零开始的位置 <paramref name="buffer" /> 从此处开始存储读取的数据从该流。
              </param>
      <param name="count">
                一个 <see cref="T:System.Int32" /> 包含要从此流中读取的字节的最大数目。
              </param>
      <returns>
              一个 <see cref="T:System.Int32" /> 值，该值指定读取的字节数。
               当没有更多要读取的数据时，返回 0。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.
                
                  <paramref name="-or-" /><paramref name="offset" /> &gt; 的长度 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> + count &gt; 的长度 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  读取的操作失败。
                   如果无法确定失败的原因，请检查内部异常。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的读取的操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary>
              获取或设置读取的操作等待数据的时间量。
            </summary>
      <returns>
              一个 <see cref="T:System.Int32" /> ，它指定一个同步读取操作失败之前所经过的时间量。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary>
              获取用于进行身份验证的远程终结点的证书。
            </summary>
      <returns>
              一个表示进行身份验证提供的证书的 x509 证书对象或 <see langword="null" /> 如果不提供的任何证书。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  身份验证失败或未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
              引发 <see cref="T:System.NotSupportedException" />。
            </summary>
      <param name="offset">
                忽略此值。
              </param>
      <param name="origin">
                忽略此值。
              </param>
      <returns>
              总是引发 <see cref="T:System.NotSupportedException" />。
            </returns>
      <exception cref="T:System.NotSupportedException">
                  不支持查找 <see cref="T:System.Net.Security.SslStream" /> 对象。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary>
              设置基础流的长度。
            </summary>
      <param name="value">
        <see cref="T:System.Int64" /> 值，该值指定流的长度。
              </param>
    </member>
    <member name="M:System.Net.Security.SslStream.ShutdownAsync">
      <summary>
              关闭此 SslStream。
            </summary>
      <returns>
              表示异步操作的任务对象。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary>
              获取一个值，该值指示使用此连接进行身份验证的安全协议。
            </summary>
      <returns>
        <see cref="T:System.Security.Authentication.SslProtocols" /> 值，该值表示所使用的身份验证协议。
            </returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary>
              获取 <see cref="T:System.Net.TransportContext" /> 用于使用扩展的保护的身份验证。
            </summary>
      <returns>
        <see cref="T:System.Net.TransportContext" /> 对象，其中包含用于扩展保护的通道绑定令牌 (CBT)。
            </returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary>
              将指定的数据写入该流。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 提供写入流中的字节的数组。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的写入操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
              将指定数目的 <see cref="T:System.Byte" />s 到使用指定的缓冲区和偏移量的基础流。
            </summary>
      <param name="buffer">
                一个 <see cref="T:System.Byte" /> 提供写入流中的字节的数组。
              </param>
      <param name="offset">
                一个 <see cref="T:System.Int32" /> ，其中包含中的从零开始的位置 <paramref name="buffer" /> 从此处开始读取要写入到流的字节。
              </param>
      <param name="count">
                一个 <see cref="T:System.Int32" /> ，其中包含要读取的字节数 <paramref name="buffer" />。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.
                
                  <paramref name="-or-" /><paramref name="offset" /> &gt; 的长度 <paramref name="buffer" />。
                
                  - 或 -
                
                  <paramref name="offset" /> + count &gt; 的长度 <paramref name="buffer" />。
                </exception>
      <exception cref="T:System.IO.IOException">
                  写入操作失败。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  已存在正在进行的写入操作。
                </exception>
      <exception cref="T:System.ObjectDisposedException">
                  此对象已关闭。
                </exception>
      <exception cref="T:System.InvalidOperationException">
                  身份验证后未发生。
                </exception>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary>
              获取或设置等待数据写入操作的时间量。
            </summary>
      <returns>
              一个 <see cref="T:System.Int32" /> ，指定同步写入操作失败之前所经过的时间量。
            </returns>
    </member>
  </members>
</doc>