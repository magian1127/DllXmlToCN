<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary>
              指示用于查找和加载程序集将反序列化过程中使用的方法。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary>
              在完整模式下，反序列化期间使用的程序集必须与在序列化过程中使用的程序集完全匹配。
              <see cref="Overload:System.Reflection.Assembly.Load" /> 方法 <see cref="T:System.Reflection.Assembly" /> 类用于加载程序集。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary>
              在简单模式下，反序列化期间使用的程序集需要与在序列化过程中使用的程序集完全不匹配。
               具体而言，版本号不需要作为匹配 <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> 方法用于加载程序集。
            </summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary>
              指示类型说明中的序列化流中的布局的格式。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary>
              指示类型可以提供对所有对象成员和 <see cref="T:System.Runtime.Serialization.ISerializable" /> 对象成员。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary>
              指示类型，可以仅对数组的对象，类型的对象成员表述 <see cref="T:System.Object" />, ，和 <see cref="T:System.Runtime.Serialization.ISerializable" /> 非基元值类型。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary>
              指示该字符串可授予在 XSD 格式而不是 SOAP。
               任何字符串 Id 进行不传输。
            </summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary>
              允许访问的字段名称和支持的对象的字段类型 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口。
            </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary>
              获取或设置序列化的对象的字段名称。
            </summary>
      <returns>
              序列化对象的字段名称。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary>
              获取或设置序列化的对象的字段类型。
            </summary>
      <returns>
              序列化对象的字段类型。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary>
              指定用于.NET Framework 远程处理的自动反序列化的级别。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary>
              .NET Framework 远程处理完整反序列化级别。
               它支持所有类型在所有情况下，远程处理都支持。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary>
              .NET Framework 远程处理较低的反序列化级别。
               它支持与基本远程处理功能相关联的类型。
            </summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary>
              提供了静态方法，以协助实现 <see cref="T:System.Runtime.Serialization.Formatter" /> 进行序列化。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary>
              确定是否指定 <see cref="T:System.Type" /> 可以反序列化与 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性设置为 <see langword="Low" />。
            </summary>
      <param name="t">
        <see cref="T:System.Type" /> 检查能力进行反序列化。
              </param>
      <param name="securityLevel">
        <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性值。
              </param>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="t" /> 参数是一个高级的类型，不能为反序列化时 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性设置为 <see langword="Low" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary>
              从指定的对象中提取数据并将其作为一个对象数组返回。
            </summary>
      <param name="obj">
                要写入的格式化程序的对象。
              </param>
      <param name="members">
                要从对象中提取的成员。
              </param>
      <returns>
              一个数组 <see cref="T:System.Object" /> ，其中包含数据存储在 <paramref name="members" /> 和与相关 <paramref name="obj" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="members" /> 参数为 <see langword="null" />。
                
                  一个元素 <paramref name="members" /> 是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  一个元素 <paramref name="members" /> 不表示字段。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary>
              创建指定的对象类型的新实例。
            </summary>
      <param name="type">
                要创建的对象的类型。
              </param>
      <returns>
              指定类型的零的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> 参数不是有效的公共语言运行时类型。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary>
              获取指定的类可序列化的所有成员 <see cref="T:System.Type" />。
            </summary>
      <param name="type">
                正在序列化的类型。
              </param>
      <returns>
              类型的数组 <see cref="T:System.Reflection.MemberInfo" /> 非瞬时、 非静态成员。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>
              获取指定的类可序列化的所有成员 <see cref="T:System.Type" /> 且位于提供 <see cref="T:System.Runtime.Serialization.StreamingContext" />。
            </summary>
      <param name="type">
                正在序列化或克隆的类型。
              </param>
      <param name="context">
                发生序列化上下文。
              </param>
      <returns>
              类型的数组 <see cref="T:System.Reflection.MemberInfo" /> 非瞬时、 非静态成员。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>
              返回为指定的序列化代理项 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。
            </summary>
      <param name="innerSurrogate">
                指定代理项。
              </param>
      <returns>
        <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 指定 <paramref name="innerSurrogate" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary>
              查找 <see cref="T:System.Type" /> 中提供的指定对象的 <see cref="T:System.Reflection.Assembly" />。
            </summary>
      <param name="assem">
                你想要查找对象的程序集。
              </param>
      <param name="name">
                对象的名称。
              </param>
      <returns>
        <see cref="T:System.Type" /> 的已命名的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assem" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary>
              创建指定的对象类型的新实例。
            </summary>
      <param name="type">
                要创建的对象的类型。
              </param>
      <returns>
              指定类型的零的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary>
              填充指定的对象从对象的数据数组绘制每个字段的值。
            </summary>
      <param name="obj">
                要填充的对象。
              </param>
      <param name="members">
                一个数组 <see cref="T:System.Reflection.MemberInfo" /> 描述的字段和属性来填充。
              </param>
      <param name="data">
                一个数组 <see cref="T:System.Object" /> ，它指定每个字段和属性来填充值。
              </param>
      <returns>
              新填充的对象。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" />、<paramref name="members" /> 或 <paramref name="data" /> 参数为 <see langword="null" />。
                
                  <paramref name="members" /> 的元素为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  长度 <paramref name="members" /> 的长度不匹配 <paramref name="data" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  一个元素 <paramref name="members" /> 不是实例的 <see cref="T:System.Reflection.FieldInfo" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.IDeserializationCallback">
      <summary>
              指示已完成反序列化整个对象图时要通知一个类。
               请注意与 XmlSerializer (System.Xml.Serialization.XmlSerializer) 反序列化时，此接口不会调用。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
      <summary>
              在整个对象图形已经反序列化时运行。
            </summary>
      <param name="sender">
                启动回调的对象。
                 当前未实现该参数的功能。
              </param>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary>
              提供用于序列化对象格式化功能。
            </summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary>
              获取或设置 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 反序列化过程中执行类型查找。
            </summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 反序列化过程中执行类型查找。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary>
              获取或设置 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 用于序列化和反序列化。
            </summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 用于序列化和反序列化。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary>
              反序列化所提供的流上的数据并将重组的对象图。
            </summary>
      <param name="serializationStream">
                包含要反序列化的数据的流。
              </param>
      <returns>
              反序列化图形的顶级对象。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>
              序列化的对象或具有所提供的流到给定的根的对象图。
            </summary>
      <param name="serializationStream">
                格式化程序序列化的数据的放置位置的流。
                 此流可以引用多种 （例如文件、 网络、 内存等） 的后备存储区。
              </param>
      <param name="graph">
                对象或对象图，要序列化的根。
                 将自动序列化此根对象的所有子对象。
              </param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary>
              获取或设置 <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> 当前格式化程序使用。
            </summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> 使用此格式化程序。
            </returns>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatterConverter">
      <summary>
              实例之间提供连接 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 最佳提供格式化程序类适用于分析中的数据和 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.Convert(System.Object,System.Type)">
      <summary>
              将值转换为给定 <see cref="T:System.Type" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 到 <paramref name="value" /> 将要转换。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>
              将值转换为给定 <see cref="T:System.TypeCode" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <param name="typeCode">
        <see cref="T:System.TypeCode" /> 到 <paramref name="value" /> 将要转换。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToBoolean(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.Boolean" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToByte(System.Object)">
      <summary>
              将值转换为 8 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToChar(System.Object)">
      <summary>
              将值转换为 Unicode 字符。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToDateTime(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.DateTime" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToDecimal(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.Decimal" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToDouble(System.Object)">
      <summary>
              将值转换为双精度浮点数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToInt16(System.Object)">
      <summary>
              将值转换为 16 位有符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToInt32(System.Object)">
      <summary>
              将值转换为 32 位有符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToInt64(System.Object)">
      <summary>
              将值转换为 64 位有符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToSByte(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.SByte" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToSingle(System.Object)">
      <summary>
              将值转换为单精度浮点数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToString(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.String" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToUInt16(System.Object)">
      <summary>
              将值转换为 16 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToUInt32(System.Object)">
      <summary>
              将值转换为 32 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatterConverter.ToUInt64(System.Object)">
      <summary>
              将值转换为 64 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" />。
            </returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializable">
      <summary>
              允许对象以控制其自己的序列化和反序列化。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary>
              实现允许对一个对象执行序列化和反序列化的另一个序列化代理项选择器。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
              填充所提供 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 将对象序列化所需的数据。
            </summary>
      <param name="obj">
                要序列化的对象。
              </param>
      <param name="info">
                要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
              </param>
      <param name="context">
                此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary>
              使用中的信息的对象填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="obj">
                要填充的对象。
              </param>
      <param name="info">
                要填充对象的信息。
              </param>
      <param name="context">
                从其中反序列化该对象源。
              </param>
      <param name="selector">
                开始执行搜索兼容的代理项的代理项选择器。
              </param>
      <returns>
              填充的反序列化的对象。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary>
              指示序列化代理项选择器类。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>
              指定代理项的下一个 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />，以检查当前实例在指定上下文中是否不具有指定类型和程序集的代理项。
            </summary>
      <param name="selector">
                下一个要检查的代理项选择器。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary>
              返回链中的下一个代理项选择器。
            </summary>
      <returns>
              链中的下一个代理项选择器或 <see langword="null" />。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>
              查找表示指定的对象的类型，指定的序列化上下文的指定的代理项选择器开始的代理项。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 的需要为代理项的对象 （类）。
              </param>
      <param name="context">
                当前序列化源或目标上下文。
              </param>
      <param name="selector">
                此方法返回时，包含 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> ，持有从中找到合适代理项对代理项选择器的引用。
                 此参数未经初始化即被传递。
              </param>
      <returns>
              给定的上下文中给定类型的适当代理项。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary>
              为对象生成的 Id。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary>
              返回指定的对象，如果指定的对象已尚未确定通过生成新的 ID 的 ID <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />。
            </summary>
      <param name="obj">
                所需的 ID 的对象。
              </param>
      <param name="firstTime">
        <see langword="true" /> 如果 <paramref name="obj" /> 不以前为知 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; 否则为 <see langword="false" />。
              </param>
      <returns>
              对象的 ID 用于序列化。
              <paramref name="firstTime" /> 设置为 <see langword="true" /> 如果这是首次被标识的对象; 否则，设置为 <see langword="false" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 已要求跟踪的对象太多。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary>
              确定是否对象已被分配一个 id。
            </summary>
      <param name="obj">
                您所请求对象。
              </param>
      <param name="firstTime">
        <see langword="true" /> 如果 <paramref name="obj" /> 不以前为知 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; 否则为 <see langword="false" />。
              </param>
      <returns>
              对象 ID <paramref name="obj" /> 如果以前已知的 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />; 否则为零。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary>
              将跟踪的对象，因为它们被反序列化。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.ObjectManager" /> 类的新实例。
            </summary>
      <param name="selector">
                要使用的代理项选择器。
                <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 确定正确的代理项反序列化给定类型的对象时使用。
                 在反序列化时，代理项选择器在流上传输的信息创建该对象的新实例。
              </param>
      <param name="context">
                流上下文。
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> 不使用 <see langword="ObjectManager" />, ，作为参数传递到实现的任何对象，但 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或 having <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。
                 根据要反序列化的信息的源的不同，这些对象可以执行特定操作。
              </param>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary>
              执行所有记录的修正。
            </summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  修正未成功完成。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary>
              返回的对象替换为指定的对象 id。
            </summary>
      <param name="objectID">
                所请求的对象 ID。
              </param>
      <returns>
              具有指定的对象 ID，如果先前已存储的对象或 <see langword="null" /> 如果没有这样的对象已注册。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectID" /> 参数小于或等于零。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary>
              引发对实现任何已注册对象反序列化事件 <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary>
              调用方法标有 <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />。
            </summary>
      <param name="obj">
                包含要调用的方法的类型的实例。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary>
              数组中记录为某一元素的修正。
            </summary>
      <param name="arrayToBeFixed">
                用来记录修正的数组的 ID。
              </param>
      <param name="index">
                中的索引位置 <paramref name="arrayFixup" /> 修正为其请求。
              </param>
      <param name="objectRequired">
                在修正完成后，当前数组元素将指向的对象 ID。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="index" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary>
              一个数组，以待稍后执行中的指定元素的记录修正。
            </summary>
      <param name="arrayToBeFixed">
                用来记录修正的数组的 ID。
              </param>
      <param name="indices">
                为其请求修正的多维数组中索引。
              </param>
      <param name="objectRequired">
                对象的 ID 数组元素将指向完成修正后。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="indices" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary>
              记录对象成员，以便在稍后执行的修正。
            </summary>
      <param name="objectToBeFixed">
                需要对引用的对象的 ID <paramref name="objectRequired" />。
              </param>
      <param name="memberName">
                成员名称 <paramref name="objectToBeFixed" /> 可以在其中执行修正。
              </param>
      <param name="objectRequired">
                所需的对象的 ID <paramref name="objectToBeFixed" />。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="memberName" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary>
              记录对象的成员，以便在稍后执行的修正。
            </summary>
      <param name="objectToBeFixed">
                需要对引用的对象的 ID <paramref name="objectRequired" /> 对象。
              </param>
      <param name="member">
                成员 <paramref name="objectToBeFixed" /> 可以在其中执行修正。
              </param>
      <param name="objectRequired">
                所需的对象的 ID <paramref name="objectToBeFixed" />。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary>
              因为它反序列化对象，将其与关联的寄存器 <paramref name="objectID" />。
            </summary>
      <param name="obj">
                要注册的对象。
              </param>
      <param name="objectID">
                要注册该对象的 ID。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectID" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> 已注册的对象以外 <paramref name="obj" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary>
              因为它反序列化对象，将其与关联的寄存器 <paramref name="objectID" />, ，并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 与它一起使用。
            </summary>
      <param name="obj">
                要注册的对象。
              </param>
      <param name="objectID">
                要注册该对象的 ID。
              </param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 时使用 <paramref name="obj" /> 实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。
                <paramref name="info" /> 将已完成，但任何所需的链接地址信息并完成该对象时，然后传递到所需的对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectID" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> 已注册的对象以外 <paramref name="obj" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary>
              将对象作为它的成员进行反序列化，将其与关联的寄存器 <paramref name="objectID" />, ，并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="obj">
                要注册的对象。
              </param>
      <param name="objectID">
                要注册该对象的 ID。
              </param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 时使用 <paramref name="obj" /> 实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。
                <paramref name="info" /> 将已完成，但任何所需的链接地址信息并完成该对象时，然后传递到所需的对象。
              </param>
      <param name="idOfContainingObj">
                包含的对象的 ID <paramref name="obj" />。
                 此参数是必需的仅当 <paramref name="obj" /> 是值类型。
              </param>
      <param name="member">
                中包含的对象的字段位置 <paramref name="obj" /> 存在。
                 此参数才有意义 <paramref name="obj" /> 是值类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectID" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> 已注册的对象以外 <paramref name="obj" />, ，或 <paramref name="member" /> 不是 <see cref="T:System.Reflection.FieldInfo" /> 和 <paramref name="member" /> 不是 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary>
              注册时进行反序列化，将对象中包含一个数组中的该成员将其与 <paramref name="objectID" />, ，并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </summary>
      <param name="obj">
                要注册的对象。
              </param>
      <param name="objectID">
                要注册该对象的 ID。
              </param>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 时使用 <paramref name="obj" /> 实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。
                <paramref name="info" /> 将已完成，但任何所需的链接地址信息并完成该对象时，然后传递到所需的对象。
              </param>
      <param name="idOfContainingObj">
                包含的对象的 ID <paramref name="obj" />。
                 此参数是必需的仅当 <paramref name="obj" /> 是值类型。
              </param>
      <param name="member">
                中包含的对象的字段位置 <paramref name="obj" /> 存在。
                 此参数才有意义 <paramref name="obj" /> 是值类型。
              </param>
      <param name="arrayIndex">
                如果 <paramref name="obj" /> 是 <see cref="T:System.ValueType" /> 和数组的成员 <paramref name="arrayIndex" /> 包含该数组内的索引位置 <paramref name="obj" /> 存在。
                <paramref name="arrayIndex" /> 如果忽略 <paramref name="obj" /> 不是同时 <see cref="T:System.ValueType" /> 和数组的成员。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="objectID" /> 参数小于或等于零。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="objectID" /> 已注册的对象以外 <paramref name="obj" />, ，或 <paramref name="member" /> 不是 <see cref="T:System.Reflection.FieldInfo" /> 和 <paramref name="member" /> 不 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary>
              允许用户控制类加载并强制要求要加载的类。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary>
              当在派生类中重写时，控制是否将序列化对象绑定到类型。
            </summary>
      <param name="serializedType">
                格式化程序创建其新实例的对象的类型。
              </param>
      <param name="assemblyName">
                指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。
              </param>
      <param name="typeName">
                指定序列化对象的 <see cref="T:System.Type" /> 名称。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary>
              当在派生类中重写时，控制是否将序列化对象绑定到类型。
            </summary>
      <param name="assemblyName">
                指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。
              </param>
      <param name="typeName">
                指定序列化对象的 <see cref="T:System.Type" /> 名称。
              </param>
      <returns>
              格式化程序创建其新实例的对象的类型。
            </returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationEntry">
      <summary>
              保留的值， <see cref="T:System.Type" />, ，和序列化对象的名称。
            </summary>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationEntry.Name">
      <summary>
              获取对象的名称。
            </summary>
      <returns>
              对象的名称。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationEntry.ObjectType">
      <summary>
              获取 <see cref="T:System.Type" /> 的对象。
            </summary>
      <returns>
              对象的 <see cref="T:System.Type" />。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationEntry.Value">
      <summary>
              获取该对象中包含的值。
            </summary>
      <returns>
              在对象中包含的值。
            </returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationInfo">
      <summary>
              将序列化或反序列化对象所需的所有数据都存储。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)">
      <summary>
              创建 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的新实例。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 要序列化的对象。
              </param>
      <param name="converter">
        <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> 在反序列化过程中使用。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="converter" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)">
      <summary>
              添加到一个值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储，其中 <paramref name="value" /> 与关联 <paramref name="name" /> 并序列化为 <see cref="T:System.Type" /><paramref name="type" />。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要进行序列化的值。
                 此对象的任何子表达式将自动序列化。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 将与当前对象相关联。
                 此参数必须始终是对象本身或其基类之一的类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  如果 <paramref name="name" /> 或 <paramref name="type" /> 是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)">
      <summary>
              添加到一个 64 位无符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see langword="UInt64" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)">
      <summary>
              添加到一个 32 位无符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see langword="UInt32" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)">
      <summary>
              添加到一个 16 位无符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see langword="UInt16" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)">
      <summary>
              添加到一个单精度浮点值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的单个值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)">
      <summary>
              将添加到一个 8 位有符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see langword="Sbyte" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)">
      <summary>
              添加到指定的对象 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储区，其中是与指定名称相关联。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要进行序列化的值。
                 此对象的任何子表达式将自动序列化。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)">
      <summary>
              添加到一个 64 位有符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的 Int64 值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)">
      <summary>
              添加到一个 32 位有符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see langword="Int32" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)">
      <summary>
              添加到一个 16 位有符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see langword="Int16" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)">
      <summary>
              添加到一个双精度浮点值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的双精度值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)">
      <summary>
              添加到一个十进制值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的十进制值。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  如果 <paramref name="name" /> 参数是 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  如果已经与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)">
      <summary>
              添加 <see cref="T:System.DateTime" /> 值到 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
        <see cref="T:System.DateTime" /> 要序列化值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)">
      <summary>
              将添加到一个 Unicode 字符值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的字符值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)">
      <summary>
              将添加到一个 8 位无符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的字节值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)">
      <summary>
              添加到一个布尔值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要关联值，因此它可以反序列化更高版本的名称。
              </param>
      <param name="value">
                要序列化的布尔值。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  已与关联的值 <paramref name="name" />。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfo.AssemblyName">
      <summary>
              获取或设置要在仅序列化期间序列化的类型的程序集名称。
            </summary>
      <returns>
              要序列化的类型的程序集的全名。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  该属性设置为的值是 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfo.FullTypeName">
      <summary>
              获取或设置的完整名称 <see cref="T:System.Type" /> 要序列化。
            </summary>
      <returns>
              要序列化的类型的全名。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  此属性设置为的值是 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)">
      <summary>
              检索一个布尔值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与关联的布尔值 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为布尔值。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetByte(System.String)">
      <summary>
              检索从 8 位无符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 8 位无符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 8 位无符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetChar(System.String)">
      <summary>
              检索从一个 Unicode 字符值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 Unicode 字符 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 Unicode 字符。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)">
      <summary>
              检索 <see cref="T:System.DateTime" /> 值从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
        <see cref="T:System.DateTime" /> 与关联值 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 <see cref="T:System.DateTime" /> 值。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)">
      <summary>
              检索一个十进制值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              从一个十进制值 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 不能转换为十进制。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)">
      <summary>
              检索从一个双精度浮点值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的双精度浮点值 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为双精度浮点值。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetEnumerator">
      <summary>
              返回 <see cref="T:System.Runtime.Serialization.SerializationInfoEnumerator" /> 用于循环访问中的名称 / 值对 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <returns>
              一个 <see cref="T:System.Runtime.Serialization.SerializationInfoEnumerator" /> 分析中包含的名称 / 值对 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)">
      <summary>
              检索一个 16 位有符号的整数值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 16 位带符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 16 位有符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)">
      <summary>
              检索一个 32 位有符号的整数值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值的名称。
              </param>
      <returns>
              与相关联的 32 位带符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 32 位有符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)">
      <summary>
              检索一个 64 位有符号的整数值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 64 位带符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 64 位有符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)">
      <summary>
              检索从 8 位有符号的整数值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 8 位带符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 8 位有符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)">
      <summary>
              检索从一个单精度浮点值 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值的名称。
              </param>
      <returns>
              与相关联的单精度浮点值 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为单精度浮点值。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetString(System.String)">
      <summary>
              检索 <see cref="T:System.String" /> 值从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与 <see cref="T:System.String" /> 关联的 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 <see cref="T:System.String" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)">
      <summary>
              检索一个 16 位无符号的整数值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 16 位无符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 16 位无符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)">
      <summary>
              检索一个 32 位无符号的整数值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 32 位无符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 32 位无符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)">
      <summary>
              检索一个 64 位无符号的整数值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <returns>
              与相关联的 64 位无符号的整数 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 64 位无符号整数。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)">
      <summary>
              检索一个值，从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <param name="name">
                要检索的值与关联的名称。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 要检索的值。
                 如果存储的值不能转换为此类型，系统可能会引发 <see cref="T:System.InvalidCastException" />。
              </param>
      <returns>
              指定的对象 <see cref="T:System.Type" /> 与关联 <paramref name="name" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="type" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.InvalidCastException">
                  与关联的值 <paramref name="name" /> 无法转换为 <paramref name="type" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  当前实例中未找到具有指定名称的元素。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfo.MemberCount">
      <summary>
              获取已添加到的成员数 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 存储。
            </summary>
      <returns>
              已添加到当前的成员数 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfo.ObjectType">
      <summary>
              返回要序列化对象的类型。
            </summary>
      <returns>
              正在序列化的对象类型。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfo.SetType(System.Type)">
      <summary>
              集 <see cref="T:System.Type" /> 要序列化的对象。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 要序列化的对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationInfoEnumerator">
      <summary>
              提供适用于格式化程序的机制，用于分析 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 中的数据。
               此类不能被继承。
            </summary>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.Current">
      <summary>
              获取当前正在检查的项。
            </summary>
      <returns>
              当前正在检查的项。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  枚举器尚未启动枚举的项，或已到达结束枚举。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext">
      <summary>
              下一项更新枚举器。
            </summary>
      <returns>
        <see langword="true" /> 如果找到新元素，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.Name">
      <summary>
              获取当前正在检查的项的名称。
            </summary>
      <returns>
              项名称。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  枚举器尚未启动枚举的项，或已到达结束枚举。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType">
      <summary>
              获取当前正在检查的项的类型。
            </summary>
      <returns>
              当前正在检查的项的类型。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  枚举器尚未启动枚举的项，或已到达结束枚举。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationInfoEnumerator.Reset">
      <summary>
              将枚举数重置为第一项。
            </summary>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.Value">
      <summary>
              获取当前正在检查的项的值。
            </summary>
      <returns>
              当前正在检查的项的值。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  枚举器尚未启动枚举的项，或已到达结束枚举。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取集合中的当前项。
            </summary>
      <returns>
              一个 <see cref="T:System.Runtime.Serialization.SerializationEntry" /> ，其中包含当前序列化数据。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  枚举尚未开始或已结束。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary>
              在运行时管理序列化过程。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.SerializationObjectManager" /> 类的新实例。
            </summary>
      <param name="context">
                一个实例 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类，其中包含有关当前的序列化操作的信息。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary>
              如果该类型的对象具有一个;，调用 OnSerializing 回调事件并注册用于引发 OnSerialized 事件，如果该对象的类型有一个对象。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary>
              注册将在其引发事件的对象。
            </summary>
      <param name="obj">
                要注册的对象。
              </param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary>
              可帮助您选择要委派序列化或反序列化到的进程的序列化代理项中的格式化程序。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary>
              将代理项添加到已检查代理项的列表。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 该代理项是必需的。
              </param>
      <param name="context">
                上下文特定的数据。
              </param>
      <param name="surrogate">
                要为此类型调用的代理项。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="surrogate" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentException">
                  此类型和上下文已存在一个代理项。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary>
              添加指定 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> ，可以处理特定对象类型到列表的代理项。
            </summary>
      <param name="selector">
                要添加的代理项选择器。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selector" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  选择器已位于选择器的列表。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary>
              在选择器链上返回的下一步的选择器。
            </summary>
      <returns>
              下一步 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 链中的选择器上。
            </returns>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>
              返回特定类型的代理项。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 为其请求该代理项。
              </param>
      <param name="context">
                流上下文。
              </param>
      <param name="selector">
                要使用的代理项。
              </param>
      <returns>
              特定类型的代理项。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary>
              删除具有给定类型关联的代理项。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 为其删除该代理项。
              </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 为当前的代理项。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary>
              提供公共语言运行时序列化格式化程序的基本功能。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.Formatter" /> 类的新实例。
            </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary>
              当在派生类中重写时获取或设置 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 与当前格式化程序一起使用。
            </summary>
      <returns>
              与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary>
              当在派生类中重写时获取或设置 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 用于当前序列化。
            </summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 用于当前序列化。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary>
              当在派生类中重写，反序列化流时，则在创建附加到格式化程序创建的对象关系图与最初序列化为该流关系图相同。
            </summary>
      <param name="serializationStream">
                要反序列化的流。
              </param>
      <returns>
              反序列化的对象图的顶级对象。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary>
              返回下一个要序列化格式化程序的内部工作队列中的对象。
            </summary>
      <param name="objID">
                在序列化期间分配给当前对象的 ID。
              </param>
      <returns>
              下一个要序列化的对象。
            </returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  工作队列中检索到的下一个对象不具有分配的 id。
                </exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary>
              包含 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 与当前格式化程序一起使用。
            </summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary>
              包含 <see cref="T:System.Collections.Queue" /> 的对象进行序列化。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary>
              计划稍后进行序列化对象。
            </summary>
      <param name="obj">
                要计划的序列化的对象。
              </param>
      <returns>
              分配给该对象的对象 ID。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary>
              当在派生类中重写序列化具有已连接到格式化程序的流指定的根的对象图。
            </summary>
      <param name="serializationStream">
                对象序列化到流。
              </param>
      <param name="graph">
                要序列化的关系图的根处的对象。
              </param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary>
              当在派生类中重写时获取或设置 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 与当前格式化程序一起使用。
            </summary>
      <returns>
              与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary>
              当在派生类中重写，将数组写入已经连接到格式化程序的流。
            </summary>
      <param name="obj">
                要写入的数组。
              </param>
      <param name="name">
                该数组的名称。
              </param>
      <param name="memberType">
                列阵储存数据的元素的类型。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary>
              当在派生类中重写时已经连接到格式化程序的流中写入一个布尔值。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary>
              当在派生类中重写时已经连接到格式化程序的流中写入的 8 位无符号的整数。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary>
              当在派生类中重写，将 Unicode 字符写入流已附加到格式化程序。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary>
              当在派生类中重写时写入 <see cref="T:System.DateTime" /> 已连接到格式化程序的流的值。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary>
              当在派生类中重写时写入 <see cref="T:System.Decimal" /> 已连接到格式化程序的流的值。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary>
              当在派生类中重写时已经连接到格式化程序的流中写入一个双精度浮点数。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary>
              当在派生类中重写，将一个 16 位带符号的整数写入已经连接到格式化程序的流。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary>
              当在派生类中重写，将一个 32 位有符号的整数写入流。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary>
              当在派生类中重写，将一个 64 位有符号的整数写入流。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary>
              检查所接收的数据的类型并调用相应 <see langword="Write" /> 方法来执行已连接到格式化程序的流的写入。
            </summary>
      <param name="memberName">
                要序列化的成员的名称。
              </param>
      <param name="data">
                要写入到流的格式化程序附加的对象。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary>
              当在派生类中重写时写入对已经连接到格式化程序的流的对象引用。
            </summary>
      <param name="obj">
                要写入的对象引用。
              </param>
      <param name="name">
                成员名。
              </param>
      <param name="memberType">
                引用所指向的对象的类型。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary>
              当在派生类中重写时已经连接到格式化程序的流中写入的 8 位有符号的整数。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary>
              当在派生类中重写时已经连接到格式化程序的流中写入一个单精度浮点数。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary>
              当在派生类中重写时写入 <see cref="T:System.TimeSpan" /> 已连接到格式化程序的流的值。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary>
              当在派生类中重写时已经连接到格式化程序的流中写入的 16 位无符号的整数。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary>
              当在派生类中重写，将 32 位无符号的整数写入已经连接到格式化程序的流。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary>
              当在派生类中重写，将 64 位无符号的整数写入已经连接到格式化程序的流。
            </summary>
      <param name="val">
                要写入的值。
              </param>
      <param name="name">
                成员名。
              </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary>
              当在派生类中重写，将给定类型的值写入已经连接到格式化程序的流。
            </summary>
      <param name="obj">
                表示值类型的对象。
              </param>
      <param name="name">
                成员名。
              </param>
      <param name="memberType">
        <see cref="T:System.Type" /> 的值类型。
              </param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary>
              表示的基实现 <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> 接口，使用 <see cref="T:System.Convert" /> 类和 <see cref="T:System.IConvertible" /> 接口。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary>
              初始化 <see cref="T:System.Runtime.Serialization.FormatterConverter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary>
              将值转换为给定 <see cref="T:System.Type" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 到 <paramref name="value" /> 转换。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary>
              将值转换为给定 <see cref="T:System.TypeCode" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <param name="typeCode">
        <see cref="T:System.TypeCode" /> 到 <paramref name="value" /> 转换。
              </param>
      <returns>
              转换后 <paramref name="value" />, ，或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.Boolean" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary>
              将值转换为 8 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary>
              将值转换为 Unicode 字符。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.DateTime" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.Decimal" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary>
              将值转换为双精度浮点数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary>
              将值转换为 16 位有符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary>
              将值转换为 32 位有符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary>
              将值转换为 64 位有符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary>
              将一个值转换为 <see cref="T:System.SByte" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary>
              将值转换为单精度浮点数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary>
              将指定对象转换为 <see cref="T:System.String" />。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary>
              将值转换为 16 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary>
              将值转换为 32 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary>
              将值转换为 64 位无符号整数。
            </summary>
      <param name="value">
                要转换的对象。
              </param>
      <returns>
              转换后 <paramref name="value" /> 或 <see langword="null" /> 如果 <paramref name="type" /> 参数是 <see langword="null" />。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 <see langword="null" />。
                </exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary>
              以二进制格式序列化和反序列化对象或连接对象的整个图形。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary>
              使用默认值初始化 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>
              新实例初始化 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 使用给定的代理项选择器和流上下文的类。
            </summary>
      <param name="selector">
                要使用的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。
                 可以为 <see langword="null" />。
              </param>
      <param name="context">
                源和目标序列化数据。
              </param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary>
              获取或设置关于查找和加载程序集反序列化程序的行为。
            </summary>
      <returns>
              其中一个 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值，该值指定反序列化程序行为。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary>
              获取或设置类型的对象 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 控制将序列化对象传递给一种类型的绑定。
            </summary>
      <returns>
              若要使用此格式化程序序列化联编程序。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary>
              获取或设置 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 此格式化程序。
            </summary>
      <returns>
              要与此格式化程序一起使用的流上下文。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary>
              指定的流反序列化对象图。
            </summary>
      <param name="serializationStream">
                从其进行反序列化对象图流。
              </param>
      <returns>
              对象图顶级 （根）。
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="serializationStream" /> 支持查找，但其长度为 0。
                
                  - 或 -
                
                  目标类型是 <see cref="T:System.Decimal" />, ，但超出了范围的值为 <see cref="T:System.Decimal" /> 类型。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary>
              获取或设置 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 的自动反序列化 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 执行。
            </summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> ，表示当前的自动反序列化级别。
            </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>
              将对象或具有指定顶级 （根）、 对象图序列化到给定的流。
            </summary>
      <param name="serializationStream">
                关系图是要序列化流。
              </param>
      <param name="graph">
                要序列化的关系图的根处的对象。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationStream" /> 为 <see langword="null" />。
                
                  - 或 -
                
                  <paramref name="graph" /> 为 null。
                </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                  出现错误序列化期间，例如，如果中的某个对象 <paramref name="graph" /> 参数未标记为可序列化。
                </exception>
      <exception cref="T:System.Security.SecurityException">
                  调用方没有所要求的权限。
                </exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary>
              获取或设置 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 控制类型序列化和反序列化过程的替换。
            </summary>
      <returns>
              要与此格式化程序一起使用的代理项选择器。
            </returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary>
              获取或设置类型说明中的序列化流中的布局的格式。
            </summary>
      <returns>
              若要使用的类型布局样式。
            </returns>
    </member>
    <member name="T:System.SerializableAttribute">
      <summary>
              表示类可以序列化。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.SerializableAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.SerializableAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.NonSerializedAttribute">
      <summary>
              表示可序列化类的字段不应进行序列化。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.NonSerializedAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.NonSerializedAttribute" /> 类的新实例。
            </summary>
    </member>
  </members>
</doc>