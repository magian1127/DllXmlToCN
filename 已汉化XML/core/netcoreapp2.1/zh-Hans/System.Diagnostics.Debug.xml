<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>
              提供一组有助于调试代码的方法和属性。
            </summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>
              检查条件 ；如果条件为 <see langword="false" />，则显示一个消息框，其中显示调用堆栈。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />，则不会发送失败消息，也不显示消息框。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>
              检查条件；如果条件为 <see langword="false" />，则输出指定消息并显示指示调用堆栈的消息框。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />，则不会发送指定消息，也不显示消息框。
              </param>
      <param name="message">
                要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>
              检查条件 ；如果条件为 <see langword="false" />，则输出两条指定消息，并显示一个消息框，其中显示调用堆栈。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />，则不会发送指定的消息，也不显示消息框。
              </param>
      <param name="message">
                要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的消息。
              </param>
      <param name="detailMessage">
                要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的详细消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>
              检查条件;如果条件为 <see langword="false" />, ，输出 （简单和格式化） 的两条消息，并显示一个消息框，显示调用堆栈。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />，则不会发送指定的消息，也不显示消息框。
              </param>
      <param name="message">
                要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的消息。
              </param>
      <param name="detailMessageFormat">
                复合格式字符串 （请参见备注） 将发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合。
                 此消息包含文本与零个或多个格式项，对应于对象中混合 <paramref name="args" /> 数组。
              </param>
      <param name="args">
                一个对象数组，其中包含零个或多个要设置格式的对象。
              </param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>
              获取或设置一个值，该值指示是否 <see cref="M:System.Diagnostics.Debug.Flush" /> 应该对调用 <see cref="P:System.Diagnostics.Debug.Listeners" /> 每次写入后。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="M:System.Diagnostics.Debug.Flush" /> 上调用 <see cref="P:System.Diagnostics.Debug.Listeners" /> 后每次进行写; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>
              刷新输出缓冲区，然后调用 <see langword="Close" /> 上的每个方法 <see cref="P:System.Diagnostics.Debug.Listeners" />。
            </summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>
              发出指定的错误消息。
            </summary>
      <param name="message">
                要发出的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>
              发出一条错误消息和详细的错误消息。
            </summary>
      <param name="message">
                要发出的消息。
              </param>
      <param name="detailMessage">
                要发出的详细消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>
              刷新输出缓冲区，并使放入缓冲区中的数据写入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>
              将当前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 增加 1。
            </summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>
              获取或设置缩进级别。
            </summary>
      <returns>
              缩进级别。
               默认值为 0。
            </returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>
              获取或设置缩进的空格数。
            </summary>
      <returns>
              缩进的空格数。
               默认值为四。
            </returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>
              写入消息中的跟踪侦听器后跟行结束符 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="message">
                要写入的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>
              将格式化的字符串中的跟踪侦听器后跟行结束符 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="format">
                一个包含与零个或多个格式项混合的文本的复合格式字符串（请参见“备注”），它与 <paramref name="args" /> 数组中的对象相对应。
              </param>
      <param name="args">
                包含零个或多个要格式化的对象的对象数组。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> 无效。
                
                  - 或 - 
                
                  指示要格式化的参数小于零或大于或等于的数指定的要格式化的对象数。
                </exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>
              将当前的 <see cref="P:System.Diagnostics.Debug.IndentLevel" /> 减少 1。
            </summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>
              将类别名称和消息写入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的跟踪侦听器。
            </summary>
      <param name="message">
                要写入的消息。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>
              将类别名称和对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>
              将对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>
              将消息写入跟踪侦听器中 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="message">
                要写入的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>
              将对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，该值被写入到跟踪侦听器集合中。
              </param>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>
              将消息写入跟踪侦听器中 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，将消息写入到跟踪侦听器集合中。
              </param>
      <param name="message">
                要写入的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>
              将类别名称和对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，类别名称和值写入到集合中的跟踪侦听器。
              </param>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>
              类别名称和消息写入跟踪侦听器中 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，类别名称和消息写入到集合中的跟踪侦听器。
              </param>
      <param name="message">
                要写入的消息。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>
              将对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>
              写入消息中的跟踪侦听器后跟行结束符 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="message">
                要写入的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>
              将类别名称和对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>
              写入格式化的消息中的跟踪侦听器后跟行结束符 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合。
            </summary>
      <param name="format">
                一个包含与零个或多个格式项混合的文本的复合格式字符串（请参见“备注”），它与 <paramref name="args" /> 数组中的对象相对应。
              </param>
      <param name="args">
                一个对象数组，其中包含零个或多个要设置格式的对象。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>
              将类别名称和消息写入 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合中的跟踪侦听器。
            </summary>
      <param name="message">
                要写入的消息。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>
              将类别名称和对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，类别名称和值写入到集合中的跟踪侦听器。
              </param>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>
              将对象的值写入 <see cref="M:System.Object.ToString" /> 方法中的跟踪侦听器 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，该值被写入到跟踪侦听器集合中。
              </param>
      <param name="value">
                一个对象，其名称发送到 <see cref="P:System.Diagnostics.Debug.Listeners" />。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>
              将消息写入跟踪侦听器中 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                要计算的条件表达式。
                 如果条件为 <see langword="true" />, ，将消息写入到跟踪侦听器集合中。
              </param>
      <param name="message">
                要写入的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>
              类别名称和消息写入跟踪侦听器中 <see cref="P:System.Diagnostics.Debug.Listeners" /> 集合，如果条件为 <see langword="true" />。
            </summary>
      <param name="condition">
                若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。
              </param>
      <param name="message">
                要写入的消息。
              </param>
      <param name="category">
                用于组织输出的类别名称。
              </param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>
              启用与调试器的通讯。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>
              发出信号表示连接调试器的断点。
            </summary>
      <exception cref="T:System.Security.SecurityException">
                  未设置跳转到调试器所需的 <see cref="T:System.Security.Permissions.UIPermission" />。
                </exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>
              用常数表示消息的默认类别。
            </summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>
              获取一个值，它指示调试器是否已附加到进程。
            </summary>
      <returns>
              如果调试器已连接，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>
              检查连接的调试器是否已启用日志记录。
            </summary>
      <returns>
              如果已连接调试器并已启用日志记录，则值为 <see langword="true" />；否则为 <see langword="false" />。
               连接的调试器是 <see langword="DbgManagedDebugger" /> 注册表项中已注册的托管调试器。
               有关该注册表项的更多信息，请参见 Enabling JIT-Attach Debugging。
            </returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>
              启动调试器并将其连接到进程。
            </summary>
      <returns>
              如果启动成功或者调试器已连接，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> 未设置为启动调试器。
                </exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>
              发送连接调试器的消息。
            </summary>
      <param name="level">
                消息重要性的说明。
              </param>
      <param name="category">
                消息的类别。
              </param>
      <param name="message">
                要显示的消息。
              </param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>
              通知调试器执行即将进入一个涉及跨线程依赖项的路径。
            </summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>
              确定成员是否会显示在调试器变量窗口中以及其显示方式。
               无法继承此类。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" /> 类的新实例。
            </summary>
      <param name="state">
                其中一个 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 值，该值指定如何显示该成员。
              </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" /> 不属于某个 <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 值。
                </exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>
              获取属性的显示状态。
            </summary>
      <returns>
        <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> 值之一。
            </returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>
              提供有关调试器的显示说明。
            </summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>
              以折叠形式显示元素。
            </summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>
              永远不会显示元素。
            </summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>
              不显示的根元素;如果元素为集合或数组的项，显示的子元素。
            </summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>
              确定类或字段在调试器变量窗口中的显示方式。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" /> 类的新实例。
            </summary>
      <param name="value">
                值列中显示的字符串实例的类型;空字符串 ("") 会导致要隐藏的值列。
              </param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>
              获取或设置要在调试器变量窗口中显示的名称。
            </summary>
      <returns>
              要在调试器变量窗口中显示的名称。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>
              获取或设置该属性的目标的类型。
            </summary>
      <returns>
              该属性的目标类型。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  将 <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" /> 设置为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>
              获取或设置该属性的目标的类型名称。
            </summary>
      <returns>
              该属性的目标类型的名称。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>
              获取或设置要在调试器变量窗口的类型列中显示的字符串。
            </summary>
      <returns>
              要在调试器变量窗口的类型列中显示的字符串。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>
              获取要在调试器变量窗口的值列中显示的字符串。
            </summary>
      <returns>
              要在调试器变量的值列中显示的字符串。
            </returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>
              指定 <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>
              标识不属于应用程序用户代码一部分的类型或成员。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>
              指示属性后面的代码将在运行、 未步骤、 模式中执行。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>
              指示调试器逐句通过代码，而不是单步执行代码。
               无法继承此类。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>
              指定类型的显示代理。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> 类使用的代理的类型名称。
            </summary>
      <param name="typeName">
                代理类型的类型名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> 类使用的代理的类型。
            </summary>
      <param name="type">
                代理类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>
              获取代理类型的类型名称。
            </summary>
      <returns>
              代理类型的类型名称。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>
              获取或设置该属性的目标类型。
            </summary>
      <returns>
              属性的目标类型。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  将 <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" /> 设置为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>
              获取或设置目标类型的名称。
            </summary>
      <returns>
              目标类型的名称。
            </returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>
              指定该类型具有可视化工具。
               此类不能被继承。
            </summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 类，同时指定可视化工具的类型名称。
            </summary>
      <param name="visualizerTypeName">
                可视化工具的完全限定的类型名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 类的新实例，指定可视化工具的类型。
            </summary>
      <param name="visualizer">
                可视化工具的类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  v<paramref name="isualizer" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 类，同时指定可视化工具的类型名称和类型名称的可视化工具对象源。
            </summary>
      <param name="visualizerTypeName">
                可视化工具的完全限定的类型名称。
              </param>
      <param name="visualizerObjectSourceTypeName">
                可视化工具对象源的完全限定的类型名称。
              </param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 类，同时指定可视化工具，其中的可视化工具对象源类型的类型名称。
            </summary>
      <param name="visualizerTypeName">
                可视化工具的完全限定的类型名称。
              </param>
      <param name="visualizerObjectSource">
                可视化工具对象源的类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 类的新实例，指定可视化工具的类型和可视化工具对象源的类型名称。
            </summary>
      <param name="visualizer">
                可视化工具的类型。
              </param>
      <param name="visualizerObjectSourceTypeName">
                可视化工具对象源的完全限定的类型名称。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  v<paramref name="isualizer" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>
              初始化 <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> 类的新实例，指定可视化工具的类型和可视化工具对象源的类型。
            </summary>
      <param name="visualizer">
                可视化工具的类型。
              </param>
      <param name="visualizerObjectSource">
                可视化工具对象源的类型。
              </param>
      <exception cref="T:System.ArgumentNullException">
                  v<paramref name="isualizer" /> 为 <see langword="null" />。
                </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> 为 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>
              获取或设置可视化工具的说明。
            </summary>
      <returns>
              可视化工具的说明。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>
              获取或设置目标类型在程序集级别应用该特性。
            </summary>
      <returns>
              是可视化工具的目标类型。
            </returns>
      <exception cref="T:System.ArgumentNullException">
                  无法设置值，因为它是 <see langword="null" />。
                </exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>
              获取或设置程序集级别应用该特性的完全限定的类型名称。
            </summary>
      <returns>
              目标类型的完全限定的类型名称。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>
              获取该可视化工具的完全限定的类型名对象源。
            </summary>
      <returns>
              可视化工具对象源的完全限定的类型名称。
            </returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>
              获取该可视化工具的完全限定的类型名称。
            </summary>
      <returns>
              完全限定的可视化工具类型名称。
            </returns>
    </member>
  </members>
</doc>