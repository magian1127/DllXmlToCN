<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Principal</name>
  </assembly>
  <members>
    <member name="T:System.Security.Principal.IIdentity">
      <summary>
              定义标识对象的基本功能。
            </summary>
    </member>
    <member name="P:System.Security.Principal.IIdentity.AuthenticationType">
      <summary>
              获取使用的身份验证的类型。
            </summary>
      <returns>
              用于标识用户的身份验证的类型。
            </returns>
    </member>
    <member name="P:System.Security.Principal.IIdentity.IsAuthenticated">
      <summary>
              获取一个值，该值指示是否已验证用户。
            </summary>
      <returns>
              如果用户已经过验证，则为 <see langword="true" />；否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Security.Principal.IIdentity.Name">
      <summary>
              获取当前用户的名称。
            </summary>
      <returns>
              以其名义运行代码的用户的名称。
            </returns>
    </member>
    <member name="T:System.Security.Principal.IPrincipal">
      <summary>
              定义主体对象的基本功能。
            </summary>
    </member>
    <member name="P:System.Security.Principal.IPrincipal.Identity">
      <summary>
              获取当前主体的标识。
            </summary>
      <returns>
        <see cref="T:System.Security.Principal.IIdentity" /> 与当前的主体关联的对象。
            </returns>
    </member>
    <member name="M:System.Security.Principal.IPrincipal.IsInRole(System.String)">
      <summary>
              确定当前用户是否属于指定角色。
            </summary>
      <param name="role">
                对其进行检查的成员身份角色的名称。
              </param>
      <returns>
        <see langword="true" /> 如果当前的主体是指定角色; 的成员否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="T:System.Security.Principal.PrincipalPolicy">
      <summary>
              指定应如何为应用程序域创建主体和标识对象。
               默认值为 <see langword="UnauthenticatedPrincipal" />。
            </summary>
    </member>
    <member name="F:System.Security.Principal.PrincipalPolicy.NoPrincipal">
      <summary>
              应该不创建任何用户或标识对象。
            </summary>
    </member>
    <member name="F:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal">
      <summary>
              应创建未经身份验证的实体的主体和标识对象。
               未经身份验证的实体具有 <see cref="P:System.Security.Principal.GenericIdentity.Name" /> 设置为空字符串 ("") 和 <see cref="P:System.Security.Principal.GenericIdentity.IsAuthenticated" /> 设置为 <see langword="false" />。
            </summary>
    </member>
    <member name="F:System.Security.Principal.PrincipalPolicy.WindowsPrincipal">
      <summary>
              应创建反映与当前执行线程关联的操作系统令牌的主体和标识对象，并且相关联的操作系统组应映射到角色。
            </summary>
    </member>
    <member name="T:System.Security.Principal.TokenImpersonationLevel">
      <summary>
              定义安全模拟级别。
               安全模拟级别控制服务器进程可在何种程度上代表客户端进程执行操作。
            </summary>
    </member>
    <member name="F:System.Security.Principal.TokenImpersonationLevel.Anonymous">
      <summary>
              服务器进程无法获取有关客户端的标识信息，且无法模拟客户端。
            </summary>
    </member>
    <member name="F:System.Security.Principal.TokenImpersonationLevel.Delegation">
      <summary>
              服务器进程可以模拟远程系统上的客户端的安全上下文。
            </summary>
    </member>
    <member name="F:System.Security.Principal.TokenImpersonationLevel.Identification">
      <summary>
              服务器进程可以获取关于客户端，如安全标识符和特权，但它无法模拟客户端。
               这对于导出自身对象的服务器非常有用，例如，导出表和视图的数据库产品。
               在不能使用其他正使用客户端安全上下文的服务的情况下，服务器可以使用检索到的客户端安全信息做出访问验证决策。
            </summary>
    </member>
    <member name="F:System.Security.Principal.TokenImpersonationLevel.Impersonation">
      <summary>
              服务器进程可以模拟在其本地系统上的客户端的安全上下文。
               服务器无法在远程系统上模拟客户端。
            </summary>
    </member>
    <member name="F:System.Security.Principal.TokenImpersonationLevel.None">
      <summary>
              未分配模拟级别。
            </summary>
    </member>
  </members>
</doc>