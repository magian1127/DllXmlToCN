<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>
              指定在生成用于 XML Web services 的 .NET Framework 类型时使用的各种选项。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>
              启用数据绑定。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>
              创建异步调用 Web 方法的事件。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>
              创建异步调用 Web 方法的 Begin 和 End 方法。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>
              按 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 和 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 特性的 <see langword="Order" /> 属性所指定的方式显式生成排序序列化代码。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>
              由属性表示基元类型。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>
              由字段表示基元类型并由 <see cref="N:System" /> 命名空间类型表示基元类型。
            </summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>
              提供了静态方法，以将输入的文本转换为代码实体的名称。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>
              Camel 大小写格式字符串从输入字符串生成。
            </summary>
      <param name="identifier">
                代码实体，例如，通常取自 XML 元素或属性名称的方法参数的名称。
              </param>
      <returns>
              参数字符串驼峰式大小写版本。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>
              Pascal 大小写字符串从输入字符串生成。
            </summary>
      <param name="identifier">
                代码实体，例如，通常取自 XML 元素或属性名称的方法参数的名称。
              </param>
      <returns>
              参数字符串 Pascal 大小写版本。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>
              生成有效的代码实体名称从输入字符串。
            </summary>
      <param name="identifier">
                代码实体，例如，通常取自 XML 元素或属性名称的方法参数的名称。
              </param>
      <returns>
              一个字符串，可作为代码的标识符，如方法参数的名称。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>
              维护一组相关的代码实体或由.NET Framework 的 XML 序列化基础结构生成的类型映射的名称。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 类，并确定代码标识符是否区分大小写。
            </summary>
      <param name="caseSensitive">
        <see langword="true" /> 标识符是否区分大小写;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>
              命名的代码实体或类型将映射添加到 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
            </summary>
      <param name="identifier">
                使用代码实体进行索引的名称。
              </param>
      <param name="value">
                代码实体或类型映射信息。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>
              阻止指定的名称中使用 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
            </summary>
      <param name="identifier">
                将不能在一个名称 <see cref="T:System.Xml.Serialization.CodeIdentifiers" />实例的范围。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>
              命名的代码实体或类型将映射添加到 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围中，确保名称唯一的作用域内。
            </summary>
      <param name="identifier">
                使用代码实体进行索引的候选项名称。
              </param>
      <param name="value">
                代码实体或类型映射信息。
              </param>
      <returns>
              标识符参数值或修改后的字符串是否存在名称冲突。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>
              删除所有代码实体或类型映射，包括其名称从 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>
              确定是否具有指定的名称已被使用内 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
            </summary>
      <param name="identifier">
                要检查中使用的名称 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
              </param>
      <returns>
        <see langword="true" /> 如果该名称已在使用;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>
              确保输入通过修改的值根据名称是正确的大小写的 <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 属性。
            </summary>
      <param name="identifier">
                要修改的名称。
              </param>
      <returns>
              等同于输入的标识符或具有第一个字母的大小写的字符串的修改。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>
              确定字符串是否与另一个中输入的名称冲突 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的作用域，并且，如果已存在，都会生成一个修改后的字符串。
            </summary>
      <param name="identifier">
                要修改如果它尚不唯一的名称。
              </param>
      <returns>
              标识符参数值或修改后的字符串是否存在名称冲突。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>
              从中移除 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围由输入名称标识的代码实体或类型映射。
            </summary>
      <param name="identifier">
                若要删除的代码实体或类型映射信息的名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>
              删除从输入的名称 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的保留名称。
            </summary>
      <param name="identifier">
                将可在一个名称 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>
              返回一个数组中的类型映射的代码实体的 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 实例的范围。
            </summary>
      <param name="type">
                所有代码实体或该实例的类型映射的类型。
              </param>
      <returns>
              代码实体或由存储的类型映射的数组 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>
              获取或设置一个值，该值指示实例是否使用 camel 大小写。
            </summary>
      <returns>
        <see langword="true" /> 若要指示该实例使用 camel 大小写; <see langword="false" /> 以指示该实例使用 Pascal 大小写。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>
              描述在该架构的一组绑定到.NET Framework 代码实体的上下文。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.ImportContext" /> 类对于给定的代码标识符，与给定类型共享选项。
            </summary>
      <param name="identifiers">
                应用上下文代码实体。
              </param>
      <param name="shareTypes">
                一个 <see cref="T:System.Boolean" /> 值，该值确定是否在架构之间共享自定义类型。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>
              获取一个值，确定是否共享自定义类型。
            </summary>
      <returns>
        <see langword="true" />, 如果在架构中; 间共享的自定义类型否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>
              获取一组代码实体应用上下文。
            </summary>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> ，它指定应用上下文的代码实体。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>
              获取导入代码实体说明时，将生成的警告的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.Specialized.StringCollection" /> ，其中包含在导入代码实体说明时生成的警告。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>
              建立 <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> 供.NET Framework 基础结构使用的属性。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>
              获取或设置指示规范化空白区域和属性值。
            </summary>
      <returns>
        <see langword="true" /> 如果空白属性值进行规范化。，否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>
              获取或设置分析 XML 时如何处理空白。
            </summary>
      <returns>
              成员 <see cref="T:System.Xml.WhitespaceHandling" /> 分析 XML 时的处理描述如何将空白的枚举。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>
              指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须进行编码的 SOAP 特性将类成员序列化。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 类使用指定的值作为 XML 属性的名称。
            </summary>
      <param name="attributeName">
                XML 属性的名称。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>
              获取或设置由生成的 XML 特性名称 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
      <returns>
              XML 属性的名称。
               默认值为成员标识符。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>
              获取或设置由生成的 SOAP 属性的 XML 架构定义语言 (XSD) 数据类型 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
      <returns>
              XML 架构数据类型，按照万维网联合会 (www.w3.org) 文档定义名为"XML 架构第 2︰ 数据类型"。
            </returns>
      <exception cref="T:System.Exception">
                  具有指定的 XML 架构数据类型无法映射到.NET 数据类型。
                </exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>
              获取或设置 XML 属性的 XML 命名空间。
            </summary>
      <returns>
              XML 特性的 XML 命名空间。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>
              允许您重写属性应用于属性、 字段和类当您使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 要序列化或反序列化将对象作为编码的 SOAP。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 到的集合 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 对象。
              <paramref name="type" /> 参数指定的对象由重写 <see cref="T:System.Xml.Serialization.SoapAttributes" />。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 被重写的对象。
              </param>
      <param name="attributes">
                一个 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 表示重写的特性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 到的集合 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 包含的对象 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />。
              <paramref name="type" /> 参数指定的对象由重写 <see cref="T:System.Xml.Serialization.SoapAttributes" />。
              <paramref name="member" /> 参数指定将重写的成员的名称。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 要重写的对象。
              </param>
      <param name="member">
                要重写的成员的名称。
              </param>
      <param name="attributes">
                一个 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 表示重写的特性。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>
              获取与指定 （基类） 类型关联的对象。
            </summary>
      <param name="type">
                类的基类 <see cref="T:System.Type" /> 您想要检索的属性的集合与该键相关联。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.SoapAttributes" /> ，它表示重写属性的集合。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>
              获取与指定 （基类） 类型关联的对象。
              <paramref name="member" /> 参数指定将重写基类成员。
            </summary>
      <param name="type">
                类的基类 <see cref="T:System.Type" /> 想要重写的特性的集合与该键相关联。
              </param>
      <param name="member">
                指定的重写成员的名称 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 返回。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.SoapAttributes" /> ，它表示重写属性的集合。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>
              表示控件的属性对象的集合如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化和反序列化的 SOAP 方法。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类使用指定的自定义类型。
            </summary>
      <param name="provider">
                任何对象，它实现 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 接口，如 <see cref="T:System.Type" /> 类。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>
              获取或设置 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 重写。
            </summary>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 覆盖的行为 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 成员序列化时。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>
              获取或设置 XML 元素或属性的默认值。
            </summary>
      <returns>
              表示 XML 元素或属性的默认值的对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>
              获取或设置 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 重写。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 重写。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>
              获取或设置一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将序列化为 SOAP 枚举。
            </summary>
      <returns>
              一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举成员。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>
              获取或设置一个值，指定是否 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或属性作为编码的 SOAP XML 序列化。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不应序列化的字段或属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>
              获取或设置一个对象，指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化到的对象类型编码的 SOAP XML。
            </summary>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 它或者重写 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 应用于类声明中，或应用于类声明。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>
              指定的公共成员值进行序列化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 作为已编码的 SOAP XML 元素。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类，并指定的 XML 元素的名称。
            </summary>
      <param name="elementName">
                序列化成员的 XML 元素名称。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>
              获取或设置生成的 XML 元素的 XML 架构定义语言 (XSD) 数据类型。
            </summary>
      <returns>
              XML 架构数据类型之一。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>
              获取或设置生成的 XML 元素的名称。
            </summary>
      <returns>
              生成的 XML 元素的名称。
               默认值为成员标识符。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>
              获取或设置一个值，该值指示是否 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须序列化的成员有 <see langword="xsi:null" /> 属性设置为"1"。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="xsi:null" /> 属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>
              控件如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举成员。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 类使用的指定的元素名称。
            </summary>
      <param name="name">
                由生成的 XML 元素名称 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>
              获取或设置 XML 中生成的值记录时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举或识别时它反序列化枚举成员的值。
            </summary>
      <returns>
              在 XML 中生成的值记录时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举时或识别时它反序列化枚举成员的值。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>
              指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 进行序列化的公共字段或公共读/写属性值。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>
              允许 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 识别出的类型时序列化或反序列化将对象作为编码的 SOAP XML。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>
              使用指定的类型初始化 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 类的新实例。
            </summary>
      <param name="type">
                要包含的对象的类型。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>
              获取或设置要在序列化或反序列化对象时使用的对象的类型。
            </summary>
      <returns>
              要包含的对象的类型。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>
              将映射到 SOAP 编码的消息生成从.NET Framework 类型或 Web 服务方法信息。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类，同时指定导入的类型映射的默认 XML 命名空间。
            </summary>
      <param name="defaultNamespace">
                默认 XML 命名空间，用于导入类型映射。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类，同时指定 XML 序列化的替代。
            </summary>
      <param name="attributeOverrides">
                一个 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 重写的对象如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射使用 SOAP 编码的类型。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 类，同时指定 XML 序列化重写和默认 XML 命名空间。
            </summary>
      <param name="attributeOverrides">
                一个 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 重写的对象如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射使用 SOAP 编码的类型。
              </param>
      <param name="defaultNamespace">
                默认 XML 命名空间，用于导入类型映射。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>
              生成内部类型映射会从 Web 服务方法中收集的信息。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                .NET Framework 代码实体属于 Web 服务方法的数组。
              </param>
      <returns>
              对 WSDL 消息定义的元素部分内部.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>
              生成内部类型映射会从 Web 服务方法中收集的信息。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                .NET Framework 代码实体属于 Web 服务方法的数组。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 若要指示对应于 WSDL 消息部分的元素，应括在 SOAP 消息; 中的额外包装元素否则为 <see langword="false" />。
              </param>
      <param name="writeAccessors">
        <see langword="true" /> 若要指示 RPC 样式的 Web 服务绑定。 <see langword="false" /> 来指示文档样式 Web 服务绑定或 SOAP 标头。
              </param>
      <returns>
              对 WSDL 消息定义的元素部分内部.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
              生成内部类型映射会从 Web 服务方法中收集的信息。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                .NET Framework 代码实体属于 Web 服务方法的数组。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 若要指示对应于 WSDL 消息部分的元素，应括在 SOAP 消息; 中的额外包装元素否则为 <see langword="false" />。
              </param>
      <param name="writeAccessors">
        <see langword="true" /> 若要指示 RPC 样式的 Web 服务绑定。 <see langword="false" /> 来指示文档样式 Web 服务绑定或 SOAP 标头。
              </param>
      <param name="validate">
        <see langword="true" /> 若要指示预期的限定名称的包装元素，则应检查生成的反序列化程序否则为 <see langword="false" />。
                 此参数的值才有意义才 <paramref name="hasWrapperElement" /> 参数的值是 <see langword="true" />。
              </param>
      <returns>
              对 WSDL 消息定义的元素部分内部.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>
              生成内部类型映射会从 Web 服务方法中收集的信息。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                .NET Framework 代码实体属于 Web 服务方法的数组。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 若要指示对应于 WSDL 消息部分的元素，应括在 SOAP 消息; 中的额外包装元素否则为 <see langword="false" />。
              </param>
      <param name="writeAccessors">
        <see langword="true" /> 若要指示 RPC 样式的 Web 服务绑定。 <see langword="false" /> 来指示文档样式 Web 服务绑定或 SOAP 标头。
              </param>
      <param name="validate">
        <see langword="true" /> 若要指示预期的限定名称的包装元素，则应检查生成的反序列化程序否则为 <see langword="false" />。
                 此参数的值才有意义才 <paramref name="hasWrapperElement" /> 参数的值是 <see langword="true" />。
              </param>
      <param name="access">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值之一。
              </param>
      <returns>
              对 WSDL 消息定义的元素部分内部.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>
              将生成到.NET Framework 类型的 XML 架构元素之间的映射。
            </summary>
      <param name="type">
                为其生成类型映射的.NET Framework 类型。
              </param>
      <returns>
              内部.NET Framework 映射到 XML 架构元素的类型。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>
              将生成到.NET Framework 类型的 XML 架构元素之间的映射。
            </summary>
      <param name="type">
                为其生成类型映射的.NET Framework 类型。
              </param>
      <param name="defaultNamespace">
                要使用的默认 XML 命名空间。
              </param>
      <returns>
              内部.NET Framework 映射到 XML 架构元素的类型。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>
              放置中的类型的映射， <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 以后导入方法被调用时使用的实例的上下文。
            </summary>
      <param name="type">
                若要保存类型映射信息.NET Framework 类型。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
              放置在派生类型的映射， <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 以后导入方法被调用时使用的实例的上下文。
            </summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 反射对象，其中包含派生自的自定义特性 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 属性。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>
              表示某些特性的 XSD &lt;<see langword="part" />&gt; 从文档中生成的类为 WSDL 文档中的元素。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 类的新实例。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>
              获取或设置一个值，对应的 WSDL 一部分元素的 name 属性。
            </summary>
      <returns>
              元素名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>
              获取或设置一个值，对应于 WSDL 部分元素的类型特性。
            </summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> XML 类型相对应。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>
              控制生成的架构 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 当类实例的序列化方式 SOAP 编码的 XML。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类并指定 XML 类型的名称。
            </summary>
      <param name="typeName">
                XML 名称键入 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 时它将序列化的类实例 （并识别它反序列化的类实例时），将生成。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 类并指定名称和类型的 XML 命名空间。
            </summary>
      <param name="typeName">
                XML 名称键入 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 时它将序列化的类实例 （并识别它反序列化的类实例时），将生成。
              </param>
      <param name="ns">
                类型的 XML 命名空间。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>
              获取或设置一个值，该值指示是否要包含在 SOAP 编码的 XML 架构文档中的类型。
            </summary>
      <returns>
        <see langword="true" /> 若要包括在 SOAP 编码的 XML 架构文档; 中的类型否则为 <see langword="false" />。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>
              获取或设置 XML 类型的命名空间。
            </summary>
      <returns>
              XML 类型的命名空间。
               默认值为空字符串("")。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>
              获取或设置 XML 类型的名称。
            </summary>
      <returns>
              XML 类型的名称。
               默认值是类名。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>
              反序列化期间找到一个编码的 SOAP XML 流中的已知的但未引用的对象提供数据。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> 类的新实例。
            </summary>
      <param name="o">
                未引用的对象。
              </param>
      <param name="id">
                用于识别未引用的对象的唯一字符串。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>
              获取该对象的 ID。
            </summary>
      <returns>
              对象的 ID。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>
              获取反序列化，但未引用的对象。
            </summary>
      <returns>
              反序列化，但未引用的对象。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlAttribute"></see> objects) can contain any XML attributes.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Constructs a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute"></see> class.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement"></see> or <see cref="T:System.Xml.XmlNode"></see> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute"></see> class and specifies the XML element name generated in the XML document.</summary>
      <param name="name">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> generates.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute"></see> class and specifies the XML element name generated in the XML document and its XML namespace.</summary>
      <param name="name">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> generates.</param>
      <param name="ns">The XML namespace of the XML element.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Gets or sets the XML element name.</summary>
      <returns>The name of the XML element.</returns>
      <exception cref="T:System.InvalidOperationException">The element name of an array member does not match the element name specified by the <see cref="System.Xml.Serialization.XmlAnyElementAttribute.Name"></see> property.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Gets or sets the XML namespace generated in the XML document.</summary>
      <returns>An XML namespace.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Gets or sets the explicit order in which the elements are serialized or deserialized.</summary>
      <returns>The order of the code generation.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>
              表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象集合。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 到集合。
            </summary>
      <param name="attribute">
                要添加的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
              </param>
      <returns>
              新添加的索引 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Clear">
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
              获取一个值，该值指示是否指定 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 集合中存在。
            </summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 您感兴趣。
              </param>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 存在于集合; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>
              将整个集合复制到兼容的一维数组的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 对象，从目标数组的指定索引处开始。
            </summary>
      <param name="array">
                一维数组 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 从集合复制的元素的目标对象。
                 该数组的索引必须从零开始。
              </param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Count">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.GetEnumerator">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
              获取指定的索引 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
            </summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 您需要其索引。
              </param>
      <returns>
              指定的索引 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
              将插入 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 插入集合中的指定索引处。
            </summary>
      <param name="index">
                索引位置 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 插入。
              </param>
      <param name="attribute">
                要插入的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>
              获取或设置指定索引处的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
            </summary>
      <param name="index">
                索引 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 中指定索引处。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
              从集合中移除指定的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
            </summary>
      <param name="attribute">
                要移除的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.RemoveAt(System.Int32)">
      <param name="index">
      </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#IsSynchronized">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#ICollection#SyncRoot">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Add(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Contains(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsFixedSize">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IsReadOnly">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Item(System.Int32)">
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Remove(System.Object)">
      <param name="value">
      </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>
              指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将特定的类成员序列化为的 XML 元素的数组。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 类，并指定在 XML 文档实例中生成的 XML 元素名称。
            </summary>
      <param name="elementName">
                XML 元素的名称， <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>
              获取或设置提供给序列化数组的 XML 元素名称。
            </summary>
      <returns>
              序列化数组的 XML 元素名称。
               默认值是向其成员的名称 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 分配。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>
              获取或设置一个值，该值指示是否由生成的 XML 元素名称 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 为限定或未限定。
            </summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。
               默认值为 <see langword="XmlSchemaForm.None" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>
              获取或设置一个值，该值指示是否 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将成员序列化为一个空 XML 标记使用 <see langword="xsi:nil" /> 属性设置为 <see langword="true" />。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="xsi:nil" /> 属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>
              获取或设置 XML 元素的命名空间。
            </summary>
      <returns>
              XML 元素的命名空间。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>
              获取或设置显式的顺序序列化或反序列化元素。
            </summary>
      <returns>
              代码生成的顺序。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>
              表示一个属性，指定的派生类型 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以将放入序列化数组。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类，并指定在 XML 文档中生成的 XML 元素的名称。
            </summary>
      <param name="elementName">
                XML 元素的名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类，并指定 <see cref="T:System.Type" /> ，可以插入到序列化数组。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 要序列化的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 类，并指定在 XML 文档中生成的 XML 元素的名称和 <see cref="T:System.Type" /> ，可以插入到生成的 XML 文档。
            </summary>
      <param name="elementName">
                XML 元素的名称。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 要序列化的对象。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>
              获取或设置生成的 XML 元素的 XML 数据类型。
            </summary>
      <returns>
              XML 架构定义 (XSD) 数据类型，按照万维网联合会 (www.w3.org) 文档"XML 架构 Part 2: DataTypes"的定义。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>
              获取或设置生成的 XML 元素的名称。
            </summary>
      <returns>
              生成的 XML 元素的名称。
               默认值为成员标识符。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>
              获取或设置一个值，该值指示是否限定生成的 XML 元素的名称。
            </summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。
               默认值为 <see langword="XmlSchemaForm.None" />。
            </returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 属性设置为 <see langword="XmlSchemaForm.Unqualified" /> 和 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 指定值。
                </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>
              获取或设置一个值，该值指示是否 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将成员序列化为一个空 XML 标记使用 <see langword="xsi:nil" /> 属性设置为 <see langword="true" />。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="xsi:nil" /> 属性; 否则为 <see langword="false" />, ，并且不生成任何实例。
               默认值为 <see langword="true" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>
              获取或设置生成的 XML 元素的命名空间。
            </summary>
      <returns>
              生成的 XML 元素的命名空间。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>
              获取或 XML 元素的层次结构中设置的级别 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 影响。
            </summary>
      <returns>
              一套中数组的数组的索引从零开始索引。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>
              获取或设置一个数组中允许的类型。
            </summary>
      <returns>
              一个 <see cref="T:System.Type" /> 数组中允许的。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>
              表示 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象集合。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 到集合。
            </summary>
      <param name="attribute">
                要添加到集合中的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。
              </param>
      <returns>
              添加的项的索引。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Clear">
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
              确定集合是否包含指定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。
            </summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 检查。
              </param>
      <returns>
        <see langword="true" /> 如果集合包含指定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>
              副本 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 到集合中，从指定的目标索引处开始的数组。
            </summary>
      <param name="array">
                数组 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 要复制到集合的对象。
              </param>
      <param name="index">
                从该处开始复制的属性的索引。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Count">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
              返回指定的第一个匹配项的从零开始索引 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 集合或-1，如果在集合中找不到该属性中。
            </summary>
      <param name="attribute">
                要在集合中查找的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。
              </param>
      <returns>
              第一个索引 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 集合或-1，如果在集合中找不到该属性中。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
              将插入 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 插入集合中的指定索引处。
            </summary>
      <param name="index">
                在该位置插入该属性的索引。
              </param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />  插入。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>
              获取或设置指定索引处的项。
            </summary>
      <param name="index">
                要获取或设置的集合成员的从零开始的索引。
              </param>
      <returns>
              位于指定索引处的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
              删除 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 从集合中，如果不存在。
            </summary>
      <param name="attribute">
                要移除的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)">
      <param name="index">
      </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)">
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)">
      <param name="value">
      </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> must serialize the class member as an XML attribute.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"></see> class and specifies the name of the generated XML attribute.</summary>
      <param name="attributeName">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> generates.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"></see> class.</summary>
      <param name="type">The <see cref="T:System.Type"></see> used to store the attribute.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute"></see> class.</summary>
      <param name="attributeName">The name of the XML attribute that is generated.</param>
      <param name="type">The <see cref="T:System.Type"></see> used to store the attribute.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Gets or sets the name of the XML attribute.</summary>
      <returns>The name of the XML attribute. The default is the member name.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer"></see>.</summary>
      <returns>An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named &amp;quot;XML Schema: DataTypes&amp;quot;.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> is qualified.</summary>
      <returns>One of the <see cref="System.Xml.Schema.XmlSchemaForm"></see> values. The default is XmlForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Gets or sets the XML namespace of the XML attribute.</summary>
      <returns>The XML namespace of the XML attribute.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Gets or sets the complex type of the XML attribute.</summary>
      <returns>The type of the XML attribute.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>
              为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件提供数据。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>
              获取一个对象，表示未知的 XML 属性。
            </summary>
      <returns>
        <see cref="T:System.Xml.XmlAttribute" /> 表示未知的 XML 属性。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>
              获取 XML 属性名称应出现在 XML 文档实例的以逗号分隔列表。
            </summary>
      <returns>
              以逗号分隔的 XML 属性名称的列表。
               每个名称采用以下格式︰ <paramref name="namespace" />:<paramref name="name" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>
              获取未知的 XML 属性的行号。
            </summary>
      <returns>
              未知的 XML 属性行号。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>
              获取未知的 XML 属性的行中的位置。
            </summary>
      <returns>
              未知的 XML 属性位置编号。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>
              获取要反序列化的对象。
            </summary>
      <returns>
              要反序列化对象。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>
              允许您重写属性、 字段和类特性，当您使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 要序列化或反序列化为对象。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到收藏的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。
              <paramref name="type" /> 参数指定的对象由重写 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 被重写的对象。
              </param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 属性表示重写的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到收藏的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。
              <paramref name="type" /> 参数指定的对象将被重写。
              <paramref name="member" /> 参数指定将重写的成员的名称。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 要重写的对象。
              </param>
      <param name="member">
                要重写的成员的名称。
              </param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 属性表示重写的对象。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>
              获取与指定的基类，类型相关联的对象。
            </summary>
      <param name="type">
                类的基类 <see cref="T:System.Type" /> 您想要检索的属性的集合与该键相关联。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> ，它表示重写属性的集合。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>
              获取与指定的 （基类） 类型关联的对象。
               成员参数指定将重写的基类成员。
            </summary>
      <param name="type">
                类的基类 <see cref="T:System.Type" /> 所需的特性的集合与该键相关联。
              </param>
      <param name="member">
                指定的重写成员的名称 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 返回。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> ，它表示重写属性的集合。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>
              表示控件的属性对象的集合如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化和反序列化对象。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类和自定义如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化和反序列化对象。
            </summary>
      <param name="provider">
                一个类，可以提供其他实现用于控制 XML 序列化的属性。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>
              获取或设置 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> 重写。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> 重写。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>
              获取的集合 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象来重写。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 对象表示的集合 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>
              获取或设置一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化返回数组的公共字段或读/写属性。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> ，它指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化返回数组的公共字段或读/写属性。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>
              获取或设置指定的对象的集合如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化公共字段或读/写属性返回数组中插入的项。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 对象，其中包含一套 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>
              获取或设置一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化公共字段或作为 XML 属性的公共读/写属性。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 控制作为 XML 属性的序列化的公共字段或读/写属性。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>
              获取或设置一个对象，可帮助你区分之间的一组选项。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> ，可应用于类成员序列化为 <see langword="xsi:choice" /> 元素。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>
              获取或设置 XML 元素或属性的默认值。
            </summary>
      <returns>
        <see cref="T:System.Object" /> 表示 XML 元素或属性的默认值。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>
              获取指定的对象的集合如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化的 XML 元素形式的公共字段或读/写属性。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> ，其中包含一套 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>
              获取或设置一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举成员。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> ，它指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化枚举成员。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>
              获取或设置一个值，指定是否 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化公共字段或公共读/写属性。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不应序列化的字段或属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>
              获取或设置一个值，指定是否保留所有命名空间声明包含返回的成员的对象时 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 对象重写。
            </summary>
      <returns>
        <see langword="true" /> 如果应保留的命名空间声明;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>
              获取或设置一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化类作为 XML 根元素。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 它将替代具有作为 XML 根元素的特性的类。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>
              获取或设置一个对象，指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 要序列化公共字段或作为 XML 文本的公共读/写属性。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 重写默认的序列化的公共属性或字段。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>
              获取或设置一个对象，指定如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化的类 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 已应用。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 它将替代 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 应用于类声明。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>
              指定可以使用枚举进一步检测成员。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 类的新实例。
            </summary>
      <param name="name">
                返回用来检测选项的枚举成员名称。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>
              获取或设置返回的枚举，用于检测类型的字段的名称。
            </summary>
      <returns>
              返回一个枚举的字段的名称。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>
              包含可用于将事件委托传递给一个线程安全的字段 <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> 方法 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute">
      <summary>
              获取或设置一个对象，表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> 指向事件处理程序。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement">
      <summary>
              获取或设置一个对象，表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> 指向事件处理程序。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode">
      <summary>
              获取或设置一个对象，表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> 指向事件处理程序。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject">
      <summary>
              获取或设置一个对象，表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> 指向事件处理程序。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> serializes or deserializes the object that contains it.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute"></see> class and specifies the name of the XML element.</summary>
      <param name="elementName">The XML element name of the serialized member.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute"></see> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute"></see> is applied. This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> when serializing or deserializing object that contains it.</summary>
      <param name="type">The <see cref="T:System.Type"></see> of an object derived from the member&amp;#39;s type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute"></see> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute"></see> is applied. This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> serializes the object that contains it.</summary>
      <param name="elementName">The XML element name of the serialized member.</param>
      <param name="type">The <see cref="T:System.Type"></see> of an object derived from the member&amp;#39;s type.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer"></see>.</summary>
      <returns>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named &amp;quot;XML Schema Part 2: Datatypes&amp;quot;.</returns>
      <exception cref="T:System.Exception">The XML Schema data type you have specified cannot be mapped to the.NET data type.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Gets or sets the name of the generated XML element.</summary>
      <returns>The name of the generated XML element. The default is the member identifier.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Gets or sets a value that indicates whether the element is qualified.</summary>
      <returns>One of the <see cref="System.Xml.Schema.XmlSchemaForm"></see> values. The default is <see cref="System.Xml.Schema.XmlSchemaForm.None"></see>.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> must serialize a member that is set to null as an empty tag with the xsi:nil attribute set to true.</summary>
      <returns>true if the <see cref="System.Xml.Serialization.XmlSerializer"></see> generates the xsi:nil attribute; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</summary>
      <returns>The namespace of the XML element.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Gets or sets the explicit order in which the elements are serialized or deserialized.</summary>
      <returns>The order of the code generation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Gets or sets the object type used to represent the XML element.</summary>
      <returns>The <see cref="System.Type"></see> of the member.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>
              表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 用于重写其序列化类的默认方式的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 对象的集合。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
              添加 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 到集合。
            </summary>
      <param name="attribute">
                要添加的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。
              </param>
      <returns>
              新添加的项的从零开始索引。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Clear">
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
              确定集合是否包含指定的对象。
            </summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 寻找。
              </param>
      <returns>
        <see langword="true" /> 如果该对象存在于集合;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>
              副本 <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, ，或它的一部分到一维数组。
            </summary>
      <param name="array">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 要存放复制的元素数组。
              </param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Count">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.GetEnumerator">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
              获取指定的索引 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。
            </summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 正在检索其索引。
              </param>
      <returns>
              从零开始的索引 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>
              将插入 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 到集合。
            </summary>
      <param name="index">
                该成员插入位置的从零开始索引。
              </param>
      <param name="attribute">
                要插入的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>
              获取或设置指定索引处的元素。
            </summary>
      <param name="index">
                要获取或设置的元素的从零开始的索引。
              </param>
      <returns>
              指定索引处的元素。
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 中的有效索引。
                </exception>
      <exception cref="T:System.NotSupportedException">
                  设置了该属性，但 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 为只读。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
              从集合中删除指定的对象。
            </summary>
      <param name="attribute">
                要从该集合中移除的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.RemoveAt(System.Int32)">
      <param name="index">
      </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#IsSynchronized">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#ICollection#SyncRoot">
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)">
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsFixedSize">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IsReadOnly">
      <returns>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Item(System.Int32)">
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)">
      <param name="value">
      </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>
              为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件提供数据。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>
              获取表示未知的 XML 元素的对象。
            </summary>
      <returns>
              表示未知的 XML 元素的对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>
              获取 XML 元素名称应出现在 XML 文档实例的以逗号分隔列表。
            </summary>
      <returns>
              以逗号分隔的 XML 元素名称的列表。
               每个名称采用以下格式︰ <paramref name="namespace" />:<paramref name="name" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>
              获取行号，如果 XML 读取器遇到未知的元素 <see cref="T:System.Xml.XmlTextReader" />。
            </summary>
      <returns>
              其中的 XML 读取器是否遇到未知的元素的行号 <see cref="T:System.Xml.XmlTextReader" />; 否则为-1。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>
              获取的地点在行中的未知的元素的 XML 读取器是否 <see cref="T:System.Xml.XmlTextReader" />。
            </summary>
      <returns>
              如果 XML 读取器是未知的元素出现的位置的行中的数字 <see cref="T:System.Xml.XmlTextReader" />; 否则为-1。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>
              获取对象 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 反序列化。
            </summary>
      <returns>
              由正在反序列化的对象 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                一个 <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />  包含事件数据。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Controls how the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> serializes an enumeration member.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute"></see> class, and specifies the XML value that the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> generates or recognizes (when it serializes or deserializes the enumeration, respectively).</summary>
      <param name="name">The overriding name of the enumeration member.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Gets or sets the value generated in an XML-document instance when the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> serializes an enumeration, or the value recognized when it deserializes the enumeration member.</summary>
      <returns>The value generated in an XML-document instance when the <see cref="System.Xml.Serialization.XmlSerializer"></see> serializes the enumeration, or the value recognized when it is deserializes the enumeration member.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Instructs the <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)"></see> method of the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> not to serialize the public field or public read/write property value.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute"></see> class.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>
              允许 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在序列化或反序列化对象时识别出的类型。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 类的新实例。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 要包括的对象。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>
              获取或设置要包含的对象的类型。
            </summary>
      <returns>
        <see cref="T:System.Type" /> 要包括的对象。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>
              支持.NET Framework 类型和 XML 架构数据类型之间的映射。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>
              获取映射元素的名称。
            </summary>
      <returns>
              映射元素的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>
              获取映射元素的命名空间。
            </summary>
      <returns>
              映射元素的命名空间。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>
              设置用于查找映射的键。
            </summary>
      <param name="key">
                一个 <see cref="T:System.String" /> 包含查找键。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>
              获取映射的 XSD 元素的名称。
            </summary>
      <returns>
              XSD 元素名称。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>
              指定映射是读取和 / 或写入。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>
              读取和写入方法生成。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>
              生成读取方法。
            </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>
              编写生成方法。
            </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>
              将.NET Framework Web 服务方法中的代码实体映射到 Web 服务描述语言 (WSDL) 消息的元素中。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>
              获取或设置一个值，该值指示是否.NET Framework 类型可以映射到 XML 元素或任何类型的属性。
            </summary>
      <returns>
        <see langword="true" />, 如果该类型可以映射到 XML 的任何元素或属性;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>
              获取一个值，该值指示在.NET Framework 类型中伴随的字段是否具有指定的值。
            </summary>
      <returns>
        <see langword="true" />, 如果伴随的字段的值指定;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>
              获取应用于映射的 XML 元素声明的非限定的名称。
            </summary>
      <returns>
              应用于映射的 XML 元素声明非限定的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>
              获取表示通过此映射的 Web 服务方法成员的名称。
            </summary>
      <returns>
              此映射所表示的 Web 服务方法成员的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>
              获取应用于映射的 XML 命名空间。
            </summary>
      <returns>
              应用于映射的 XML 命名空间。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>
              获取此映射的.NET Framework 类型的完全限定的类型名称。
            </summary>
      <returns>
              .NET Framework 类型使这一映射的完全限定的类型名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>
              获取此映射的.NET Framework 类型的类型名称。
            </summary>
      <returns>
              .NET Framework 类型使这一映射类型名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>
              获取此映射的.NET Framework 类型的命名空间。
            </summary>
      <returns>
              此映射的.NET Framework 类型的命名空间。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>
              获取 XML 元素名称的服务说明文档中所示。
            </summary>
      <returns>
              XML 元素名称。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>
              提供 SOAP Web 服务的.NET Framework Web 服务方法和 Web 服务描述语言 (WSDL) 定义的消息之间的映射。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>
              获取对 Web 服务方法的 SOAP 消息映射到属于.NET Framework 代码实体数。
            </summary>
      <returns>
              集合中的映射的数量。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>
              获取包含内部类型的项将映射到.NET Framework 代码实体属于 Web 服务方法映射到 SOAP 消息的信息。
            </summary>
      <param name="index">
                要返回的映射的索引。
              </param>
      <returns>
              请求的 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>
              获取映射到表示 SOAP 消息的 XML 架构元素的数据类型的.NET Framework 类型的名称。
            </summary>
      <returns>
              .NET Framework 类型的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>
              获取映射到表示 SOAP 消息的 XML 架构元素的数据类型的.NET Framework 类型的命名空间。
            </summary>
      <returns>
              映射的.NET Framework 命名空间。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Specifies that the target property, parameter, return value, or class member contains prefixes associated with namespaces that are used within an XML document.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute"></see> class.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>
              为 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件提供数据。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>
              获取未知的 XML 节点的行号。
            </summary>
      <returns>
              未知的 XML 节点的行数。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>
              获取未知的 XML 节点的行中的位置。
            </summary>
      <returns>
              未知的 XML 节点的位置编号。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>
              获取要反序列化的 XML 节点的 XML 本地名称。
            </summary>
      <returns>
              要反序列化节点的 XML 本地名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>
              获取要反序列化的 XML 节点的名称。
            </summary>
      <returns>
              要反序列化节点的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>
              获取命名空间都与要反序列化的 XML 节点相关联的 URI。
            </summary>
      <returns>
              命名空间都与要反序列化的 XML 节点相关联的 URI。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>
              获取要反序列化的 XML 节点的类型。
            </summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeType" /> ，表示要反序列化的 XML 节点。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>
              获取要反序列化的对象。
            </summary>
      <returns>
        <see cref="T:System.Object" /> 要反序列化。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>
              获取要反序列化的 XML 节点的文本。
            </summary>
      <returns>
              要反序列化的 XML 节点的文本。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>
              表示用于处理的方法 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
      <param name="sender">
                事件源。
              </param>
      <param name="e">
                包含事件数据的 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>
              生成的 XML 架构元素声明，包括在 Web 服务描述语言 (WSDL) 文档中，为.NET Framework 类型或 Web 服务方法信息的文本的 XML 架构定义 (XSD) 的消息部分的映射。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类使用指定的默认 XML 命名空间。
            </summary>
      <param name="defaultNamespace">
                默认 XML 命名空间，用于导入类型映射。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 使用指定的 XML 序列化的类重写。
            </summary>
      <param name="attributeOverrides">
                重写的对象如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射的类型。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类使用指定的 XML 序列化重写，并默认 XML 命名空间。
            </summary>
      <param name="attributeOverrides">
                重写的对象如何 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射的类型。
              </param>
      <param name="defaultNamespace">
                默认 XML 命名空间，用于导入类型映射。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>
              从 Web 服务方法生成内部类型映射信息。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                一个数组 <see cref="T:System.Xml.Serialization.XmlReflectionMember" />  对象，其中包含.NET Framework 代码属于 Web 服务方法的实体。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 如果与 Web 服务描述语言 (WSDL) 的消息部分相对应的元素应包含在 SOAP 消息; 中的额外的包装元素否则为 <see langword="false" />。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 与元素各部分的 WSDL 映射消息定义。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>
              返回使用从 Web 服务方法的信息的内部类型映射，并允许您指定 XML 元素名称、 XML 命名空间和其他选项。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                一个数组 <see cref="T:System.Xml.Serialization.XmlReflectionMember" />  对象，其中包含.NET Framework 代码属于 Web 服务方法的实体。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 如果与 Web 服务描述语言 (WSDL) 的消息部分相对应的元素应包含在 SOAP 消息; 中的额外的包装元素否则为 <see langword="false" />。
              </param>
      <param name="rpc">
        <see langword="true" /> 如果该方法是在远程过程调用;否则为 <see langword="false" />。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 包含映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
              返回使用从 Web 服务方法的信息的内部类型映射，并允许您指定 XML 元素名称、 XML 命名空间和其他选项。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                一个数组 <see cref="T:System.Xml.Serialization.XmlReflectionMember" />  对象，其中包含.NET Framework 代码属于 Web 服务方法的实体。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 如果与 Web 服务描述语言 (WSDL) 的消息部分相对应的元素应包含在 SOAP 消息; 中的额外的包装元素否则为 <see langword="false" />。
              </param>
      <param name="rpc">
        <see langword="true" /> 如果该方法是在远程过程调用;否则为 <see langword="false" />。
              </param>
      <param name="openModel">
        <see langword="true" /> 若要指定生成的架构类型将标有<see langword=" &lt;xs:anyAttribute&gt;" /> 元素; 否则为 <see langword="false" />。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 包含映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>
              从 Web 服务方法生成内部类型映射信息。
            </summary>
      <param name="elementName">
                从 Web 服务方法生成 XML 元素名称。
              </param>
      <param name="ns">
                从 Web 服务方法生成的 XML 元素命名空间。
              </param>
      <param name="members">
                一个数组 <see cref="T:System.Xml.Serialization.XmlReflectionMember" />  对象，其中包含.NET Framework 代码属于 Web 服务方法的实体。
              </param>
      <param name="hasWrapperElement">
        <see langword="true" /> 如果与 Web 服务描述语言 (WSDL) 的消息部分相对应的元素应包含在 SOAP 消息; 中的额外的包装元素否则为 <see langword="false" />。
              </param>
      <param name="rpc">
        <see langword="true" /> 如果该方法是在远程过程调用;否则为 <see langword="false" />。
              </param>
      <param name="openModel">
        <see langword="true" /> 若要指定生成的架构类型将标有<see langword=" &lt;xs:anyAttribute&gt;" /> 元素; 否则为 <see langword="false" />。
              </param>
      <param name="access">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值之一。
                 默认值为 <see langword="None" />。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 包含映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>
              将生成到指定的.NET Framework 类型的 XML 架构元素之间的映射。
            </summary>
      <param name="type">
                为其生成类型映射的.NET Framework 类型。
              </param>
      <returns>
              内部.NET Framework 映射到 XML 架构元素的类型。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>
              将生成到.NET Framework 类型，使用指定的类型和命名空间的 XML 架构元素之间的映射。
            </summary>
      <param name="type">
                为其生成类型映射的.NET Framework 类型。
              </param>
      <param name="defaultNamespace">
                要使用的默认 XML 命名空间。
              </param>
      <returns>
              内部.NET Framework 映射到 XML 架构元素的类型。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
              将生成到.NET Framework 类型，使用指定的类型和属性的 XML 架构元素之间的映射。
            </summary>
      <param name="type">
                为其生成类型映射的.NET Framework 类型。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 应用于该类型的属性。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 表示传递给 XML 架构元素的.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
              将生成到.NET Framework 类型，使用指定的类型、 属性和命名空间的 XML 架构元素之间的映射。
            </summary>
      <param name="type">
                为其生成类型映射的.NET Framework 类型。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 应用于该类型的属性。
              </param>
      <param name="defaultNamespace">
                要使用的默认 XML 命名空间。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> ，其中包含到 XML 架构元素的类型的内部的.NET Framework 映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>
              调用导入方法时，请包括以供以后使用某个类型的映射。
            </summary>
      <param name="type">
                若要保存类型映射信息.NET Framework 类型。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
              调用导入方法时，请包括以供将来使用的派生类型的映射。
            </summary>
      <param name="provider">
                一个实例 <see cref="T:System.Reflection.ICustomAttributeProvider" />  包含自定义特性的类派生自 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 属性。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>
              提供 SOAP Web 服务的.NET Framework Web 服务方法中的代码实体和 Web 服务描述语言 (WSDL) 定义的消息的内容之间的映射。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 类的新实例。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>
              获取或设置一个值，该值指示是否 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 表示 Web 服务方法返回的值，而不是一个 output 参数。
            </summary>
      <returns>
        <see langword="true" />, 如果成员表示 Web 服务返回的值;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>
              获取或设置此映射的 Web 服务方法成员的名称。
            </summary>
      <returns>
              Web 服务方法的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>
              获取或设置表示通过此映射的 Web 服务方法成员代码实体的类型。
            </summary>
      <returns>
        <see cref="T:System.Type" /> 映射表示的 Web 服务方法成员代码实体。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>
              获取或设置一个值，该值指示的相应 XML 元素定义的值 isNullable 属性是 <see langword="false" />。
            </summary>
      <returns>
        <see langword="True" /> 若要重写 <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 属性; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>
              获取或设置 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 与 SOAP 相关特性已应用于成员代码实体的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.SoapAttributes" /> ，包含表示 SOAP 属性应用于的成员的对象。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>
              获取或设置 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 集合 <see cref="T:System.Xml.Serialization.XmlSerializer" />-相关已应用于成员代码实体的属性。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> ，表示已应用于该成员代码的 XML 属性。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Controls XML serialization of the attribute target as an XML root element.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute"></see> class and specifies the name of the XML root element.</summary>
      <param name="elementName">The name of the XML root element.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Gets or sets the XSD data type of the XML root element.</summary>
      <returns>An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named &amp;quot;XML Schema: DataTypes&amp;quot;.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Gets or sets the name of the XML element that is generated and recognized by the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> class&amp;#39;s <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)"></see> and <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)"></see> methods, respectively.</summary>
      <returns>The name of the XML root element that is generated and recognized in an XML-document instance. The default is the name of the serialized class.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> must serialize a member that is set to null into the xsi:nil attribute set to true.</summary>
      <returns>true if the <see cref="System.Xml.Serialization.XmlSerializer"></see> generates the xsi:nil attribute; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Gets or sets the namespace for the XML root element.</summary>
      <returns>The namespace for the XML element.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>
              允许对 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象集合进行迭代。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 类的新实例。
            </summary>
      <param name="list">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象想要循环访问。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>
              获取集合中的当前元素。
            </summary>
      <returns>
              当前 <see cref="T:System.Xml.Schema.XmlSchema" /> 集合中的对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>
              释放由 <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 使用的所有资源。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>
              将枚举数推进到集合中的下一项。
            </summary>
      <returns>
        <see langword="true" /> 如果移动是否成功。否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>
              获取当前元素的集合中 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。
            </summary>
      <returns>
              集合中的当前元素 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>
              将枚举数设置为其初始位置，即在集合中的第一个元素之前 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。
            </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>
              填充 <see cref="T:System.Xml.Schema.XmlSchema" /> 具有 XML 架构元素声明中所发现的对象类型映射对象。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 类的新实例。
            </summary>
      <param name="schemas">
                一套 <see cref="T:System.Xml.Schema.XmlSchema" /> 获取从类型映射的声明添加到哪个元素的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>
              导出 &lt; 任意 &gt; 元素 <see cref="T:System.Xml.Schema.XmlSchema" /> 由指定的命名空间标识的对象。
            </summary>
      <param name="ns">
                要向其中添加的 XML 架构文档的命名空间 &lt; 任意 &gt; 元素。
              </param>
      <returns>
              分配给的任意名称 &lt; 任意 &gt; 元素声明。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
              添加的对象或类型为 SOAP 消息或一个元素声明 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。
            </summary>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" />  ，其中包含要导出的映射。
              </param>
      <returns>
              字符串"任何"追加有一个整数。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
              将元素声明添加到适当 <see cref="T:System.Xml.Schema.XmlSchema" /> 为每个文本的 SOAP 消息定义的元素部分。
            </summary>
      <param name="xmlMembersMapping">
                Web 服务描述语言 (WSDL) 消息定义的元素部分内部.NET Framework 类型映射。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>
              将元素声明添加到适当 <see cref="T:System.Xml.Schema.XmlSchema" /> 为每个元素部分中的文本的 SOAP 消息定义，并指定是否包含封闭的元素。
            </summary>
      <param name="xmlMembersMapping">
                .NET Framework 类型和 XML 架构元素之间的内部映射。
              </param>
      <param name="exportEnclosingType">
        <see langword="true" /> 如果要包括; 封闭架构的架构元素否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
              将元素声明添加到适当 <see cref="T:System.Xml.Schema.XmlSchema" /> 为文本的 SOAP 消息定义的单个元素一部分的对象。
            </summary>
      <param name="xmlMembersMapping">
                Web 服务描述语言 (WSDL) 消息定义的元素部分的内部.NET Framework 类型映射。
              </param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> 表示导出的元素声明的限定的 XML 名称。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
              将.NET Framework 类型的元素声明添加到适当 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。
            </summary>
      <param name="xmlTypeMapping">
                .NET Framework 类型和 XML 架构元素之间的内部映射。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>
              生成内部映射到 XML 架构元素声明，包括 WSDL 文档中的文字 XSD 的消息部分的.NET Framework 类型。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 类中，执行一套 <see cref="T:System.Xml.Schema.XmlSchema" /> 表示所使用的 SOAP WSDL 文档中定义的文本消息的 XML 架构的对象。
            </summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 对象的集合。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 类中，执行一套 <see cref="T:System.Xml.Schema.XmlSchema" /> 表示所使用的 SOAP 文本消息的 XML 架构加上生成的 Web 服务描述语言 (WSDL) 文档中定义的绑定类的对象。
            </summary>
      <param name="schemas">
                一个 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象。
              </param>
      <param name="typeIdentifiers">
                一个 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 对象，它指定的类生成的 WSDL 文档中定义的绑定的集合。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>
              生成单个 WSDL 文档中定义的 (SOAP) 文本元素部分的内部类型映射信息。
            </summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定为其生成.NET Framework 类型的元素的类型的名称。
              </param>
      <param name="elementName">
                WSDL 文档中的部分元素的名称。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 表示 WSDL 消息定义的单个元素一部分的.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
              生成的 XML 架构文档中定义的元素的内部类型映射信息。
            </summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定的 XML 架构文档中定义的元素的名称。
              </param>
      <param name="baseType">
                生成的 XSD 元素类型与对应的.NET Framework 类型基类型。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 表示的 XML 架构元素的.net Framework 类型映射信息。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>
              生成定义中的 XML 架构文档，或作为一部分 WSDL 文档中的元素的内部类型映射信息。
            </summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定的 XML 架构文档中定义的元素的名称。
              </param>
      <param name="baseType">
                生成的 XSD 元素类型与对应的.NET Framework 类型基类型。
              </param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> 若要指示对应的 XSD 元素的类型可以直接继承自基类型;否则为 <see langword="false" />。
              </param>
      <returns>
              XML 架构元素的.NET Framework 类型映射信息。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>
              生成单个元素的 WSDL 文档中定义的使用文本的 SOAP 消息部分的内部类型映射信息。
            </summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定消息部分的名称。
              </param>
      <returns>
              WSDL 消息定义包含单个元素部分.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>
              生成内部类型映射信息的使用文本的 SOAP 消息在 WSDL 文档中定义的元素部分。
            </summary>
      <param name="names">
                类型的数组 <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定的消息部分的名称。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> ，表示 WSDL 消息定义的元素部分的.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>
              生成内部类型映射信息的使用文本的 SOAP 消息在 WSDL 文档中定义的元素部分。
            </summary>
      <param name="name">
                要为其生成一个映射元素的名称。
              </param>
      <param name="ns">
                要为其生成一个映射元素的命名空间。
              </param>
      <param name="members">
                一个数组 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 指定为其生成映射的元素的成员的实例。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 包含类型映射信息。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>
              生成内部类型映射信息的使用文本的 SOAP 消息在 WSDL 文档中定义的元素部分。
            </summary>
      <param name="names">
                类型的数组 <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定的消息部分的名称。
              </param>
      <param name="baseType">
                所有生成以与消息部分相对应的.NET Framework 类型的基类型。
              </param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> 若要指示对应于消息部分的类型可以直接继承自基类型;否则为 <see langword="false" />。
              </param>
      <returns>
              WSDL 消息定义的元素部分.NET Framework 类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>
              生成的 XML 架构文档中定义的元素的内部类型映射信息。
            </summary>
      <param name="typeName">
                一个 <see cref="T:System.Xml.XmlQualifiedName" /> 指定 XML 元素。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象，用于描述类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
              生成的 XML 架构文档中定义的元素的内部类型映射信息。
            </summary>
      <param name="typeName">
                一个 <see cref="T:System.Xml.XmlQualifiedName" /> 指定 XML 元素。
              </param>
      <param name="baseType">
                一个 <see cref="T:System.Type" /> 指定基类型的对象。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象，用于描述类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>
              生成的 XML 架构文档中定义的元素的内部类型映射信息。
            </summary>
      <param name="typeName">
                一个 <see cref="T:System.Xml.XmlQualifiedName" /> 指定 XML 元素。
              </param>
      <param name="baseType">
                一个 <see cref="T:System.Type" /> 指定基类型的对象。
              </param>
      <param name="baseTypeCanBeIndirect">
                一个 <see cref="T:System.Boolean" /> 值，该值指定是否已生成的类型直接继承，可以 <paramref name="baseType" />。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象，用于描述类型映射。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>
              生成的 XML 架构文档中定义的元素的内部类型映射信息。
            </summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它指定的 XML 架构文档中定义的元素的名称。
              </param>
      <returns>
              XML 架构元素的.NET Framework 类型映射信息。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>
              表示 XML 架构的集合。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>
              将对象添加到集合的末尾。
            </summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 对象添加到的对象的集合。
              </param>
      <returns>
              在该索引处 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>
              添加的一个实例 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 类传递给集合的末尾。
            </summary>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 对象添加到集合的末尾。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>
              添加 <see cref="T:System.Xml.Schema.XmlSchema" /> 表示集合的程序集引用的对象。
            </summary>
      <param name="schema">
                要添加的 <see cref="T:System.Xml.Schema.XmlSchema" />。
              </param>
      <param name="baseUri">
        <see cref="T:System.Uri" /> 架构对象。
              </param>
      <returns>
              在该索引处 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>
              添加 <see cref="T:System.Xml.Schema.XmlSchema" /> 表示集合的程序集引用的对象。
            </summary>
      <param name="schema">
                要添加的 <see cref="T:System.Xml.Schema.XmlSchema" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>
              处理 XML 架构中的元素和属性名称和 （可选） 验证 XML 架构。
            </summary>
      <param name="handler">
                一个 <see cref="T:System.Xml.Schema.ValidationEventHandler" /> ，它指定在 XML 架构验证过程中处理错误和警告的回调方法，如果严格参数设置为 <see langword="true" />。
              </param>
      <param name="fullCompile">
        <see langword="true" /> 若要在集合中使用 XML 架构验证 <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> 方法 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 类; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>
              返回一个值，该值指示集合是否包含 <see cref="T:System.Xml.Schema.XmlSchema" /> 属于指定的命名空间的对象。
            </summary>
      <param name="targetNamespace">
                要检查的项的命名空间。
              </param>
      <returns>
        <see langword="true" /> 如果找到该项目;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
              确定是否 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 包含特定的架构。
            </summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 要查找对象。
              </param>
      <returns>
        <see langword="true" />, 如果集合包含指定的项;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
              将复制整个 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 到一维兼容 <see cref="T:System.Array" />, ，从目标数组的指定索引处开始。
            </summary>
      <param name="array">
                一维 <see cref="T:System.Array" /> 从复制的架构的目标 <see cref="T:System.Xml.Serialization.XmlSchemas" />。
                <see cref="T:System.Array" /> 必须具有从零开始的索引。
              </param>
      <param name="index">
                一个 32 位整数，表示数组中的索引位置开始进行复制。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
              在一个 XML 架构中找到 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 的指定的名称和类型。
            </summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，指定完全限定的名称与命名空间用来定位 <see cref="T:System.Xml.Schema.XmlSchema" /> 集合中的对象。
              </param>
      <param name="type">
                要查找的对象的 <see cref="T:System.Type" />。
                 可能的类型包括︰ <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, ，<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, ，<see cref="T:System.Xml.Schema.XmlSchemaElement" />, ，<see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, ，和 <see cref="T:System.Xml.Schema.XmlSchemaNotation" />。
              </param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 实例，如 <see cref="T:System.Xml.Schema.XmlSchemaElement" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>
              获取属于同一命名空间的架构的集合。
            </summary>
      <param name="ns">
                要检索的架构命名空间。
              </param>
      <returns>
        <see cref="T:System.Collections.IList" /> 实现，它包含的架构。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>
              搜索指定的架构，并返回整个内的第一个匹配项的从零开始索引 <see cref="T:System.Xml.Serialization.XmlSchemas" />。
            </summary>
      <param name="schema">
                要查找的 <see cref="T:System.Xml.Schema.XmlSchema" />。
              </param>
      <returns>
              在整个值的第一个匹配项的从零开始索引 <see cref="T:System.Xml.Serialization.XmlSchemas" />, ，如果找到; 否则为-1。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>
              将架构插入 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 中指定索引处。
            </summary>
      <param name="index">
                应插入 <paramref name="schema" /> 的从零开始的索引。
              </param>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 要插入对象。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>
              获取一个值，该值指示是否已编译架构。
            </summary>
      <returns>
        <see langword="true" />, 如果架构已编译;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>
              确定指定的 XML 架构是否包含一个自定义的静态方法 <see langword="IsDataSet" /> 属性设置为 <see langword="true" />, ，或它的等效项。
            </summary>
      <param name="schema">
                若要检查的 XML 架构 <see langword="IsDataSet" /> 特性 <see langword="true" /> 值。
              </param>
      <returns>
        <see langword="true" /> 如果指定的架构存在，则否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>
              获取或设置 <see cref="T:System.Xml.Schema.XmlSchema" /> 的指定索引处的对象。
            </summary>
      <param name="index">
                要检索的项的索引。
              </param>
      <returns>
              指定的 <see cref="T:System.Xml.Schema.XmlSchema" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>
              获取指定 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象，表示与指定的命名空间关联的 XML 架构。
            </summary>
      <param name="ns">
                指定对象的命名空间。
              </param>
      <returns>
              指定 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>
              清除的内容时执行其他自定义进程 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>
              插入新元素插入之前执行其他自定义进程 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例。
            </summary>
      <param name="index">
                从零开始的索引，在其中插入 <paramref name="value" />。
              </param>
      <param name="value">
                处的元素的新值 <paramref name="index" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>
              当移除的元素时执行其他自定义进程 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例。
            </summary>
      <param name="index">
                从零开始的索引，到 <paramref name="value" /> 找不到。
              </param>
      <param name="value">
                要在移除的元素的值 <paramref name="index" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
              在设置值之前执行其他自定义进程 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 实例。
            </summary>
      <param name="index">
                从零开始的索引，到 <paramref name="oldValue" /> 找不到。
              </param>
      <param name="oldValue">
                要替换的值 <paramref name="newValue" />。
              </param>
      <param name="newValue">
                处的元素的新值 <paramref name="index" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>
              移除从特定的架构的第一个匹配项 <see cref="T:System.Xml.Serialization.XmlSchemas" />。
            </summary>
      <param name="schema">
                要移除的 <see cref="T:System.Xml.Schema.XmlSchema" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>
              返回一个循环访问 XML 架构集合的枚举器。
            </summary>
      <returns>
              一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>
              使用委托 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类反序列化的 SOAP 编码的 XML 数据类型映射到集合或枚举。
            </summary>
      <param name="collection">
                集合项数组复制到其中的集合。
              </param>
      <param name="collectionItems">
                要被复制到的项的数组 <paramref name="object collection" />。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>
              使用委托 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的 SOAP 编码的 XML 数据反序列化的类。
            </summary>
      <param name="fixup">
                一个实例 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 包含要修复的对象的类和填写的项的字符串标识符的数组。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>
              为类的基类的抽象类 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 和 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 和包含普遍适用于这两种类型的方法。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> 类的实例。
            </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>
              使用委托 <see cref="T:System.Xml.Serialization.XmlSerializer" /> SOAP 编码的非根 XML 数据的类型反序列化的类。
            </summary>
      <returns>
              由回叫返回的对象。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>
              保存 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托实例，以及该方法的输入; 还提供了方法的参数。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> 具有回调方法的参数的类。
            </summary>
      <param name="collection">
                回调方法将集合项数组复制到其中一个集合。
              </param>
      <param name="callback">
                实例化的方法 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托。
              </param>
      <param name="collectionItems">
                一个回调方法将集合复制到其中的数组。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>
              获取实例化的回调方法 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 指向回调方法的委托。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>
              获取 <paramref name="object collection" /> 回调方法。
            </summary>
      <returns>
              用于修正集合。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>
              获取回调方法将集合复制到其中的数组。
            </summary>
      <returns>
              回调方法将集合复制到其中的数组。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>
              保存 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托实例，以及该方法的输入; 也可作为方法的参数。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 类的新实例。
            </summary>
      <param name="o">
                包含其值填入由回调实现其他对象的对象。
              </param>
      <param name="callback">
                实例化的方法 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托。
              </param>
      <param name="count">
                通过获取字符串数组的大小 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 类的新实例。
            </summary>
      <param name="o">
                包含其值填入由回调实现其他对象的对象。
              </param>
      <param name="callback">
                实例化的方法 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托。
              </param>
      <param name="ids">
                通过获取的字符串数组 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 属性。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>
              获取创建的实例的回调方法 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托。
            </summary>
      <returns>
              创建的实例的回调方法 <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>
              获取或设置一个属于对象的键的数组 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> 由回调实现会填充其值的属性。
            </summary>
      <returns>
              键的数组。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>
              获取或设置包含其值填入由回调实现其他对象的对象。
            </summary>
      <returns>
              包含要填充值的对象的源。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>
              控制反序列化的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>
              存储一个对象，包含将被调用，根据需要，以填充在.NET Framework 集合中的回调方法或映射到 SOAP 编码的数组或 SOAP 编码的多个引用的元素的枚举。
            </summary>
      <param name="fixup">
                一个 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 委托和回调方法的输入数据。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>
              存储一个对象，包含将被调用，根据需要，以填充 SOAP 编码的数组中的对象的回调方法实例。
            </summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 委托和回调方法的输入数据。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>
              将存储的实现 <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委托和更高版本调用其输入的数据。
            </summary>
      <param name="name">
                要反序列化的.NET Framework 类型的名称。
              </param>
      <param name="ns">
                要反序列化的.NET Framework 类型的命名空间。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 要反序列化。
              </param>
      <param name="read">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 委托。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>
              存储对象被反序列化从 SOAP 编码 <see langword="multiRef" /> 元素通过更高版本访问 <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> 方法。
            </summary>
      <param name="id">
                值 <see langword="id" /> 属性 <see langword="multiRef" /> 标识的元素的元素。
              </param>
      <param name="o">
                从 XML 元素进行反序列化对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>
              检查是否具有高级反序列化程序。
            </summary>
      <param name="whileIterations">
                当前 <see langword="count" /> 在 while 循环。
              </param>
      <param name="readerCount">
                当前的 <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />。
              </param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> 并未推进。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>
              开始位置和指定的字符串的结尾移除空白字符的所有匹配项。
            </summary>
      <param name="value">
                将已移除其空白字符串。
              </param>
      <returns>
              裁剪后的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示反序列化的对象应是抽象。
            </summary>
      <param name="name">
                抽象类型的名称。
              </param>
      <param name="ns">
                抽象类型的.NET Framework 命名空间。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
              填充将对象从其 XML 表示形式的当前位置 <see cref="T:System.Xml.XmlReader" />, ，提供一个选项来读取元素的内部。
            </summary>
      <param name="xsdDerived">
                派生的 XML 架构数据类型的本地名称。
              </param>
      <param name="nsDerived">
                派生的 XML 架构数据类型的命名空间。
              </param>
      <param name="xsdBase">
                基本的 XML 架构数据类型的本地名称。
              </param>
      <param name="nsBase">
                基本的 XML 架构数据类型的命名空间。
              </param>
      <param name="clrDerived">
                派生的.NET Framework 类型的命名空间。
              </param>
      <param name="clrBase">
                基本的.NET Framework 类型的名称。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示反序列化的对象不能实例化，因为构造函数将引发安全异常。
            </summary>
      <param name="typeName">
                类型的名称。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示反序列化的对象不能实例化，因为没有可用的构造函数。
            </summary>
      <param name="typeName">
                类型的名称。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>
              创建 <see cref="T:System.InvalidCastException" /> ，该值指示显式引用转换失败。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 对象不能强制转换为。
                 此类型将合并到的异常消息。
              </param>
      <param name="value">
                不能强制转换的对象。
                 此对象将合并到的异常消息。
              </param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidCastException" /> ，该值指示显式引用转换失败。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 对象不能强制转换为。
                 此类型将合并到的异常消息。
              </param>
      <param name="value">
                不能强制转换的对象。
                 此对象将合并到的异常消息。
              </param>
      <param name="id">
                一个字符串标识符。
              </param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示映射到 XML 架构数据类型的派生的类型不能为所在。
            </summary>
      <param name="name">
                派生类型映射到不可用的 XML 架构数据类型的本地名称。
              </param>
      <param name="ns">
                映射到不可用的派生类型的 XML 架构数据类型的命名空间。
              </param>
      <param name="clrType">
                为其派生的类型找不到.NET Framework 基类型的全名。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示 SOAP 编码集合类型不能进行修改并不能填充其值。
            </summary>
      <param name="name">
                映射的.NET Framework 类型的完全限定的名称。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示枚举值无效。
            </summary>
      <param name="value">
                不是有效的枚举值。
              </param>
      <param name="enumType">
                枚举类型中。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> 该异常指示的当前位置 <see cref="T:System.Xml.XmlReader" /> 表示未知的 XML 节点。
            </summary>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示一种类型是未知。
            </summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它表示未知类型的名称。
              </param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 异常。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>
              获取或设置一个值，确定 XML 字符串将转换为有效的.NET Framework 类型名称。
            </summary>
      <returns>
        <see langword="true" /> 如果 XML 字符串解码为有效的.NET Framework 类型名称;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>
              获取到其中的 XML 文档要反序列化的 XML 文档对象。
            </summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> 表示反序列化 <see cref="T:System.Xml.XmlDocument" /> 数据。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>
              确保给定的数组或一个副本，大到足以包含指定的索引。
            </summary>
      <param name="a">
        <see cref="T:System.Array" /> 正在检查。
              </param>
      <param name="index">
                所需的索引。
              </param>
      <param name="elementType">
        <see cref="T:System.Type" /> 的数组的元素。
              </param>
      <returns>
              现有 <see cref="T:System.Array" />, ，如果已足够大; 否则为，新的、 更大的数组，其中包含原始数组元素。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>
              填充 SOAP 编码的数组，其数据类型映射到.NET Framework 引用类型的值。
            </summary>
      <param name="fixup">
                一个包含填充其值的数组的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>
              获取 SOAP 编码的数组的长度其中 <see cref="T:System.Xml.XmlReader" /> 当前所处。
            </summary>
      <param name="name">
                数组应具有本地名称。
              </param>
      <param name="ns">
                数组应具有命名空间。
              </param>
      <returns>
              SOAP 数组的长度。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>
              确定是否 XML 元素其中 <see cref="T:System.Xml.XmlReader" /> 当前所处的 null 属性设置为值 <see langword="true" />。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="T:System.Xml.XmlReader" /> 当前置于其上具有值为 null 属性 <see langword="true" />; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>
              获取要反序列化的对象从 SOAP 编码 <see langword="multiRef" /> 元素，而存储以前由 <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />。
            </summary>
      <param name="id">
                值 <see langword="id" /> 属性 <see langword="multiRef" /> 标识的元素的元素。
              </param>
      <returns>
              要从 SOAP 编码反序列化的对象 <see langword="multiRef" /> 元素。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>
              获取的值 <see langword="xsi:type" /> 当前位置的元素的 XML 属性 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <returns>
              XML 限定的名，该值指示 XML 元素的数据类型。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>
              初始化填充映射到 SOAP 编码的 XML 数据的对象的回调方法。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>
              将存储中的元素和属性名称 <see cref="T:System.Xml.NameTable" /> 对象。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>
              获取或设置一个值，应为 <see langword="true" /> 对于 SOAP 1.1，将返回值。
            </summary>
      <returns>
        <see langword="true" />, 如果该值是返回值。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>
              确定是否 XML 属性名称指示的 XML 命名空间。
            </summary>
      <param name="name">
                XML 属性的名称。
              </param>
      <returns>
        <see langword="true " />如果 XML 属性名称指示 XML 命名空间;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>
              设置 XML 属性的值，如果它属于类型 <see langword="arrayType" /> 来自 Web 服务描述语言 (WSDL) 命名空间。
            </summary>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> ，可能有类型 <see langword="wsdl:array" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>
              使 <see cref="T:System.Xml.XmlReader" /> 读取当前所在的元素的完全限定的名称。
            </summary>
      <returns>
              当前的 XML 元素的完全限定的名称。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>
              使 <see cref="T:System.Xml.XmlReader" /> 读取 XML 结束标记。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>
              获取 <see cref="T:System.Xml.XmlReader" /> 正在使用的对象 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。
            </summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> ，正由 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>
              获取当前数 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <returns>
              当前计数 <see cref="T:System.Xml.XmlReader" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 读取当前 XML 元素，如果该元素有一个空属性与值 true。
            </summary>
      <returns>
        <see langword="true" /> 如果元素具有 null ="true" 属性值，读取; 否则为已经 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 读取当前所在的元素的完全限定的名称。
            </summary>
      <returns>
              A <see cref="T:System.Xml.XmlQualifiedName" /> ，它表示的完全限定名的当前 XML 元素; 否则为 <see langword="null" /> 如果 null ="true" 属性值是否存在。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 读取可能是一个简单、 纯文本 XML 元素 <see langword="null" />。
            </summary>
      <returns>
              字符串值;否则为 <see langword="null" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>
              读取的值 <see langword="href" /> 属性 (<see langword="ref" /> 对 SOAP 1.2 的属性)，用于在 SOAP 编码的 XML 元素引用。
            </summary>
      <param name="fixupReference">
                到其中的输出字符串 <see langword="href" /> 读取属性值。
              </param>
      <returns>
        <see langword="true" /> 如果已读取的值;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>
              反序列化将对象从 SOAP 编码 <see langword="multiRef" /> XML 元素。
            </summary>
      <returns>
              在文档中引用的元素的值。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>
              反序列化将对象从 SOAP 编码 <see langword="multiRef" /> XML 元素。
            </summary>
      <param name="name">
                元素的 XML 架构数据类型的本地名称。
              </param>
      <param name="ns">
                元素的 XML 架构数据类型的命名空间。
              </param>
      <returns>
              在文档中引用的元素的值。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>
              反序列化对象从 SOAP 编码 <see langword="multiRef" /> SOAP 消息中的元素。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>
              反序列化将对象从一个 XML 元素中包含的引用的 SOAP 消息 <see langword="multiRef" /> 元素。
            </summary>
      <param name="fixupReference">
                到其中的输出字符串 <see langword="href" /> 读取属性值。
              </param>
      <returns>
              反序列化的对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>
              反序列化将对象从一个 XML 元素中包含的引用的 SOAP 消息 <see langword="multiRef" /> 元素。
            </summary>
      <param name="name">
                元素的 XML 架构数据类型的本地名称。
              </param>
      <param name="ns">
                元素的 XML 架构数据类型的命名空间。
              </param>
      <param name="fixupReference">
                到其中的输出字符串 <see langword="href" /> 读取属性值。
              </param>
      <returns>
              反序列化的对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>
              反序列化将对象从一个 XML 元素中包含的引用的 SOAP 消息 <see langword="multiRef" /> 元素。
            </summary>
      <param name="name">
                元素的 XML 架构数据类型的本地名称。
              </param>
      <param name="ns">
                元素的 XML 架构数据类型的命名空间。
              </param>
      <param name="elementCanBeType">
        <see langword="true" /> 如果元素名称也是 XML 架构数据类型名称;否则为 <see langword="false" />。
              </param>
      <param name="fixupReference">
                到其中的输出字符串的值 <see langword="href" /> 读取的属性。
              </param>
      <returns>
              反序列化的对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>
              填充将对象从其 XML 表示形式的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 对应的当前位置 <see cref="T:System.Xml.XmlReader" />。
              </param>
      <returns>
              实现的对象 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 从位置填充其成员的接口 <see cref="T:System.Xml.XmlReader" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>
              此方法支持 .NET Framework 基础结构，但不适合直接在代码中使用。
            </summary>
      <param name="serializable">
                对应的 XMLReader 当前位置的 IXmlSerializable 对象。
              </param>
      <param name="wrappedAny">
                指定是否包装可序列化的对象。
              </param>
      <returns>
              与从 XmlReader 位置填充其成员实现 IXmlSerializable 接口的对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>
              返回到调用的结果 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法 <see cref="T:System.Xml.XmlReader" /> 类中，移除空白，如果需要并追加到输入的值。
            </summary>
      <param name="value">
                将追加到一个字符串。
              </param>
      <param name="trim">
        <see langword="true" /> 如果应删除读取操作的结果;否则为 <see langword="false" />。
              </param>
      <returns>
              读取操作被追加到输入的值的结果。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>
              产生的结果是对的调用 <see cref="M:System.Xml.XmlReader.ReadString" /> 追加到输入的值的方法。
            </summary>
      <param name="value">
                前缀对的调用结果的字符串 <see cref="M:System.Xml.XmlReader.ReadString" /> 方法。
              </param>
      <returns>
              对调用结果 <see cref="M:System.Xml.XmlReader.ReadString" /> 追加到输入的值的方法。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>
              读取允许空值的 XML 元素 (<see langword="xsi:nil = 'true'" />)，并返回一个泛型 <see cref="T:System.Nullable`1" /> 值。
            </summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它表示的当前位置的简单数据类型 <see cref="T:System.Xml.XmlReader" />。
              </param>
      <returns>
              一个泛型 <see cref="T:System.Nullable`1" /> 表示 null XML 值。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>
              获取位于该位置的 XML 节点的值 <see cref="T:System.Xml.XmlReader" /> 当前所处。
            </summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，它表示的当前位置的简单数据类型 <see cref="T:System.Xml.XmlReader" />。
              </param>
      <returns>
              作为.NET Framework 值类型，如果值为简单的 XML 架构数据类型节点的值。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 读取 XML 文档根元素在其当前位置。
            </summary>
      <param name="wrapped">
        <see langword="true" /> 如果只在读取元素的开始元素; 之后，该方法应读取内容否则为 <see langword="false" />。
              </param>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> ，其中包含已读取的根元素。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 读取 XML 节点在其当前位置。
            </summary>
      <param name="wrapped">
        <see langword="true" /> 若要只在读取元素的开始元素; 之后读取内容否则为 <see langword="false" />。
              </param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> 表示已读取的 XML 节点。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>
              存储对象要反序列化从 SOAP 编码 <see langword="multiRef" /> 元素。
            </summary>
      <param name="o">
                要进行反序列化的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>
              按名称获取动态生成的程序集。
            </summary>
      <param name="assemblyFullName">
                程序集的全名。
              </param>
      <returns>
              动态生成 <see cref="T:System.Reflection.Assembly" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>
              确保给定的数组或一个副本，不超过指定的长度。
            </summary>
      <param name="a">
                正在检查的数组。
              </param>
      <param name="length">
                该数组的最大长度。
              </param>
      <param name="elementType">
        <see cref="T:System.Type" /> 的数组的元素。
              </param>
      <param name="isNullable">
        <see langword="true" /> 如果 <see langword="null" /> 对于数组，如果存在输入数组，可返回; 否则为新的、 较小的数组。
              </param>
      <returns>
              现有 <see cref="T:System.Array" />, ，如果已调整到足够小时; 否则，新的、 较小的数组，其中包含原始数组元素，直到的大小<paramref name=" length" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>
              将生成从输入字符串的 base 64 字节数组。
            </summary>
      <param name="value">
                要转换为 base 64 字节数组的字符串。
              </param>
      <returns>
              一个 base 64 字节数组。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 读取在其当前位置的字符串值并将其返回为 base 64 字节数组。
            </summary>
      <param name="isNull">
        <see langword="true" /> 若要返回 <see langword="null" />; <see langword="false" /> 返回 base 64 字节数组。
              </param>
      <returns>
              Base 64 字节数组;否则为 <see langword="null" /> 如果的值 <paramref name="isNull" /> 参数是 <see langword="true" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>
              指示 <see cref="T:System.Xml.XmlReader" /> 要读取的字符串值在其当前位置并将其作为一个十六进制的字节数组返回。
            </summary>
      <param name="isNull">
        <see langword="true" /> 若要返回 <see langword="null" />; <see langword="false" /> 返回十六进制字节数组。
              </param>
      <returns>
              十六进制字节数组;否则为 <see langword="null" /> 如果的值 <paramref name="isNull" /> 参数是 true。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>
              从输入字符串中生成一个十六进制字节数组。
            </summary>
      <param name="value">
                要转换为十六进制字节数组的字符串。
              </param>
      <returns>
              一个十六进制字节数组。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>
              生成 <see cref="T:System.Char" /> 从输入字符串的对象。
            </summary>
      <param name="value">
                要转换为字符串 <see cref="T:System.Char" /> 对象。
              </param>
      <returns>
              一个 <see cref="T:System.Char" /> 对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>
              生成 <see cref="T:System.DateTime" /> 从输入字符串的对象。
            </summary>
      <param name="value">
                要转换为字符串 <see cref="T:System.DateTime" /> 类对象。
              </param>
      <returns>
              一个 <see cref="T:System.DateTime" />对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>
              生成 <see cref="T:System.DateTime" /> 从输入字符串的对象。
            </summary>
      <param name="value">
                要转换为字符串 <see cref="T:System.DateTime" /> 对象。
              </param>
      <returns>
              一个 <see cref="T:System.DateTime" /> 对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>
              生成从字符串，其中包含从枚举器列表表示常量的分隔标识符的数值的枚举值。
            </summary>
      <param name="value">
                组成的字符串分隔的标识符，其中每个标识符都表示集合的枚举列表中从一个常量。
              </param>
      <param name="h">
                一个 <see cref="T:System.Collections.Hashtable" /> ，它包含作为键的标识符和作为整数常量。
              </param>
      <param name="typeName">
                枚举类型的名称。
              </param>
      <returns>
              作为一系列按位枚举值包含一个 long 值 <see langword="OR" /> 操作。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>
              生成 <see cref="T:System.DateTime" /> 从字符串，表示的时间。
            </summary>
      <param name="value">
                要转换为字符串 <see cref="T:System.DateTime" /> 对象。
              </param>
      <returns>
              一个 <see cref="T:System.DateTime" /> 对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>
              对 XML 名称进行解码。
            </summary>
      <param name="value">
                要解码的 XML 名称。
              </param>
      <returns>
              已解码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>
              对 XML 名称进行解码。
            </summary>
      <param name="value">
                要解码的 XML 名称。
              </param>
      <returns>
              已解码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>
              对 XML 名称进行解码。
            </summary>
      <param name="value">
                要解码的 XML 名称。
              </param>
      <returns>
              已解码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>
              对 XML 名称进行解码。
            </summary>
      <param name="value">
                要解码的 XML 名称。
              </param>
      <returns>
              已解码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>
              获取 <see cref="T:System.Xml.XmlQualifiedName" /> 从可能包含前缀的名称。
            </summary>
      <param name="value">
                一个可能包含前缀的名称。
              </param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> 表示命名空间限定的 XML 名称。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="o">
                一个对象， <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化，随后可通过访问 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 属性。
              </param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> 表示的相关属性的。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="o">
                一个对象， <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化，随后可通过访问 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 属性。
              </param>
      <param name="attr">
                一个 <see cref="T:System.Xml.XmlAttribute" /> 表示的相关属性的。
              </param>
      <param name="qnames">
                以逗号分隔列表的 XML 限定名。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="o">
        <see cref="T:System.Object" /> ，反序列化。
              </param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" /> 为引发一个事件。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="o">
                一个对象， <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化，随后可通过访问 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 属性。
              </param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" /> 为引发一个事件。
              </param>
      <param name="qnames">
                以逗号分隔列表的 XML 限定名。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="o">
                要反序列化对象。
              </param>
      <param name="qnames">
                以逗号分隔列表的 XML 限定名。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="o">
                要反序列化对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>
              引发 <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 事件的当前位置 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="id">
                用于标识未引用的对象，随后可通过访问的唯一字符串 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> 属性。
              </param>
      <param name="o">
                一个对象， <see cref="T:System.Xml.Serialization.XmlSerializer" /> 尝试反序列化，随后可通过访问 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> 属性。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>
              委托，它由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 从 SOAP 编码的非根 XML 数据类型的序列化的类。
            </summary>
      <param name="o">
                正在序列化的对象。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>
              表示一个抽象类，用于控制序列化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>
              将存储的实现 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委托，它适用于，更高版本调用的类型。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 序列化的对象。
              </param>
      <param name="typeName">
                将序列化的对象类型的名称。
              </param>
      <param name="typeNs">
                将序列化的对象类型的命名空间。
              </param>
      <param name="callback">
                一个实例 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 委托。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示的意外符合 XML 架构的元素名称 <see langword="choice" /> 元素声明。
            </summary>
      <param name="value">
                不是有效名称。
              </param>
      <param name="identifier">
        <see langword="choice" /> 属于的名称的元素声明。
              </param>
      <param name="name">
                元素的预期的本地名称。
              </param>
      <param name="ns">
                预期的命名空间的元素。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 已无效应用于成员; 仅属于类型的成员 <see cref="T:System.Xml.XmlNode" />, ，或从派生 <see cref="T:System.Xml.XmlNode" />, ，都有效。
            </summary>
      <param name="o">
                表示无效的成员的对象。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 已无效应用于成员; 仅属于类型的成员 <see cref="T:System.Xml.XmlNode" />, ，或从派生 <see cref="T:System.Xml.XmlNode" />, ，都有效。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 这是无效。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> 指示写入数组，其中 XML 架构时故障 <see langword="choice" /> 元素声明应用。
            </summary>
      <param name="type">
                正在序列化的类型。
              </param>
      <param name="identifier">
                名称 <see langword="choice" /> 元素声明。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> 为无效的枚举值。
            </summary>
      <param name="value">
                一个对象，表示无效的枚举。
              </param>
      <param name="typeName">
                XML 类型名称。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，该值指示 XML 元素的值与枚举类型不匹配。
            </summary>
      <param name="value">
                无效值。
              </param>
      <param name="elementName">
                具有无效的值的 XML 元素的名称。
              </param>
      <param name="enumValue">
                有效的值。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> 该异常指示应遵循 XML 架构的 XML 元素 <see langword="any" /> 无法处理元素声明。
            </summary>
      <param name="name">
                无法处理 XML 元素。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，指示正在序列化的类型未使用有效的方式或意外地发生。
            </summary>
      <param name="o">
                其类型不能序列化的对象。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>
              创建 <see cref="T:System.InvalidOperationException" /> ，指示正在序列化的类型未使用有效的方式或意外地发生。
            </summary>
      <param name="type">
                不能序列化的类型。
              </param>
      <returns>
              新创建的异常。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>
              获取或设置一个值，该值指示是否 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 方法用于编写有效的 XML。
            </summary>
      <returns>
        <see langword="true" /> 如果 <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> 方法返回一个经过编码名称; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>
              处理一个 base 64 字节数组。
            </summary>
      <param name="value">
                Base 64 <see cref="T:System.Byte" /> 数组。
              </param>
      <returns>
              作为参数传递相同的字节数组。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>
              从字符串生成输入的十六进制字节数组。
            </summary>
      <param name="value">
                要转换为字符串的十六进制字节数组。
              </param>
      <returns>
              字节数组值转换为字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>
              从输入字符串生成 <see cref="T:System.Char" />。
            </summary>
      <param name="value">
                一个 <see cref="T:System.Char" /> 要转换为一个字符串。
              </param>
      <returns>
        <see cref="T:System.Char" /> 值转换为字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>
              从字符串生成 <see cref="T:System.DateTime" /> 对象。
            </summary>
      <param name="value">
                一个 <see cref="T:System.DateTime" /> 要转换为一个字符串。
              </param>
      <returns>
              字符串表示形式 <see cref="T:System.DateTime" /> 显示日期，但没有时间。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>
              从输入字符串生成 <see cref="T:System.DateTime" />。
            </summary>
      <param name="value">
                一个 <see cref="T:System.DateTime" /> 要转换为一个字符串。
              </param>
      <returns>
              字符串表示形式 <see cref="T:System.DateTime" /> 显示的日期和时间。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>
              生成表示已设置的枚举成员的分隔标识符包含一个字符串。
            </summary>
      <param name="value">
                作为一系列按位枚举值 <see langword="OR" /> 操作。
              </param>
      <param name="values">
                枚举的名称值。
              </param>
      <param name="ids">
                枚举的常量值。
              </param>
      <returns>
              分隔的标识符，每个设置的枚举器列表表示的成员组成的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>
              采用数字枚举值的名称和枚举的枚举器列表中的常量并返回表示已设置的枚举成员的分隔标识符的组成的字符串。
            </summary>
      <param name="value">
                作为一系列按位枚举值 <see langword="OR" /> 操作。
              </param>
      <param name="values">
                枚举的值。
              </param>
      <param name="ids">
                枚举的常数。
              </param>
      <param name="typeName">
                类型的名称 
              </param>
      <returns>
              组成的字符串分隔的标识符，其中每一项是设置的按位运算的值之一。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>
              从字符串生成 <see cref="T:System.DateTime" /> 对象。
            </summary>
      <param name="value">
                一个 <see cref="T:System.DateTime" /> 转换为一个字符串。
              </param>
      <returns>
              字符串表示形式 <see cref="T:System.DateTime" /> 显示时间，但没有日期的对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>
              通过替换不能使用转义序列的字符编码有效的 XML 名称。
            </summary>
      <param name="name">
                要用作 XML 名称的字符串。
              </param>
      <returns>
              已编码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>
              通过替换不能使用转义序列的字符编码是有效的 XML 本地名称。
            </summary>
      <param name="ncName">
                要用作本地 （非限定） 的 XML 名称的字符串。
              </param>
      <returns>
              已编码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>
              对 XML 名称进行编码。
            </summary>
      <param name="nmToken">
                要进行编码的 XML 名称。
              </param>
      <returns>
              已编码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>
              将编码 XML 名称到单个的 XML 名称的以空格分隔的序列。
            </summary>
      <param name="nmTokens">
                用空格分隔的 XML 名称进行编码的序列。
              </param>
      <returns>
              已编码的字符串。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>
              生成可以作为 XML 限定名，会写入具有无效的字符都由转义序列替换的字符串。
            </summary>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，表示要写入的 XML。
              </param>
      <param name="ignoreEmpty">
        <see langword="true" /> 若要忽略空字符串; 中的空格否则为 <see langword="false" />。
              </param>
      <returns>
              一个 XML 限定的名，包含无效字符替换为转义序列。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>
              返回 XML 限定的名称，包含无效字符替换为转义序列。
            </summary>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> ，表示要写入的 XML。
              </param>
      <returns>
              一个 XML 限定的名，包含无效字符替换为转义序列。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>
              初始化的实例 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> SOAP 编码的 XML 数据进行序列化的委托。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>
              获取或设置包含命名空间和用于生成 XML 文档中的限定的名称的前缀的 XML 限定名称对象的列表。
            </summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> ，其中包含的命名空间和前缀对。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>
              按名称获取动态生成的程序集。
            </summary>
      <param name="assemblyFullName">
                程序集的全名。
              </param>
      <returns>
              动态生成的程序集。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>
              只有在序列化 SOAP 编码 SOAP 消息时，初始化的对象引用。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>
              指示 <see cref="T:System.Xml.XmlWriter" /> 要写入的 XML 特性对象具有未指定其名称为命名空间。
            </summary>
      <param name="localName">
                XML 属性的本地名称。
              </param>
      <param name="value">
                一个字节数组形式的 XML 属性的值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>
              指示 <see cref="T:System.Xml.XmlWriter" /> 编写 XML 属性都未指定其名称为命名空间。
            </summary>
      <param name="localName">
                XML 属性的本地名称。
              </param>
      <param name="value">
                字符串形式的 XML 属性的值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>
              指示 <see cref="T:System.Xml.XmlWriter" /> 对象写入 XML 特性。
            </summary>
      <param name="localName">
                XML 属性的本地名称。
              </param>
      <param name="ns">
                XML 特性的命名空间。
              </param>
      <param name="value">
                一个字节数组形式的 XML 属性的值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>
              写入 XML 属性。
            </summary>
      <param name="localName">
                XML 属性的本地名称。
              </param>
      <param name="ns">
                XML 特性的命名空间。
              </param>
      <param name="value">
                字符串形式的 XML 属性的值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>
              写入命名空间前缀手动提供的 XML 属性。
            </summary>
      <param name="prefix">
                要写入的命名空间前缀。
              </param>
      <param name="localName">
                XML 属性的本地名称。
              </param>
      <param name="ns">
                表示由前缀的命名空间。
              </param>
      <param name="value">
                字符串形式的 XML 属性的值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
              写入一个 XML 节点对象的已命名的 XML 元素的正文中。
            </summary>
      <param name="node">
                若要编写，可能是子 XML 元素的 XML 节点。
              </param>
      <param name="name">
                要写入的父 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的父 XML 元素的命名空间。
              </param>
      <param name="isNullable">
        <see langword="true" /> 若要编写 <see langword="xsi:nil='true'" /> 属性进行序列化的对象是否 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
      <param name="any">
        <see langword="true" /> 若要指示，节点，是否 XML 元素，符合 XML 架构 <see langword="any" /> 元素声明; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
              指示 <see cref="T:System.Xml.XmlWriter" /> 对象写入 <see cref="T:System.Xml.XmlNode" /> 命名的 XML 元素的正文中的对象。
            </summary>
      <param name="node">
                若要编写，可能是子 XML 元素的 XML 节点。
              </param>
      <param name="name">
                要写入的父 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的父 XML 元素的命名空间。
              </param>
      <param name="isNullable">
        <see langword="true" /> 若要编写 <see langword="xsi:nil='true'" /> 属性进行序列化的对象是否 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
      <param name="any">
        <see langword="true" /> 若要指示，节点，是否 XML 元素，符合 XML 架构 <see langword="any" /> 元素声明; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入具有指定限定名的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的名称，使用其前缀如果命名空间限定的以元素文本。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入具有指定限定名的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                要写入的名称，使用其前缀如果命名空间限定的以元素文本。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入具有指定限定名的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                要写入的名称，使用其前缀如果命名空间限定的以元素文本。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入具有指定限定名的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的名称，使用其前缀如果命名空间限定的以元素文本。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                要写入而无需命名空间限定的 XML 元素本地名称。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="ns">
                XML 元素的命名空间。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>
              在其主体中写入指定的值的 XML 元素。
            </summary>
      <param name="localName">
                XML 元素的本地名称。
              </param>
      <param name="value">
                XML 元素的文本值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>
              写入其正文为空的 XML 元素。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>
              写入其正文为空的 XML 元素。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>
              写入 <see langword="&lt;closing&gt;" /> 元素标记。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>
              写入 <see langword="&lt;closing&gt;" /> 元素标记。
            </summary>
      <param name="o">
                正在序列化的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>
              写入 <see langword="id" /> 属性将出现在 SOAP 编码 <see langword="multiRef" /> 元素。
            </summary>
      <param name="o">
                正在序列化的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
              写入命名空间声明属性。
            </summary>
      <param name="xmlns">
                若要声明 XML 命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
              写入其正文包含有效的 XML 限定的名称的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的 XML 限定的名称。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              写入其正文包含有效的 XML 限定的名称的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的 XML 限定的名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              写入包含字符串作为正文的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的字符串。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>
              写入一个字节数组作为正文的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的字节数组。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>
              写入包含字符串作为正文的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的字符串。
              </param>
      <param name="xsiType">
                要写入到的 XML 架构数据类型的名称 <see langword="xsi:type" /> 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>
              写入包含字符串作为正文的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的字符串。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>
              写入一个字节数组作为正文的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的字节数组。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>
              写入包含字符串作为正文的 XML 元素。
              <see cref="T:System.Xml.XmlWriter" /> 将插入 <see langword="xsi:nil='true'" /> 属性字符串的值是如果 <see langword="null" />。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="value">
                要写入的 XML 元素的正文中的字符串。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>
              写入具有的 XML 元素 <see langword="xsi:nil='true'" /> 属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>
              写入具有的 XML 元素 <see langword="xsi:nil='true'" /> 属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>
              写入具有的 XML 元素 <see langword="xsi:nil='true'" /> 属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>
              写入具有的 XML 元素 <see langword="xsi:nil='true'" /> 属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>
              写入 SOAP 消息 XML 元素可以包含对引用 <see langword="multiRef" /> 给定对象的 XML 元素。
            </summary>
      <param name="n">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                当前的 XML 元素中对象被序列化或 <see langword="multiRef" /> 元素所引用的当前元素。
              </param>
      <param name="ambientType">
                对象的类型映射中存储的类型 (而不是该对象的类型找到直接通过 <see langword="typeof" /> 操作)。
              </param>
      <param name="suppressReference">
        <see langword="true" /> 若要将对象序列化的 XML 元素直接插入，而不是使该元素引用另一个元素，其中包含数据;否则为 <see langword="false" />。
              </param>
      <param name="isNullable">
        <see langword="true" /> 若要编写 <see langword="xsi:nil='true'" /> 属性进行序列化的对象是否 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>
              写入 SOAP 消息 XML 元素可以包含对引用 <see langword="&lt;multiRef&gt;" /> 给定对象的 XML 元素。
            </summary>
      <param name="n">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                当前的 XML 元素中对象被序列化或 <see langword="multiRef" /> 引用的当前元素的元素。
              </param>
      <param name="ambientType">
                对象的类型映射中存储的类型 (而不是该对象的类型找到直接通过 <see langword="typeof" /> 操作)。
              </param>
      <param name="suppressReference">
        <see langword="true" /> 若要将对象序列化的 XML 元素直接插入，而不是使该元素引用另一个元素，其中包含数据;否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>
              写入 SOAP 消息 XML 元素可以包含对引用 <see langword="&lt;multiRef&gt;" /> 给定对象的 XML 元素。
            </summary>
      <param name="n">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                当前的 XML 元素中对象被序列化或 <see langword="multiRef" /> 元素所引用的当前元素。
              </param>
      <param name="ambientType">
                对象的类型映射中存储的类型 (而不是该对象的类型找到直接通过 <see langword="typeof" /> 操作)。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>
              写入 SOAP 消息 XML 元素可以包含对引用 <see langword="&lt;multiRef&gt;" /> 给定对象的 XML 元素。
            </summary>
      <param name="n">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                当前的 XML 元素中对象被序列化或 <see langword="multiRef" /> 引用的当前元素的元素。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>
              获取或设置 <see cref="T:System.Xml.XmlWriter" /> ，正由 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。
            </summary>
      <returns>
        <see cref="T:System.Xml.XmlWriter" /> 类实例所使用的。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>
              将对象序列化到 SOAP 编码 <see langword="multiRef" /> SOAP 消息中的 XML 元素。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>
              写入包含对引用的 SOAP 消息 XML 元素 <see langword="multiRef " />给定对象的元素。
            </summary>
      <param name="n">
                正在写入的引用元素本地名称。
              </param>
      <param name="ns">
                正在写入的引用元素的命名空间。
              </param>
      <param name="o">
                正在序列化的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>
              写入包含对引用的 SOAP 消息 XML 元素 <see langword="multiRef" /> 给定对象的元素。
            </summary>
      <param name="n">
                正在写入的引用元素本地名称。
              </param>
      <param name="ns">
                正在写入的引用元素的命名空间。
              </param>
      <param name="o">
                正在序列化的对象。
              </param>
      <param name="isNullable">
        <see langword="true" /> 若要编写 <see langword="xsi:nil='true'" /> 属性进行序列化的对象是否 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>
              写入具有指定限定名的 SOAP 1.2 RPC 结果元素在其主体中。
            </summary>
      <param name="name">
                结果正文的本地名称。
              </param>
      <param name="ns">
                结果正文的命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>
              写入的 XML 元素形式使用自定义 XML 格式的对象。
            </summary>
      <param name="serializable">
                实现的对象 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 接口，使用自定义 XML 格式。
              </param>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="isNullable">
        <see langword="true" /> 若要编写 <see langword="xsi:nil='true'" /> 属性如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 类对象是 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
              指示 <see cref="T:System.Xml.XmlNode" /> 编写为一个 XML 元素中使用自定义 XML 格式的对象。
            </summary>
      <param name="serializable">
                实现的对象 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 接口，使用自定义 XML 格式。
              </param>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="isNullable">
        <see langword="true" /> 若要编写 <see langword="xsi:nil='true'" /> 属性如果 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 对象是 <see langword="null" />; 否则为 <see langword="false" />。
              </param>
      <param name="wrapped">
        <see langword="true" /> 若要忽略写入开始元素标记;否则为 <see langword="false" /> 写入开始元素标记。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>
              写入 XML 声明如果编写器定位在 XML 文档的开头。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>
              写入开始元素标记，包括任何属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>
              写入开始元素标记，包括任何属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>
              写入开始元素标记，包括任何属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="writePrefixed">
        <see langword="true" /> 如果没有可用于指定命名空间;，编写带有前缀的元素名称否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>
              写入开始元素标记，包括任何属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                正在序列化的 XML 元素形式的对象。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>
              写入开始元素标记，包括任何属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                正在序列化的 XML 元素形式的对象。
              </param>
      <param name="writePrefixed">
        <see langword="true" /> 如果没有可用于指定命名空间;，编写带有前缀的元素名称否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
              写入开始元素标记，包括任何属性。
            </summary>
      <param name="name">
                要写入的 XML 元素本地名称。
              </param>
      <param name="ns">
                要写入的 XML 元素的命名空间。
              </param>
      <param name="o">
                正在序列化的 XML 元素形式的对象。
              </param>
      <param name="writePrefixed">
        <see langword="true" /> 如果没有可用于指定命名空间;，编写带有前缀的元素名称否则为 <see langword="false" />。
              </param>
      <param name="xmlns">
                一个实例 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 类，其中包含要在生成的 XML 中使用的前缀和命名空间对。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>
              写入的文本正文是简单的 XML 架构数据类型的值的 XML 元素。
            </summary>
      <param name="name">
                要写入的元素本地名称。
              </param>
      <param name="ns">
                要写入的元素的命名空间。
              </param>
      <param name="o">
                要进行序列化到元素体中的对象。
              </param>
      <param name="xsiType">
        <see langword="true" /> 如果 XML 元素显式指定的文本值的类型使用 <see langword="xsi:type" /> 属性; 否则为 <see langword="false" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>
              写入 base 64 字节数组。
            </summary>
      <param name="value">
                要写入的字节数组。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>
              将指定的字符串值。
            </summary>
      <param name="value">
                要写入的字符串值。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>
              将指定 <see cref="T:System.Xml.XmlNode" /> 作为 XML 属性的对象。
            </summary>
      <param name="node">
                要写入的 XML 节点。
              </param>
      <param name="container">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 对象 (或 <see langword="null" />) 用来生成的限定的名值 <see langword="arrayType" /> 来自 Web 服务描述语言 (WSDL) 命名空间 ("http://schemas.xmlsoap.org/wsdl/") 属性。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>
              将指定 <see cref="T:System.Xml.XmlNode" /> 作为 XML 属性。
            </summary>
      <param name="node">
                要写入的 XML 节点。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>
              写入 <see langword="xsi:type" /> 正在序列化到文档中的 XML 元素的属性。
            </summary>
      <param name="name">
                XML 架构数据类型的本地名称。
              </param>
      <param name="ns">
                XML 架构数据类型的命名空间。
              </param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>
              在对象和 XML 文档之间进行序列化和反序列化操作。
              <see cref="T:System.Xml.Serialization.XmlSerializer" /> 使您能够控制如何将对象编码为 XML。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类，它可以序列化的 XML 文档，将指定类型的对象反序列化 XML 文档化为指定类型的对象。
            </summary>
      <param name="type">
                对象的类型指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
              初始化的实例 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类使用映射到另一种类型的对象。
            </summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> ，它映射到另一种类型。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类，它可以序列化的 XML 文档，将指定类型的对象反序列化 XML 文档化为指定类型的对象。
               指定所有 XML 元素的默认命名空间。
            </summary>
      <param name="type">
                对象的类型指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
      <param name="defaultNamespace">
                要使用的所有 XML 元素的默认命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类，它可以序列化的 XML 文档，将指定类型的对象反序列化 XML 文档化为指定类型的对象。
               如果属性或字段返回一个数组， <paramref name="extraTypes" /> 参数指定可以插入到数组的对象。
            </summary>
      <param name="type">
                对象的类型指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
      <param name="extraTypes">
                一个 <see cref="T:System.Type" /> 的其他对象类型进行序列化的数组。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类，它可以序列化的 XML 文档，将指定类型的对象反序列化 XML 文档化为指定类型的对象。
               要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。
            </summary>
      <param name="type">
                要序列化的对象类型。
              </param>
      <param name="overrides">
                一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类，它可以序列化的 XML 文档，将指定类型的对象将 XML 文档反序列化为指定类型的对象。
               它还指定要用作 XML 根元素的类。
            </summary>
      <param name="type">
                对象的类型指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 表示的 XML 根元素。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以序列化类型的对象的类 <see cref="T:System.Object" /> XML 文档实例，并反序列化到类型的对象的 XML 文档实例 <see cref="T:System.Object" />。
               要序列化每个对象本身可包含的类，此重载将覆盖与其他类的实例。
               此重载还指定了所有的 XML 元素和类以用作 XML 根元素的默认命名空间。
            </summary>
      <param name="type">
                对象的类型指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> ，它扩展或重写中指定的类的行为 <paramref name="type" /> 参数。
              </param>
      <param name="extraTypes">
                一个 <see cref="T:System.Type" /> 的其他对象类型进行序列化的数组。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> ，它定义了 XML 根元素属性。
              </param>
      <param name="defaultNamespace">
                在 XML 文档中的所有 XML 元素的默认命名空间。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以序列化类型的对象的类 <see cref="T:System.Object" /> XML 文档实例，并反序列化到类型的对象的 XML 文档实例 <see cref="T:System.Object" />。
               要序列化每个对象本身可包含的类，此重载将覆盖与其他类的实例。
               此重载还指定了所有的 XML 元素和类以用作 XML 根元素的默认命名空间。
            </summary>
      <param name="type">
                对象的类型指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> ，它扩展或重写中指定的类的行为 <paramref name="type" /> 参数。
              </param>
      <param name="extraTypes">
                一个 <see cref="T:System.Type" /> 的其他对象类型进行序列化的数组。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> ，它定义了 XML 根元素属性。
              </param>
      <param name="defaultNamespace">
                在 XML 文档中的所有 XML 元素的默认命名空间。
              </param>
      <param name="location">
                类型的位置。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>
              获取一个值，该值指示是否此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以反序列化指定的 XML 文档。
            </summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> ，它指向要反序列化的文档。
              </param>
      <returns>
        <see langword="true" /> 如果此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以反序列化对象， <see cref="T:System.Xml.XmlReader" /> 点为; 否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>
              返回用于读取 XML 文档进行序列化的对象。
            </summary>
      <returns>
              一个用于读取 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。
            </returns>
      <exception cref="T:System.NotImplementedException">
                  任何尝试进行不在子代类中重写时，访问该方法。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>
              当在派生类中重写，返回用于序列化对象编写器。
            </summary>
      <returns>
              一个实例，它实现 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 类。
            </returns>
      <exception cref="T:System.NotImplementedException">
                  任何尝试进行不在子代类中重写时，访问该方法。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>
              包含由指定的 XML 文档反序列化 <see cref="T:System.IO.Stream" />。
            </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> ，其中包含要反序列化的 XML 文档。
              </param>
      <returns>
        <see cref="T:System.Object" /> 要反序列化。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>
              包含由指定的 XML 文档反序列化 <see cref="T:System.IO.TextReader" />。
            </summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> ，其中包含要反序列化的 XML 文档。
              </param>
      <returns>
        <see cref="T:System.Object" /> 要反序列化。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  反序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>
              包含由指定的 XML 文档反序列化 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。
            </summary>
      <param name="reader">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> ，其中包含要反序列化的 XML 文档。
              </param>
      <returns>
              反序列化的对象。
            </returns>
      <exception cref="T:System.NotImplementedException">
                  任何尝试进行不在子代类中重写时，访问该方法。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>
              包含由指定的 XML 文档反序列化 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> ，其中包含要反序列化的 XML 文档。
              </param>
      <returns>
        <see cref="T:System.Object" /> 要反序列化。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  反序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>
              包含由指定的 XML 文档反序列化 <see cref="T:System.Xml.XmlReader" /> 和编码样式。
            </summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> ，其中包含要反序列化的 XML 文档。
              </param>
      <param name="encodingStyle">
                序列化的 XML 编码样式。
              </param>
      <returns>
              反序列化的对象。
            </returns>
      <exception cref="T:System.InvalidOperationException">
                  反序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>
              包含由指定的 XML 文档反序列化 <see cref="T:System.Xml.XmlReader" /> ，并允许在反序列化过程中发生的事件的重写。
            </summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> ，其中包含要反序列化的文档。
              </param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 类的实例。
              </param>
      <returns>
        <see cref="T:System.Object" /> 要反序列化。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>
              使用包含由指定的数据的对象进行反序列化 <see cref="T:System.Xml.XmlReader" />。
            </summary>
      <param name="xmlReader">
                一个实例 <see cref="T:System.Xml.XmlReader" /> 类，用于读取该文档。
              </param>
      <param name="encodingStyle">
                使用的编码。
              </param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 类的实例。
              </param>
      <returns>
              要反序列化对象。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>
              返回的实例 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类从指定的映射。
            </summary>
      <param name="mappings">
                一个 <see cref="T:System.Xml.Serialization.XmlMapping" /> 对象数组。
              </param>
      <param name="type">
        <see cref="T:System.Type" /> 反序列化的对象。
              </param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>
              返回的数组 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象的数组创建 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象。
            </summary>
      <param name="mappings">
                一个数组 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> ，它映射到另一种类型。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>
              返回的数组 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 创建从数组类型的对象。
            </summary>
      <param name="types">
                一个 <see cref="T:System.Type" /> 对象数组。
              </param>
      <returns>
              一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象数组。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>
              返回包含一个或多个版本的程序集的名称 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 专门为序列化或反序列化指定的类型创建。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 正在反序列化。
              </param>
      <returns>
              包含的程序集的名称 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类型。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>
              返回包含指定的命名空间中的指定类型的序列化程序的程序集的名称。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 您感兴趣。
              </param>
      <param name="defaultNamespace">
                类型的命名空间。
              </param>
      <returns>
              包含特殊生成序列化程序的程序集的名称。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.Xml.XmlWriter" />。
            </summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  在序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.Xml.XmlWriter" />, ，XML 命名空间和编码。
            </summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的对象。
              </param>
      <param name="namespaces">
                一个实例 <see langword="XmlSerializaerNamespaces" /> ，其中包含命名空间和前缀来使用。
              </param>
      <param name="encodingStyle">
                在文档中使用的编码。
              </param>
      <param name="id">
                对于 SOAP 编码消息，用于生成 id 属性的基数。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>
              序列化指定的对象，并使用指定的文件中写入 XML 文档 <see cref="T:System.Xml.XmlWriter" /> 和引用指定的命名空间和编码样式。
            </summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的对象。
              </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 引用的对象。
              </param>
      <param name="encodingStyle">
                序列化的 XML 编码样式。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  在序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.Xml.XmlWriter" /> ，并且引用指定的命名空间。
            </summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 引用的对象。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  在序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.IO.TextWriter" /> ，并且引用指定的命名空间。
            </summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> ，其中包含生成的 XML 文档的命名空间。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  在序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。
            </summary>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
      <param name="writer">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 用于写入 XML 文档。
              </param>
      <exception cref="T:System.NotImplementedException">
                  任何尝试进行不在子代类中重写时，访问该方法。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.IO.TextWriter" />。
            </summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.IO.Stream" />。
            </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  在序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
              将序列化为指定 <see cref="T:System.Object" /> ，并使用指定的文件中写入 XML 文档 <see cref="T:System.IO.Stream" />引用指定的命名空间。
            </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> 用于写入 XML 文档。
              </param>
      <param name="o">
                要序列化的 <see cref="T:System.Object" />。
              </param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 引用的对象。
              </param>
      <exception cref="T:System.InvalidOperationException">
                  在序列化期间出错。
                   原始的异常是使用 <see cref="P:System.Exception.InnerException" /> 属性。
                </exception>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>
              发生时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 属性。
            </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>
              发生时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 反序列化期间遇到未知类型的 XML 元素。
            </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>
              发生时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 反序列化期间遇到未知类型的 XML 节点。
            </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>
              在 SOAP 编码的 XML 流的反序列化过程中发生时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 遇到不使用或未引用的识别的类型。
            </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>
              应用于 Web 服务客户端代理，使您能够指定包含自定义序列化程序的程序集。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 初始化具有指定的程序集名称。
            </summary>
      <param name="assemblyName">
                简单、 非加密的程序集的名称。
              </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 使用指定的程序集名称和程序集的位置。
            </summary>
      <param name="assemblyName">
                简单、 非加密的程序集的名称。
              </param>
      <param name="codeBase">
                一个字符串，则该程序集的 URL 位置。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>
              获取或设置包含一组特定的类型的序列化程序的程序集的名称。
            </summary>
      <returns>
              简单、 非加密的程序集的名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>
              获取或设置包含序列化程序的程序集的位置。
            </summary>
      <returns>
              一个位置，如路径或 URI 指向程序集。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>
              创建类型化的版本的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 效率更高的序列化。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 类，该类用于序列化指定的类型。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 专为进行序列化指定的类型创建的类。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 类使用映射到另一种类型的对象。
            </summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> ，它映射到另一种类型。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 专门创建映射的类型进行序列化的类。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 类，该类用于序列化指定的类型和命名空间。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <param name="defaultNamespace">
                要使用的所有 XML 元素的默认命名空间。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 专为进行序列化指定的类型创建的类。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 类，该类用于序列化指定的类型。
               如果属性或字段返回一个数组， <paramref name="extraTypes" /> 参数指定可以插入到数组的对象。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <param name="extraTypes">
                一个 <see cref="T:System.Type" /> 的其他对象类型进行序列化的数组。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类可以序列化的 XML 文档，将指定类型的对象，反之亦然。
               要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> ，其中包含重写默认序列化行为的字段。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类可以序列化的 XML 文档，将指定类型的对象，反之亦然。
               指定表示的 XML 根元素的对象。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 表示的 XML 根元素。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类可以序列化的 XML 文档实例，将指定类型的对象，反之亦然。
               要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。
               此重载还指定了 XML 元素，并要用作 XML 根元素的类的默认命名空间。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> ，其中包含重写默认序列化行为的字段。
              </param>
      <param name="extraTypes">
                一个 <see cref="T:System.Type" /> 的其他对象类型进行序列化的数组。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 表示的 XML 根元素。
              </param>
      <param name="defaultNamespace">
                在 XML 文档中的所有 XML 元素的默认命名空间。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>
              返回的派生 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类可以序列化的 XML 文档实例，将指定类型的对象，反之亦然。
               要序列化每个对象本身可包含的类，此重载可以重写与其他类的实例。
               此重载还指定了 XML 元素，并要用作 XML 根元素的类的默认命名空间。
            </summary>
      <param name="type">
        <see cref="T:System.Type" /> 对象的此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可进行序列化。
              </param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> ，它扩展或将覆盖在类型参数中指定的类的行为。
              </param>
      <param name="extraTypes">
                一个 <see cref="T:System.Type" /> 的其他对象类型进行序列化的数组。
              </param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> ，它定义了 XML 根元素属性。
              </param>
      <param name="defaultNamespace">
                在 XML 文档中的所有 XML 元素的默认命名空间。
              </param>
      <param name="location">
                指定类型的位置的路径。
              </param>
      <returns>
              派生 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>
              定义预先生成的类型化序列化程序读取器、 作家和方法。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>
              获取一个值，确定是否可以序列化类型。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <returns>
        <see langword="true" /> 如果可以序列化该类型;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>
              返回指定类型的序列化程序。
            </summary>
      <param name="type">
                要序列化的 <see cref="T:System.Type" />。
              </param>
      <returns>
              一种类型的实例派生自 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>
              获取序列化程序使用的 XML 读取器对象。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 用于读取 XML 文档或数据流。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>
              获取用于读取数据流的方法的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.Hashtable" /> 包含的方法。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>
              获取在程序集中找到的类型化序列化程序的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.Hashtable" /> ，其中包含类型化序列化程序。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>
              获取用于写入数据流的方法的集合。
            </summary>
      <returns>
              一个 <see cref="T:System.Collections.Hashtable" /> 包含的方法。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>
              获取序列化程序的 XML 编写器对象。
            </summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 用于写入到 XML 数据的流或文档。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Contains the XML namespaces and prefixes that the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> uses to generate qualified names in an XML-document instance.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"></see> class, using the specified instance of XmlSerializerNamespaces containing the collection of prefix and namespace pairs.</summary>
      <param name="namespaces">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"></see> containing the namespace and prefix pairs.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"></see> class.</summary>
      <param name="namespaces">An array of <see cref="T:System.Xml.XmlQualifiedName"></see> objects.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Adds a prefix and namespace pair to an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"></see> object.</summary>
      <param name="prefix">The prefix associated with an XML namespace.</param>
      <param name="ns">An XML namespace.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Gets the number of prefix and namespace pairs in the collection.</summary>
      <returns>The number of prefix and namespace pairs in the collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Gets the array of prefix and namespace pairs in an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces"></see> object.</summary>
      <returns>An array of <see cref="System.Xml.XmlQualifiedName"></see> objects that are used as qualified names in an XML document.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>
              表示代码生成了序列化基础结构，此特性应用于程序集时可以重用来换取改善性能。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 指定类型的类。
            </summary>
      <param name="type">
                正在序列化类型。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>
              获取或设置程序集的公共语言运行时 (CLR) 命名空间。
            </summary>
      <returns>
              一个 <see cref="T:System.String" /> 包含程序集的公共语言运行时 (CLR) 命名空间。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>
              获取或设置父程序集的标识。
            </summary>
      <returns>
              父程序集的版本。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>
              获取或设置序列化程序进行操作的类型。
            </summary>
      <returns>
              要序列化的 <see cref="T:System.Type" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>
              获取或设置程序集的版本号。
            </summary>
      <returns>
              程序集的版本。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Indicates to the <see cref="T:System.Xml.Serialization.XmlSerializer"></see> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute"></see> class.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute"></see> class.</summary>
      <param name="type">The <see cref="T:System.Type"></see> of the member to be serialized.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <see cref="T:System.Xml.Serialization.XmlSerializer"></see>.</summary>
      <returns>An XML Schema (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document &amp;quot;XML Schema Part 2: Datatypes&amp;quot;.</returns>
      <exception cref="T:System.Exception">The XML Schema data type you have specified cannot be mapped to the .NET data type.</exception>
      <exception cref="T:System.InvalidOperationException">The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Gets or sets the type of the member.</summary>
      <returns>The <see cref="System.Type"></see> of the member.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>
              控制由序列化属性目标时，将生成的 XML 架构 <see cref="T:System.Xml.Serialization.XmlSerializer" />。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>
              初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类的新实例。
            </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>
              新实例初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 类并指定 XML 类型的名称。
            </summary>
      <param name="typeName">
                XML 名称键入 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 时它将序列化的类实例 （并识别它反序列化的类实例时），将生成。
              </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>
              获取或设置一个值，确定生成的架构类型是否为 XSD 匿名类型。
            </summary>
      <returns>
        <see langword="true" />, 如果生成的架构类型是 XSD 匿名类型;否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>
              获取或设置一个值，该值指示是否要在 XML 架构文档中包括该类型。
            </summary>
      <returns>
        <see langword="true" /> 要在 XML 架构文档; 中包括该类型否则为 <see langword="false" />。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>
              获取或设置 XML 类型的命名空间。
            </summary>
      <returns>
              XML 类型的命名空间。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>
              获取或设置 XML 类型的名称。
            </summary>
      <returns>
              XML 类型的名称。
            </returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>
              包含到另一种类型的映射。
            </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>
              包含命名空间 （或命名空间） 的完全限定的类型名称和类型。
            </summary>
      <returns>
              完全限定的类型名称
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>
              获取映射对象的类型名称。
            </summary>
      <returns>
              映射对象的类型名称。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>
              获取映射对象的 XML 元素名称。
            </summary>
      <returns>
              映射对象的 XML 元素名称。
               默认值为该对象的类名。
            </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>
              获取映射对象的 XML 命名空间。
            </summary>
      <returns>
              映射对象的 XML 命名空间。
               默认值为空字符串("")。
            </returns>
    </member>
  </members>
</doc>